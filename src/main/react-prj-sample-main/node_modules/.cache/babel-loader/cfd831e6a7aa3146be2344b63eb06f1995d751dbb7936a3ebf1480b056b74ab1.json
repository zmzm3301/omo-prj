{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Declaration = require('../declaration');\nvar InlineLogical = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(InlineLogical, _Declaration);\n  var _super = _createSuper(InlineLogical);\n  function InlineLogical() {\n    _classCallCheck(this, InlineLogical);\n    return _super.apply(this, arguments);\n  }\n  _createClass(InlineLogical, [{\n    key: \"prefixed\",\n    value:\n    /**\n     * Use old syntax for -moz- and -webkit-\n     */\n    function prefixed(prop, prefix) {\n      return prefix + prop.replace('-inline', '');\n    }\n\n    /**\n     * Return property name by spec\n     */\n  }, {\n    key: \"normalize\",\n    value: function normalize(prop) {\n      return prop.replace(/(margin|padding|border)-(start|end)/, '$1-inline-$2');\n    }\n  }]);\n  return InlineLogical;\n}(Declaration);\nInlineLogical.names = ['border-inline-start', 'border-inline-end', 'margin-inline-start', 'margin-inline-end', 'padding-inline-start', 'padding-inline-end', 'border-start', 'border-end', 'margin-start', 'margin-end', 'padding-start', 'padding-end'];\nmodule.exports = InlineLogical;","map":{"version":3,"names":["Declaration","require","InlineLogical","prop","prefix","replace","names","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/hacks/inline-logical.js"],"sourcesContent":["let Declaration = require('../declaration')\n\nclass InlineLogical extends Declaration {\n  /**\n   * Use old syntax for -moz- and -webkit-\n   */\n  prefixed(prop, prefix) {\n    return prefix + prop.replace('-inline', '')\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize(prop) {\n    return prop.replace(/(margin|padding|border)-(start|end)/, '$1-inline-$2')\n  }\n}\n\nInlineLogical.names = [\n  'border-inline-start',\n  'border-inline-end',\n  'margin-inline-start',\n  'margin-inline-end',\n  'padding-inline-start',\n  'padding-inline-end',\n  'border-start',\n  'border-end',\n  'margin-start',\n  'margin-end',\n  'padding-start',\n  'padding-end'\n]\n\nmodule.exports = InlineLogical\n"],"mappings":";;;;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAAA,IAErCC,aAAa;EAAA;;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACjB;AACF;AACA;IACE,kBAASC,IAAI,EAAEC,MAAM,EAAE;MACrB,OAAOA,MAAM,GAAGD,IAAI,CAACE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;IAC7C;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,mBAAUF,IAAI,EAAE;MACd,OAAOA,IAAI,CAACE,OAAO,CAAC,qCAAqC,EAAE,cAAc,CAAC;IAC5E;EAAC;EAAA;AAAA,EAbyBL,WAAW;AAgBvCE,aAAa,CAACI,KAAK,GAAG,CACpB,qBAAqB,EACrB,mBAAmB,EACnB,qBAAqB,EACrB,mBAAmB,EACnB,sBAAsB,EACtB,oBAAoB,EACpB,cAAc,EACd,YAAY,EACZ,cAAc,EACd,YAAY,EACZ,eAAe,EACf,aAAa,CACd;AAEDC,MAAM,CAACC,OAAO,GAAGN,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}