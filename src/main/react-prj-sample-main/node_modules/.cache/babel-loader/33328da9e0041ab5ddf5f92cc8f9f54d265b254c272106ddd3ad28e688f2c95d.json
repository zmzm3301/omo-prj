{"ast":null,"code":"var _createForOfIteratorHelper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar parser = require('postcss-value-parser');\nvar range = require('normalize-range');\nvar OldValue = require('../old-value');\nvar Value = require('../value');\nvar utils = require('../utils');\nvar IS_DIRECTION = /top|left|right|bottom/gi;\nvar Gradient = /*#__PURE__*/function (_Value) {\n  \"use strict\";\n\n  _inherits(Gradient, _Value);\n  var _super = _createSuper(Gradient);\n  function Gradient() {\n    _classCallCheck(this, Gradient);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Gradient, [{\n    key: \"replace\",\n    value:\n    /**\n     * Change degrees for webkit prefix\n     */\n    function replace(string, prefix) {\n      var ast = parser(string);\n      var _iterator = _createForOfIteratorHelper(ast.nodes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var node = _step.value;\n          var gradientName = this.name; // gradient name\n          if (node.type === 'function' && node.value === gradientName) {\n            node.nodes = this.newDirection(node.nodes);\n            node.nodes = this.normalize(node.nodes, gradientName);\n            if (prefix === '-webkit- old') {\n              var changes = this.oldWebkit(node);\n              if (!changes) {\n                return false;\n              }\n            } else {\n              node.nodes = this.convertDirection(node.nodes);\n              node.value = prefix + node.value;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return ast.toString();\n    }\n\n    /**\n     * Replace first token\n     */\n  }, {\n    key: \"replaceFirst\",\n    value: function replaceFirst(params) {\n      for (var _len = arguments.length, words = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        words[_key - 1] = arguments[_key];\n      }\n      var prefix = words.map(function (i) {\n        if (i === ' ') {\n          return {\n            type: 'space',\n            value: i\n          };\n        }\n        return {\n          type: 'word',\n          value: i\n        };\n      });\n      return prefix.concat(params.slice(1));\n    }\n\n    /**\n     * Convert angle unit to deg\n     */\n  }, {\n    key: \"normalizeUnit\",\n    value: function normalizeUnit(str, full) {\n      var num = parseFloat(str);\n      var deg = num / full * 360;\n      return \"\".concat(deg, \"deg\");\n    }\n\n    /**\n     * Normalize angle\n     */\n  }, {\n    key: \"normalize\",\n    value: function normalize(nodes, gradientName) {\n      if (!nodes[0]) return nodes;\n      if (/-?\\d+(.\\d+)?grad/.test(nodes[0].value)) {\n        nodes[0].value = this.normalizeUnit(nodes[0].value, 400);\n      } else if (/-?\\d+(.\\d+)?rad/.test(nodes[0].value)) {\n        nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI);\n      } else if (/-?\\d+(.\\d+)?turn/.test(nodes[0].value)) {\n        nodes[0].value = this.normalizeUnit(nodes[0].value, 1);\n      } else if (nodes[0].value.includes('deg')) {\n        var num = parseFloat(nodes[0].value);\n        num = range.wrap(0, 360, num);\n        nodes[0].value = \"\".concat(num, \"deg\");\n      }\n      if (gradientName === 'linear-gradient' || gradientName === 'repeating-linear-gradient') {\n        var direction = nodes[0].value;\n\n        // Unitless zero for `<angle>` values are allowed in CSS gradients and transforms.\n        // Spec: https://github.com/w3c/csswg-drafts/commit/602789171429b2231223ab1e5acf8f7f11652eb3\n        if (direction === '0deg' || direction === '0') {\n          nodes = this.replaceFirst(nodes, 'to', ' ', 'top');\n        } else if (direction === '90deg') {\n          nodes = this.replaceFirst(nodes, 'to', ' ', 'right');\n        } else if (direction === '180deg') {\n          nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom'); // default value\n        } else if (direction === '270deg') {\n          nodes = this.replaceFirst(nodes, 'to', ' ', 'left');\n        }\n      }\n      return nodes;\n    }\n\n    /**\n     * Replace old direction to new\n     */\n  }, {\n    key: \"newDirection\",\n    value: function newDirection(params) {\n      if (params[0].value === 'to') {\n        return params;\n      }\n      IS_DIRECTION.lastIndex = 0; // reset search index of global regexp\n      if (!IS_DIRECTION.test(params[0].value)) {\n        return params;\n      }\n      params.unshift({\n        type: 'word',\n        value: 'to'\n      }, {\n        type: 'space',\n        value: ' '\n      });\n      for (var i = 2; i < params.length; i++) {\n        if (params[i].type === 'div') {\n          break;\n        }\n        if (params[i].type === 'word') {\n          params[i].value = this.revertDirection(params[i].value);\n        }\n      }\n      return params;\n    }\n\n    /**\n     * Look for at word\n     */\n  }, {\n    key: \"isRadial\",\n    value: function isRadial(params) {\n      var state = 'before';\n      var _iterator2 = _createForOfIteratorHelper(params),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var param = _step2.value;\n          if (state === 'before' && param.type === 'space') {\n            state = 'at';\n          } else if (state === 'at' && param.value === 'at') {\n            state = 'after';\n          } else if (state === 'after' && param.type === 'space') {\n            return true;\n          } else if (param.type === 'div') {\n            break;\n          } else {\n            state = 'before';\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return false;\n    }\n\n    /**\n     * Change new direction to old\n     */\n  }, {\n    key: \"convertDirection\",\n    value: function convertDirection(params) {\n      if (params.length > 0) {\n        if (params[0].value === 'to') {\n          this.fixDirection(params);\n        } else if (params[0].value.includes('deg')) {\n          this.fixAngle(params);\n        } else if (this.isRadial(params)) {\n          this.fixRadial(params);\n        }\n      }\n      return params;\n    }\n\n    /**\n     * Replace `to top left` to `bottom right`\n     */\n  }, {\n    key: \"fixDirection\",\n    value: function fixDirection(params) {\n      params.splice(0, 2);\n      var _iterator3 = _createForOfIteratorHelper(params),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var param = _step3.value;\n          if (param.type === 'div') {\n            break;\n          }\n          if (param.type === 'word') {\n            param.value = this.revertDirection(param.value);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    /**\n     * Add 90 degrees\n     */\n  }, {\n    key: \"fixAngle\",\n    value: function fixAngle(params) {\n      var first = params[0].value;\n      first = parseFloat(first);\n      first = Math.abs(450 - first) % 360;\n      first = this.roundFloat(first, 3);\n      params[0].value = \"\".concat(first, \"deg\");\n    }\n\n    /**\n     * Fix radial direction syntax\n     */\n  }, {\n    key: \"fixRadial\",\n    value: function fixRadial(params) {\n      var first = [];\n      var second = [];\n      var a, b, c, i, next;\n      for (i = 0; i < params.length - 2; i++) {\n        a = params[i];\n        b = params[i + 1];\n        c = params[i + 2];\n        if (a.type === 'space' && b.value === 'at' && c.type === 'space') {\n          next = i + 3;\n          break;\n        } else {\n          first.push(a);\n        }\n      }\n      var div;\n      for (i = next; i < params.length; i++) {\n        if (params[i].type === 'div') {\n          div = params[i];\n          break;\n        } else {\n          second.push(params[i]);\n        }\n      }\n      params.splice.apply(params, [0, i].concat(second, [div], first));\n    }\n  }, {\n    key: \"revertDirection\",\n    value: function revertDirection(word) {\n      return Gradient.directions[word.toLowerCase()] || word;\n    }\n\n    /**\n     * Round float and save digits under dot\n     */\n  }, {\n    key: \"roundFloat\",\n    value: function roundFloat(float, digits) {\n      return parseFloat(float.toFixed(digits));\n    }\n\n    /**\n     * Convert to old webkit syntax\n     */\n  }, {\n    key: \"oldWebkit\",\n    value: function oldWebkit(node) {\n      var nodes = node.nodes;\n      var string = parser.stringify(node.nodes);\n      if (this.name !== 'linear-gradient') {\n        return false;\n      }\n      if (nodes[0] && nodes[0].value.includes('deg')) {\n        return false;\n      }\n      if (string.includes('px') || string.includes('-corner') || string.includes('-side')) {\n        return false;\n      }\n      var params = [[]];\n      var _iterator4 = _createForOfIteratorHelper(nodes),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var i = _step4.value;\n          params[params.length - 1].push(i);\n          if (i.type === 'div' && i.value === ',') {\n            params.push([]);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      this.oldDirection(params);\n      this.colorStops(params);\n      node.nodes = [];\n      for (var _i = 0, _params = params; _i < _params.length; _i++) {\n        var param = _params[_i];\n        node.nodes = node.nodes.concat(param);\n      }\n      node.nodes.unshift({\n        type: 'word',\n        value: 'linear'\n      }, this.cloneDiv(node.nodes));\n      node.value = '-webkit-gradient';\n      return true;\n    }\n\n    /**\n     * Change direction syntax to old webkit\n     */\n  }, {\n    key: \"oldDirection\",\n    value: function oldDirection(params) {\n      var div = this.cloneDiv(params[0]);\n      if (params[0][0].value !== 'to') {\n        return params.unshift([{\n          type: 'word',\n          value: Gradient.oldDirections.bottom\n        }, div]);\n      } else {\n        var words = [];\n        var _iterator5 = _createForOfIteratorHelper(params[0].slice(2)),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var node = _step5.value;\n            if (node.type === 'word') {\n              words.push(node.value.toLowerCase());\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n        words = words.join(' ');\n        var old = Gradient.oldDirections[words] || words;\n        params[0] = [{\n          type: 'word',\n          value: old\n        }, div];\n        return params[0];\n      }\n    }\n\n    /**\n     * Get div token from exists parameters\n     */\n  }, {\n    key: \"cloneDiv\",\n    value: function cloneDiv(params) {\n      var _iterator6 = _createForOfIteratorHelper(params),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var i = _step6.value;\n          if (i.type === 'div' && i.value === ',') {\n            return i;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      return {\n        type: 'div',\n        value: ',',\n        after: ' '\n      };\n    }\n\n    /**\n     * Change colors syntax to old webkit\n     */\n  }, {\n    key: \"colorStops\",\n    value: function colorStops(params) {\n      var result = [];\n      for (var i = 0; i < params.length; i++) {\n        var pos = void 0;\n        var param = params[i];\n        var item = void 0;\n        if (i === 0) {\n          continue;\n        }\n        var color = parser.stringify(param[0]);\n        if (param[1] && param[1].type === 'word') {\n          pos = param[1].value;\n        } else if (param[2] && param[2].type === 'word') {\n          pos = param[2].value;\n        }\n        var stop = void 0;\n        if (i === 1 && (!pos || pos === '0%')) {\n          stop = \"from(\".concat(color, \")\");\n        } else if (i === params.length - 1 && (!pos || pos === '100%')) {\n          stop = \"to(\".concat(color, \")\");\n        } else if (pos) {\n          stop = \"color-stop(\".concat(pos, \", \").concat(color, \")\");\n        } else {\n          stop = \"color-stop(\".concat(color, \")\");\n        }\n        var div = param[param.length - 1];\n        params[i] = [{\n          type: 'word',\n          value: stop\n        }];\n        if (div.type === 'div' && div.value === ',') {\n          item = params[i].push(div);\n        }\n        result.push(item);\n      }\n      return result;\n    }\n\n    /**\n     * Remove old WebKit gradient too\n     */\n  }, {\n    key: \"old\",\n    value: function old(prefix) {\n      if (prefix === '-webkit-') {\n        var type;\n        if (this.name === 'linear-gradient') {\n          type = 'linear';\n        } else if (this.name === 'repeating-linear-gradient') {\n          type = 'repeating-linear';\n        } else if (this.name === 'repeating-radial-gradient') {\n          type = 'repeating-radial';\n        } else {\n          type = 'radial';\n        }\n        var string = '-gradient';\n        var regexp = utils.regexp(\"-webkit-(\".concat(type, \"-gradient|gradient\\\\(\\\\s*\").concat(type, \")\"), false);\n        return new OldValue(this.name, prefix + this.name, string, regexp);\n      } else {\n        return _get(_getPrototypeOf(Gradient.prototype), \"old\", this).call(this, prefix);\n      }\n    }\n\n    /**\n     * Do not add non-webkit prefixes for list-style and object\n     */\n  }, {\n    key: \"add\",\n    value: function add(decl, prefix) {\n      var p = decl.prop;\n      if (p.includes('mask')) {\n        if (prefix === '-webkit-' || prefix === '-webkit- old') {\n          return _get(_getPrototypeOf(Gradient.prototype), \"add\", this).call(this, decl, prefix);\n        }\n      } else if (p === 'list-style' || p === 'list-style-image' || p === 'content') {\n        if (prefix === '-webkit-' || prefix === '-webkit- old') {\n          return _get(_getPrototypeOf(Gradient.prototype), \"add\", this).call(this, decl, prefix);\n        }\n      } else {\n        return _get(_getPrototypeOf(Gradient.prototype), \"add\", this).call(this, decl, prefix);\n      }\n      return undefined;\n    }\n  }]);\n  return Gradient;\n}(Value);\nGradient.names = ['linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient'];\nGradient.directions = {\n  top: 'bottom',\n  // default value\n  left: 'right',\n  bottom: 'top',\n  right: 'left'\n};\n\n// Direction to replace\nGradient.oldDirections = {\n  'top': 'left bottom, left top',\n  'left': 'right top, left top',\n  'bottom': 'left top, left bottom',\n  'right': 'left top, right top',\n  'top right': 'left bottom, right top',\n  'top left': 'right bottom, left top',\n  'right top': 'left bottom, right top',\n  'right bottom': 'left top, right bottom',\n  'bottom right': 'left top, right bottom',\n  'bottom left': 'right top, left bottom',\n  'left top': 'right bottom, left top',\n  'left bottom': 'right top, left bottom'\n};\nmodule.exports = Gradient;","map":{"version":3,"names":["parser","require","range","OldValue","Value","utils","IS_DIRECTION","Gradient","string","prefix","ast","nodes","node","gradientName","name","type","value","newDirection","normalize","changes","oldWebkit","convertDirection","toString","params","words","map","i","concat","slice","str","full","num","parseFloat","deg","test","normalizeUnit","Math","PI","includes","wrap","direction","replaceFirst","lastIndex","unshift","length","revertDirection","state","param","fixDirection","fixAngle","isRadial","fixRadial","splice","first","abs","roundFloat","second","a","b","c","next","push","div","word","directions","toLowerCase","float","digits","toFixed","stringify","oldDirection","colorStops","cloneDiv","oldDirections","bottom","join","old","after","result","pos","item","color","stop","regexp","decl","p","prop","undefined","names","top","left","right","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/hacks/gradient.js"],"sourcesContent":["let parser = require('postcss-value-parser')\nlet range = require('normalize-range')\n\nlet OldValue = require('../old-value')\nlet Value = require('../value')\nlet utils = require('../utils')\n\nlet IS_DIRECTION = /top|left|right|bottom/gi\n\nclass Gradient extends Value {\n  /**\n   * Change degrees for webkit prefix\n   */\n  replace(string, prefix) {\n    let ast = parser(string)\n    for (let node of ast.nodes) {\n      let gradientName = this.name // gradient name\n      if (node.type === 'function' && node.value === gradientName) {\n        node.nodes = this.newDirection(node.nodes)\n        node.nodes = this.normalize(node.nodes, gradientName)\n        if (prefix === '-webkit- old') {\n          let changes = this.oldWebkit(node)\n          if (!changes) {\n            return false\n          }\n        } else {\n          node.nodes = this.convertDirection(node.nodes)\n          node.value = prefix + node.value\n        }\n      }\n    }\n    return ast.toString()\n  }\n\n  /**\n   * Replace first token\n   */\n  replaceFirst(params, ...words) {\n    let prefix = words.map(i => {\n      if (i === ' ') {\n        return { type: 'space', value: i }\n      }\n      return { type: 'word', value: i }\n    })\n    return prefix.concat(params.slice(1))\n  }\n\n  /**\n   * Convert angle unit to deg\n   */\n  normalizeUnit(str, full) {\n    let num = parseFloat(str)\n    let deg = (num / full) * 360\n    return `${deg}deg`\n  }\n\n  /**\n   * Normalize angle\n   */\n  normalize(nodes, gradientName) {\n    if (!nodes[0]) return nodes\n\n    if (/-?\\d+(.\\d+)?grad/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 400)\n    } else if (/-?\\d+(.\\d+)?rad/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI)\n    } else if (/-?\\d+(.\\d+)?turn/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 1)\n    } else if (nodes[0].value.includes('deg')) {\n      let num = parseFloat(nodes[0].value)\n      num = range.wrap(0, 360, num)\n      nodes[0].value = `${num}deg`\n    }\n\n    if (\n      gradientName === 'linear-gradient' ||\n      gradientName === 'repeating-linear-gradient'\n    ) {\n      let direction = nodes[0].value\n\n      // Unitless zero for `<angle>` values are allowed in CSS gradients and transforms.\n      // Spec: https://github.com/w3c/csswg-drafts/commit/602789171429b2231223ab1e5acf8f7f11652eb3\n      if (direction === '0deg' || direction === '0') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'top')\n      } else if (direction === '90deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'right')\n      } else if (direction === '180deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom') // default value\n      } else if (direction === '270deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'left')\n      }\n    }\n\n    return nodes\n  }\n\n  /**\n   * Replace old direction to new\n   */\n  newDirection(params) {\n    if (params[0].value === 'to') {\n      return params\n    }\n    IS_DIRECTION.lastIndex = 0 // reset search index of global regexp\n    if (!IS_DIRECTION.test(params[0].value)) {\n      return params\n    }\n\n    params.unshift(\n      {\n        type: 'word',\n        value: 'to'\n      },\n      {\n        type: 'space',\n        value: ' '\n      }\n    )\n\n    for (let i = 2; i < params.length; i++) {\n      if (params[i].type === 'div') {\n        break\n      }\n      if (params[i].type === 'word') {\n        params[i].value = this.revertDirection(params[i].value)\n      }\n    }\n\n    return params\n  }\n\n  /**\n   * Look for at word\n   */\n  isRadial(params) {\n    let state = 'before'\n    for (let param of params) {\n      if (state === 'before' && param.type === 'space') {\n        state = 'at'\n      } else if (state === 'at' && param.value === 'at') {\n        state = 'after'\n      } else if (state === 'after' && param.type === 'space') {\n        return true\n      } else if (param.type === 'div') {\n        break\n      } else {\n        state = 'before'\n      }\n    }\n    return false\n  }\n\n  /**\n   * Change new direction to old\n   */\n  convertDirection(params) {\n    if (params.length > 0) {\n      if (params[0].value === 'to') {\n        this.fixDirection(params)\n      } else if (params[0].value.includes('deg')) {\n        this.fixAngle(params)\n      } else if (this.isRadial(params)) {\n        this.fixRadial(params)\n      }\n    }\n    return params\n  }\n\n  /**\n   * Replace `to top left` to `bottom right`\n   */\n  fixDirection(params) {\n    params.splice(0, 2)\n\n    for (let param of params) {\n      if (param.type === 'div') {\n        break\n      }\n      if (param.type === 'word') {\n        param.value = this.revertDirection(param.value)\n      }\n    }\n  }\n\n  /**\n   * Add 90 degrees\n   */\n  fixAngle(params) {\n    let first = params[0].value\n    first = parseFloat(first)\n    first = Math.abs(450 - first) % 360\n    first = this.roundFloat(first, 3)\n    params[0].value = `${first}deg`\n  }\n\n  /**\n   * Fix radial direction syntax\n   */\n  fixRadial(params) {\n    let first = []\n    let second = []\n    let a, b, c, i, next\n\n    for (i = 0; i < params.length - 2; i++) {\n      a = params[i]\n      b = params[i + 1]\n      c = params[i + 2]\n      if (a.type === 'space' && b.value === 'at' && c.type === 'space') {\n        next = i + 3\n        break\n      } else {\n        first.push(a)\n      }\n    }\n\n    let div\n    for (i = next; i < params.length; i++) {\n      if (params[i].type === 'div') {\n        div = params[i]\n        break\n      } else {\n        second.push(params[i])\n      }\n    }\n\n    params.splice(0, i, ...second, div, ...first)\n  }\n\n  revertDirection(word) {\n    return Gradient.directions[word.toLowerCase()] || word\n  }\n\n  /**\n   * Round float and save digits under dot\n   */\n  roundFloat(float, digits) {\n    return parseFloat(float.toFixed(digits))\n  }\n\n  /**\n   * Convert to old webkit syntax\n   */\n  oldWebkit(node) {\n    let { nodes } = node\n    let string = parser.stringify(node.nodes)\n\n    if (this.name !== 'linear-gradient') {\n      return false\n    }\n    if (nodes[0] && nodes[0].value.includes('deg')) {\n      return false\n    }\n    if (\n      string.includes('px') ||\n      string.includes('-corner') ||\n      string.includes('-side')\n    ) {\n      return false\n    }\n\n    let params = [[]]\n    for (let i of nodes) {\n      params[params.length - 1].push(i)\n      if (i.type === 'div' && i.value === ',') {\n        params.push([])\n      }\n    }\n\n    this.oldDirection(params)\n    this.colorStops(params)\n\n    node.nodes = []\n    for (let param of params) {\n      node.nodes = node.nodes.concat(param)\n    }\n\n    node.nodes.unshift(\n      { type: 'word', value: 'linear' },\n      this.cloneDiv(node.nodes)\n    )\n    node.value = '-webkit-gradient'\n\n    return true\n  }\n\n  /**\n   * Change direction syntax to old webkit\n   */\n  oldDirection(params) {\n    let div = this.cloneDiv(params[0])\n\n    if (params[0][0].value !== 'to') {\n      return params.unshift([\n        { type: 'word', value: Gradient.oldDirections.bottom },\n        div\n      ])\n    } else {\n      let words = []\n      for (let node of params[0].slice(2)) {\n        if (node.type === 'word') {\n          words.push(node.value.toLowerCase())\n        }\n      }\n\n      words = words.join(' ')\n      let old = Gradient.oldDirections[words] || words\n\n      params[0] = [{ type: 'word', value: old }, div]\n      return params[0]\n    }\n  }\n\n  /**\n   * Get div token from exists parameters\n   */\n  cloneDiv(params) {\n    for (let i of params) {\n      if (i.type === 'div' && i.value === ',') {\n        return i\n      }\n    }\n    return { type: 'div', value: ',', after: ' ' }\n  }\n\n  /**\n   * Change colors syntax to old webkit\n   */\n  colorStops(params) {\n    let result = []\n    for (let i = 0; i < params.length; i++) {\n      let pos\n      let param = params[i]\n      let item\n      if (i === 0) {\n        continue\n      }\n\n      let color = parser.stringify(param[0])\n      if (param[1] && param[1].type === 'word') {\n        pos = param[1].value\n      } else if (param[2] && param[2].type === 'word') {\n        pos = param[2].value\n      }\n\n      let stop\n      if (i === 1 && (!pos || pos === '0%')) {\n        stop = `from(${color})`\n      } else if (i === params.length - 1 && (!pos || pos === '100%')) {\n        stop = `to(${color})`\n      } else if (pos) {\n        stop = `color-stop(${pos}, ${color})`\n      } else {\n        stop = `color-stop(${color})`\n      }\n\n      let div = param[param.length - 1]\n      params[i] = [{ type: 'word', value: stop }]\n      if (div.type === 'div' && div.value === ',') {\n        item = params[i].push(div)\n      }\n      result.push(item)\n    }\n    return result\n  }\n\n  /**\n   * Remove old WebKit gradient too\n   */\n  old(prefix) {\n    if (prefix === '-webkit-') {\n      let type\n      if (this.name === 'linear-gradient') {\n        type = 'linear'\n      } else if (this.name === 'repeating-linear-gradient') {\n        type = 'repeating-linear'\n      } else if (this.name === 'repeating-radial-gradient') {\n        type = 'repeating-radial'\n      } else {\n        type = 'radial'\n      }\n      let string = '-gradient'\n      let regexp = utils.regexp(\n        `-webkit-(${type}-gradient|gradient\\\\(\\\\s*${type})`,\n        false\n      )\n\n      return new OldValue(this.name, prefix + this.name, string, regexp)\n    } else {\n      return super.old(prefix)\n    }\n  }\n\n  /**\n   * Do not add non-webkit prefixes for list-style and object\n   */\n  add(decl, prefix) {\n    let p = decl.prop\n    if (p.includes('mask')) {\n      if (prefix === '-webkit-' || prefix === '-webkit- old') {\n        return super.add(decl, prefix)\n      }\n    } else if (\n      p === 'list-style' ||\n      p === 'list-style-image' ||\n      p === 'content'\n    ) {\n      if (prefix === '-webkit-' || prefix === '-webkit- old') {\n        return super.add(decl, prefix)\n      }\n    } else {\n      return super.add(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nGradient.names = [\n  'linear-gradient',\n  'repeating-linear-gradient',\n  'radial-gradient',\n  'repeating-radial-gradient'\n]\n\nGradient.directions = {\n  top: 'bottom', // default value\n  left: 'right',\n  bottom: 'top',\n  right: 'left'\n}\n\n// Direction to replace\nGradient.oldDirections = {\n  'top': 'left bottom, left top',\n  'left': 'right top, left top',\n  'bottom': 'left top, left bottom',\n  'right': 'left top, right top',\n\n  'top right': 'left bottom, right top',\n  'top left': 'right bottom, left top',\n  'right top': 'left bottom, right top',\n  'right bottom': 'left top, right bottom',\n  'bottom right': 'left top, right bottom',\n  'bottom left': 'right top, left bottom',\n  'left top': 'right bottom, left top',\n  'left bottom': 'right top, left bottom'\n}\n\nmodule.exports = Gradient\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}