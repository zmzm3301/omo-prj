{"ast":null,"code":"var _createForOfIteratorHelper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar parser = require('postcss-value-parser');\nvar Value = require('./value');\nvar insertAreas = require('./hacks/grid-utils').insertAreas;\nvar OLD_LINEAR = /(^|[^-])linear-gradient\\(\\s*(top|left|right|bottom)/i;\nvar OLD_RADIAL = /(^|[^-])radial-gradient\\(\\s*\\d+(\\w*|%)\\s+\\d+(\\w*|%)\\s*,/i;\nvar IGNORE_NEXT = /(!\\s*)?autoprefixer:\\s*ignore\\s+next/i;\nvar GRID_REGEX = /(!\\s*)?autoprefixer\\s*grid:\\s*(on|off|(no-)?autoplace)/i;\nvar SIZES = ['width', 'height', 'min-width', 'max-width', 'min-height', 'max-height', 'inline-size', 'min-inline-size', 'max-inline-size', 'block-size', 'min-block-size', 'max-block-size'];\nfunction hasGridTemplate(decl) {\n  return decl.parent.some(function (i) {\n    return i.prop === 'grid-template' || i.prop === 'grid-template-areas';\n  });\n}\nfunction hasRowsAndColumns(decl) {\n  var hasRows = decl.parent.some(function (i) {\n    return i.prop === 'grid-template-rows';\n  });\n  var hasColumns = decl.parent.some(function (i) {\n    return i.prop === 'grid-template-columns';\n  });\n  return hasRows && hasColumns;\n}\nvar Processor = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Processor(prefixes) {\n    _classCallCheck(this, Processor);\n    this.prefixes = prefixes;\n  }\n\n  /**\n   * Add necessary prefixes\n   */\n  _createClass(Processor, [{\n    key: \"add\",\n    value: function add(css, result) {\n      var _this = this;\n      // At-rules\n      var resolution = this.prefixes.add['@resolution'];\n      var keyframes = this.prefixes.add['@keyframes'];\n      var viewport = this.prefixes.add['@viewport'];\n      var supports = this.prefixes.add['@supports'];\n      css.walkAtRules(function (rule) {\n        if (rule.name === 'keyframes') {\n          if (!_this.disabled(rule, result)) {\n            return keyframes && keyframes.process(rule);\n          }\n        } else if (rule.name === 'viewport') {\n          if (!_this.disabled(rule, result)) {\n            return viewport && viewport.process(rule);\n          }\n        } else if (rule.name === 'supports') {\n          if (_this.prefixes.options.supports !== false && !_this.disabled(rule, result)) {\n            return supports.process(rule);\n          }\n        } else if (rule.name === 'media' && rule.params.includes('-resolution')) {\n          if (!_this.disabled(rule, result)) {\n            return resolution && resolution.process(rule);\n          }\n        }\n        return undefined;\n      });\n\n      // Selectors\n      css.walkRules(function (rule) {\n        if (_this.disabled(rule, result)) return undefined;\n        return _this.prefixes.add.selectors.map(function (selector) {\n          return selector.process(rule, result);\n        });\n      });\n      function insideGrid(decl) {\n        return decl.parent.nodes.some(function (node) {\n          if (node.type !== 'decl') return false;\n          var displayGrid = node.prop === 'display' && /(inline-)?grid/.test(node.value);\n          var gridTemplate = node.prop.startsWith('grid-template');\n          var gridGap = /^grid-([A-z]+-)?gap/.test(node.prop);\n          return displayGrid || gridTemplate || gridGap;\n        });\n      }\n      function insideFlex(decl) {\n        return decl.parent.some(function (node) {\n          return node.prop === 'display' && /(inline-)?flex/.test(node.value);\n        });\n      }\n      var gridPrefixes = this.gridStatus(css, result) && this.prefixes.add['grid-area'] && this.prefixes.add['grid-area'].prefixes;\n      css.walkDecls(function (decl) {\n        if (_this.disabledDecl(decl, result)) return undefined;\n        var parent = decl.parent;\n        var prop = decl.prop;\n        var value = decl.value;\n        if (prop === 'color-adjust') {\n          if (parent.every(function (i) {\n            return i.prop !== 'print-color-adjust';\n          })) {\n            result.warn('Replace color-adjust to print-color-adjust. ' + 'The color-adjust shorthand is currently deprecated.', {\n              node: decl\n            });\n          }\n        } else if (prop === 'grid-row-span') {\n          result.warn('grid-row-span is not part of final Grid Layout. Use grid-row.', {\n            node: decl\n          });\n          return undefined;\n        } else if (prop === 'grid-column-span') {\n          result.warn('grid-column-span is not part of final Grid Layout. Use grid-column.', {\n            node: decl\n          });\n          return undefined;\n        } else if (prop === 'display' && value === 'box') {\n          result.warn('You should write display: flex by final spec ' + 'instead of display: box', {\n            node: decl\n          });\n          return undefined;\n        } else if (prop === 'text-emphasis-position') {\n          if (value === 'under' || value === 'over') {\n            result.warn('You should use 2 values for text-emphasis-position ' + 'For example, `under left` instead of just `under`.', {\n              node: decl\n            });\n          }\n        } else if (/^(align|justify|place)-(items|content)$/.test(prop) && insideFlex(decl)) {\n          if (value === 'start' || value === 'end') {\n            result.warn(\"\".concat(value, \" value has mixed support, consider using \") + \"flex-\".concat(value, \" instead\"), {\n              node: decl\n            });\n          }\n        } else if (prop === 'text-decoration-skip' && value === 'ink') {\n          result.warn('Replace text-decoration-skip: ink to ' + 'text-decoration-skip-ink: auto, because spec had been changed', {\n            node: decl\n          });\n        } else {\n          if (gridPrefixes && _this.gridStatus(decl, result)) {\n            if (decl.value === 'subgrid') {\n              result.warn('IE does not support subgrid', {\n                node: decl\n              });\n            }\n            if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl)) {\n              var fixed = prop.replace('-items', '-self');\n              result.warn(\"IE does not support \".concat(prop, \" on grid containers. \") + \"Try using \".concat(fixed, \" on child elements instead: \") + \"\".concat(decl.parent.selector, \" > * { \").concat(fixed, \": \").concat(decl.value, \" }\"), {\n                node: decl\n              });\n            } else if (/^(align|justify|place)-content$/.test(prop) && insideGrid(decl)) {\n              result.warn(\"IE does not support \".concat(decl.prop, \" on grid containers\"), {\n                node: decl\n              });\n            } else if (prop === 'display' && decl.value === 'contents') {\n              result.warn('Please do not use display: contents; ' + 'if you have grid setting enabled', {\n                node: decl\n              });\n              return undefined;\n            } else if (decl.prop === 'grid-gap') {\n              var status = _this.gridStatus(decl, result);\n              if (status === 'autoplace' && !hasRowsAndColumns(decl) && !hasGridTemplate(decl)) {\n                result.warn('grid-gap only works if grid-template(-areas) is being ' + 'used or both rows and columns have been declared ' + 'and cells have not been manually ' + 'placed inside the explicit grid', {\n                  node: decl\n                });\n              } else if ((status === true || status === 'no-autoplace') && !hasGridTemplate(decl)) {\n                result.warn('grid-gap only works if grid-template(-areas) is being used', {\n                  node: decl\n                });\n              }\n            } else if (prop === 'grid-auto-columns') {\n              result.warn('grid-auto-columns is not supported by IE', {\n                node: decl\n              });\n              return undefined;\n            } else if (prop === 'grid-auto-rows') {\n              result.warn('grid-auto-rows is not supported by IE', {\n                node: decl\n              });\n              return undefined;\n            } else if (prop === 'grid-auto-flow') {\n              var hasRows = parent.some(function (i) {\n                return i.prop === 'grid-template-rows';\n              });\n              var hasCols = parent.some(function (i) {\n                return i.prop === 'grid-template-columns';\n              });\n              if (hasGridTemplate(decl)) {\n                result.warn('grid-auto-flow is not supported by IE', {\n                  node: decl\n                });\n              } else if (value.includes('dense')) {\n                result.warn('grid-auto-flow: dense is not supported by IE', {\n                  node: decl\n                });\n              } else if (!hasRows && !hasCols) {\n                result.warn('grid-auto-flow works only if grid-template-rows and ' + 'grid-template-columns are present in the same rule', {\n                  node: decl\n                });\n              }\n              return undefined;\n            } else if (value.includes('auto-fit')) {\n              result.warn('auto-fit value is not supported by IE', {\n                node: decl,\n                word: 'auto-fit'\n              });\n              return undefined;\n            } else if (value.includes('auto-fill')) {\n              result.warn('auto-fill value is not supported by IE', {\n                node: decl,\n                word: 'auto-fill'\n              });\n              return undefined;\n            } else if (prop.startsWith('grid-template') && value.includes('[')) {\n              result.warn('Autoprefixer currently does not support line names. ' + 'Try using grid-template-areas instead.', {\n                node: decl,\n                word: '['\n              });\n            }\n          }\n          if (value.includes('radial-gradient')) {\n            if (OLD_RADIAL.test(decl.value)) {\n              result.warn('Gradient has outdated direction syntax. ' + 'New syntax is like `closest-side at 0 0` ' + 'instead of `0 0, closest-side`.', {\n                node: decl\n              });\n            } else {\n              var ast = parser(value);\n              var _iterator = _createForOfIteratorHelper(ast.nodes),\n                _step;\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var i = _step.value;\n                  if (i.type === 'function' && i.value === 'radial-gradient') {\n                    var _iterator2 = _createForOfIteratorHelper(i.nodes),\n                      _step2;\n                    try {\n                      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                        var word = _step2.value;\n                        if (word.type === 'word') {\n                          if (word.value === 'cover') {\n                            result.warn('Gradient has outdated direction syntax. ' + 'Replace `cover` to `farthest-corner`.', {\n                              node: decl\n                            });\n                          } else if (word.value === 'contain') {\n                            result.warn('Gradient has outdated direction syntax. ' + 'Replace `contain` to `closest-side`.', {\n                              node: decl\n                            });\n                          }\n                        }\n                      }\n                    } catch (err) {\n                      _iterator2.e(err);\n                    } finally {\n                      _iterator2.f();\n                    }\n                  }\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n            }\n          }\n          if (value.includes('linear-gradient')) {\n            if (OLD_LINEAR.test(value)) {\n              result.warn('Gradient has outdated direction syntax. ' + 'New syntax is like `to left` instead of `right`.', {\n                node: decl\n              });\n            }\n          }\n        }\n        if (SIZES.includes(decl.prop)) {\n          if (!decl.value.includes('-fill-available')) {\n            if (decl.value.includes('fill-available')) {\n              result.warn('Replace fill-available to stretch, ' + 'because spec had been changed', {\n                node: decl\n              });\n            } else if (decl.value.includes('fill')) {\n              var _ast = parser(value);\n              if (_ast.nodes.some(function (i) {\n                return i.type === 'word' && i.value === 'fill';\n              })) {\n                result.warn('Replace fill to stretch, because spec had been changed', {\n                  node: decl\n                });\n              }\n            }\n          }\n        }\n        var prefixer;\n        if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n          // Transition\n          return _this.prefixes.transition.add(decl, result);\n        } else if (decl.prop === 'align-self') {\n          // align-self flexbox or grid\n          var display = _this.displayType(decl);\n          if (display !== 'grid' && _this.prefixes.options.flexbox !== false) {\n            prefixer = _this.prefixes.add['align-self'];\n            if (prefixer && prefixer.prefixes) {\n              prefixer.process(decl);\n            }\n          }\n          if (_this.gridStatus(decl, result) !== false) {\n            prefixer = _this.prefixes.add['grid-row-align'];\n            if (prefixer && prefixer.prefixes) {\n              return prefixer.process(decl, result);\n            }\n          }\n        } else if (decl.prop === 'justify-self') {\n          // justify-self flexbox or grid\n          if (_this.gridStatus(decl, result) !== false) {\n            prefixer = _this.prefixes.add['grid-column-align'];\n            if (prefixer && prefixer.prefixes) {\n              return prefixer.process(decl, result);\n            }\n          }\n        } else if (decl.prop === 'place-self') {\n          prefixer = _this.prefixes.add['place-self'];\n          if (prefixer && prefixer.prefixes && _this.gridStatus(decl, result) !== false) {\n            return prefixer.process(decl, result);\n          }\n        } else {\n          // Properties\n          prefixer = _this.prefixes.add[decl.prop];\n          if (prefixer && prefixer.prefixes) {\n            return prefixer.process(decl, result);\n          }\n        }\n        return undefined;\n      });\n\n      // Insert grid-area prefixes. We need to be able to store the different\n      // rules as a data and hack API is not enough for this\n      if (this.gridStatus(css, result)) {\n        insertAreas(css, this.disabled);\n      }\n\n      // Values\n      return css.walkDecls(function (decl) {\n        if (_this.disabledValue(decl, result)) return;\n        var unprefixed = _this.prefixes.unprefixed(decl.prop);\n        var list = _this.prefixes.values('add', unprefixed);\n        if (Array.isArray(list)) {\n          var _iterator3 = _createForOfIteratorHelper(list),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var value = _step3.value;\n              if (value.process) value.process(decl, result);\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n        Value.save(_this.prefixes, decl);\n      });\n    }\n\n    /**\n     * Remove unnecessary pefixes\n     */\n  }, {\n    key: \"remove\",\n    value: function remove(css, result) {\n      var _this2 = this;\n      // At-rules\n      var resolution = this.prefixes.remove['@resolution'];\n      css.walkAtRules(function (rule, i) {\n        if (_this2.prefixes.remove[\"@\".concat(rule.name)]) {\n          if (!_this2.disabled(rule, result)) {\n            rule.parent.removeChild(i);\n          }\n        } else if (rule.name === 'media' && rule.params.includes('-resolution') && resolution) {\n          resolution.clean(rule);\n        }\n      });\n\n      // Selectors\n      var _iterator4 = _createForOfIteratorHelper(this.prefixes.remove.selectors),\n        _step4;\n      try {\n        var _loop = function _loop() {\n          var checker = _step4.value;\n          css.walkRules(function (rule, i) {\n            if (checker.check(rule)) {\n              if (!_this2.disabled(rule, result)) {\n                rule.parent.removeChild(i);\n              }\n            }\n          });\n        };\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return css.walkDecls(function (decl, i) {\n        if (_this2.disabled(decl, result)) return;\n        var rule = decl.parent;\n        var unprefixed = _this2.prefixes.unprefixed(decl.prop);\n\n        // Transition\n        if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n          _this2.prefixes.transition.remove(decl);\n        }\n\n        // Properties\n        if (_this2.prefixes.remove[decl.prop] && _this2.prefixes.remove[decl.prop].remove) {\n          var notHack = _this2.prefixes.group(decl).down(function (other) {\n            return _this2.prefixes.normalize(other.prop) === unprefixed;\n          });\n          if (unprefixed === 'flex-flow') {\n            notHack = true;\n          }\n          if (decl.prop === '-webkit-box-orient') {\n            var hacks = {\n              'flex-direction': true,\n              'flex-flow': true\n            };\n            if (!decl.parent.some(function (j) {\n              return hacks[j.prop];\n            })) return;\n          }\n          if (notHack && !_this2.withHackValue(decl)) {\n            if (decl.raw('before').includes('\\n')) {\n              _this2.reduceSpaces(decl);\n            }\n            rule.removeChild(i);\n            return;\n          }\n        }\n\n        // Values\n        var _iterator5 = _createForOfIteratorHelper(_this2.prefixes.values('remove', unprefixed)),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var checker = _step5.value;\n            if (!checker.check) continue;\n            if (!checker.check(decl.value)) continue;\n            unprefixed = checker.unprefixed;\n            var _notHack = _this2.prefixes.group(decl).down(function (other) {\n              return other.value.includes(unprefixed);\n            });\n            if (_notHack) {\n              rule.removeChild(i);\n              return;\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      });\n    }\n\n    /**\n     * Some rare old values, which is not in standard\n     */\n  }, {\n    key: \"withHackValue\",\n    value: function withHackValue(decl) {\n      return decl.prop === '-webkit-background-clip' && decl.value === 'text';\n    }\n\n    /**\n     * Check for grid/flexbox options.\n     */\n  }, {\n    key: \"disabledValue\",\n    value: function disabledValue(node, result) {\n      if (this.gridStatus(node, result) === false && node.type === 'decl') {\n        if (node.prop === 'display' && node.value.includes('grid')) {\n          return true;\n        }\n      }\n      if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n        if (node.prop === 'display' && node.value.includes('flex')) {\n          return true;\n        }\n      }\n      if (node.type === 'decl' && node.prop === 'content') {\n        return true;\n      }\n      return this.disabled(node, result);\n    }\n\n    /**\n     * Check for grid/flexbox options.\n     */\n  }, {\n    key: \"disabledDecl\",\n    value: function disabledDecl(node, result) {\n      if (this.gridStatus(node, result) === false && node.type === 'decl') {\n        if (node.prop.includes('grid') || node.prop === 'justify-items') {\n          return true;\n        }\n      }\n      if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n        var other = ['order', 'justify-content', 'align-items', 'align-content'];\n        if (node.prop.includes('flex') || other.includes(node.prop)) {\n          return true;\n        }\n      }\n      return this.disabled(node, result);\n    }\n\n    /**\n     * Check for control comment and global options\n     */\n  }, {\n    key: \"disabled\",\n    value: function disabled(node, result) {\n      if (!node) return false;\n      if (node._autoprefixerDisabled !== undefined) {\n        return node._autoprefixerDisabled;\n      }\n      if (node.parent) {\n        var p = node.prev();\n        if (p && p.type === 'comment' && IGNORE_NEXT.test(p.text)) {\n          node._autoprefixerDisabled = true;\n          node._autoprefixerSelfDisabled = true;\n          return true;\n        }\n      }\n      var value = null;\n      if (node.nodes) {\n        var status;\n        node.each(function (i) {\n          if (i.type !== 'comment') return;\n          if (/(!\\s*)?autoprefixer:\\s*(off|on)/i.test(i.text)) {\n            if (typeof status !== 'undefined') {\n              result.warn('Second Autoprefixer control comment ' + 'was ignored. Autoprefixer applies control ' + 'comment to whole block, not to next rules.', {\n                node: i\n              });\n            } else {\n              status = /on/i.test(i.text);\n            }\n          }\n        });\n        if (status !== undefined) {\n          value = !status;\n        }\n      }\n      if (!node.nodes || value === null) {\n        if (node.parent) {\n          var isParentDisabled = this.disabled(node.parent, result);\n          if (node.parent._autoprefixerSelfDisabled === true) {\n            value = false;\n          } else {\n            value = isParentDisabled;\n          }\n        } else {\n          value = false;\n        }\n      }\n      node._autoprefixerDisabled = value;\n      return value;\n    }\n\n    /**\n     * Normalize spaces in cascade declaration group\n     */\n  }, {\n    key: \"reduceSpaces\",\n    value: function reduceSpaces(decl) {\n      var stop = false;\n      this.prefixes.group(decl).up(function () {\n        stop = true;\n        return true;\n      });\n      if (stop) {\n        return;\n      }\n      var parts = decl.raw('before').split('\\n');\n      var prevMin = parts[parts.length - 1].length;\n      var diff = false;\n      this.prefixes.group(decl).down(function (other) {\n        parts = other.raw('before').split('\\n');\n        var last = parts.length - 1;\n        if (parts[last].length > prevMin) {\n          if (diff === false) {\n            diff = parts[last].length - prevMin;\n          }\n          parts[last] = parts[last].slice(0, -diff);\n          other.raws.before = parts.join('\\n');\n        }\n      });\n    }\n\n    /**\n     * Is it flebox or grid rule\n     */\n  }, {\n    key: \"displayType\",\n    value: function displayType(decl) {\n      var _iterator6 = _createForOfIteratorHelper(decl.parent.nodes),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var i = _step6.value;\n          if (i.prop !== 'display') {\n            continue;\n          }\n          if (i.value.includes('flex')) {\n            return 'flex';\n          }\n          if (i.value.includes('grid')) {\n            return 'grid';\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      return false;\n    }\n\n    /**\n     * Set grid option via control comment\n     */\n  }, {\n    key: \"gridStatus\",\n    value: function gridStatus(node, result) {\n      if (!node) return false;\n      if (node._autoprefixerGridStatus !== undefined) {\n        return node._autoprefixerGridStatus;\n      }\n      var value = null;\n      if (node.nodes) {\n        var status;\n        node.each(function (i) {\n          if (i.type !== 'comment') return;\n          if (GRID_REGEX.test(i.text)) {\n            var hasAutoplace = /:\\s*autoplace/i.test(i.text);\n            var noAutoplace = /no-autoplace/i.test(i.text);\n            if (typeof status !== 'undefined') {\n              result.warn('Second Autoprefixer grid control comment was ' + 'ignored. Autoprefixer applies control comments to the whole ' + 'block, not to the next rules.', {\n                node: i\n              });\n            } else if (hasAutoplace) {\n              status = 'autoplace';\n            } else if (noAutoplace) {\n              status = true;\n            } else {\n              status = /on/i.test(i.text);\n            }\n          }\n        });\n        if (status !== undefined) {\n          value = status;\n        }\n      }\n      if (node.type === 'atrule' && node.name === 'supports') {\n        var params = node.params;\n        if (params.includes('grid') && params.includes('auto')) {\n          value = false;\n        }\n      }\n      if (!node.nodes || value === null) {\n        if (node.parent) {\n          var isParentGrid = this.gridStatus(node.parent, result);\n          if (node.parent._autoprefixerSelfDisabled === true) {\n            value = false;\n          } else {\n            value = isParentGrid;\n          }\n        } else if (typeof this.prefixes.options.grid !== 'undefined') {\n          value = this.prefixes.options.grid;\n        } else if (typeof process.env.AUTOPREFIXER_GRID !== 'undefined') {\n          if (process.env.AUTOPREFIXER_GRID === 'autoplace') {\n            value = 'autoplace';\n          } else {\n            value = true;\n          }\n        } else {\n          value = false;\n        }\n      }\n      node._autoprefixerGridStatus = value;\n      return value;\n    }\n  }]);\n  return Processor;\n}();\nmodule.exports = Processor;","map":{"version":3,"names":["parser","require","Value","insertAreas","OLD_LINEAR","OLD_RADIAL","IGNORE_NEXT","GRID_REGEX","SIZES","hasGridTemplate","decl","parent","some","i","prop","hasRowsAndColumns","hasRows","hasColumns","Processor","prefixes","css","result","resolution","add","keyframes","viewport","supports","walkAtRules","rule","name","disabled","process","options","params","includes","undefined","walkRules","selectors","map","selector","insideGrid","nodes","node","type","displayGrid","test","value","gridTemplate","startsWith","gridGap","insideFlex","gridPrefixes","gridStatus","walkDecls","disabledDecl","every","warn","fixed","replace","status","hasCols","word","ast","prefixer","transition","display","displayType","flexbox","disabledValue","unprefixed","list","values","Array","isArray","save","remove","removeChild","clean","checker","check","notHack","group","down","other","normalize","hacks","j","withHackValue","raw","reduceSpaces","_autoprefixerDisabled","p","prev","text","_autoprefixerSelfDisabled","each","isParentDisabled","stop","up","parts","split","prevMin","length","diff","last","slice","raws","before","join","_autoprefixerGridStatus","hasAutoplace","noAutoplace","isParentGrid","grid","env","AUTOPREFIXER_GRID","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/processor.js"],"sourcesContent":["let parser = require('postcss-value-parser')\n\nlet Value = require('./value')\nlet insertAreas = require('./hacks/grid-utils').insertAreas\n\nconst OLD_LINEAR = /(^|[^-])linear-gradient\\(\\s*(top|left|right|bottom)/i\nconst OLD_RADIAL = /(^|[^-])radial-gradient\\(\\s*\\d+(\\w*|%)\\s+\\d+(\\w*|%)\\s*,/i\nconst IGNORE_NEXT = /(!\\s*)?autoprefixer:\\s*ignore\\s+next/i\nconst GRID_REGEX = /(!\\s*)?autoprefixer\\s*grid:\\s*(on|off|(no-)?autoplace)/i\n\nconst SIZES = [\n  'width',\n  'height',\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height',\n  'inline-size',\n  'min-inline-size',\n  'max-inline-size',\n  'block-size',\n  'min-block-size',\n  'max-block-size'\n]\n\nfunction hasGridTemplate(decl) {\n  return decl.parent.some(\n    i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'\n  )\n}\n\nfunction hasRowsAndColumns(decl) {\n  let hasRows = decl.parent.some(i => i.prop === 'grid-template-rows')\n  let hasColumns = decl.parent.some(i => i.prop === 'grid-template-columns')\n  return hasRows && hasColumns\n}\n\nclass Processor {\n  constructor(prefixes) {\n    this.prefixes = prefixes\n  }\n\n  /**\n   * Add necessary prefixes\n   */\n  add(css, result) {\n    // At-rules\n    let resolution = this.prefixes.add['@resolution']\n    let keyframes = this.prefixes.add['@keyframes']\n    let viewport = this.prefixes.add['@viewport']\n    let supports = this.prefixes.add['@supports']\n\n    css.walkAtRules(rule => {\n      if (rule.name === 'keyframes') {\n        if (!this.disabled(rule, result)) {\n          return keyframes && keyframes.process(rule)\n        }\n      } else if (rule.name === 'viewport') {\n        if (!this.disabled(rule, result)) {\n          return viewport && viewport.process(rule)\n        }\n      } else if (rule.name === 'supports') {\n        if (\n          this.prefixes.options.supports !== false &&\n          !this.disabled(rule, result)\n        ) {\n          return supports.process(rule)\n        }\n      } else if (rule.name === 'media' && rule.params.includes('-resolution')) {\n        if (!this.disabled(rule, result)) {\n          return resolution && resolution.process(rule)\n        }\n      }\n\n      return undefined\n    })\n\n    // Selectors\n    css.walkRules(rule => {\n      if (this.disabled(rule, result)) return undefined\n\n      return this.prefixes.add.selectors.map(selector => {\n        return selector.process(rule, result)\n      })\n    })\n\n    function insideGrid(decl) {\n      return decl.parent.nodes.some(node => {\n        if (node.type !== 'decl') return false\n        let displayGrid =\n          node.prop === 'display' && /(inline-)?grid/.test(node.value)\n        let gridTemplate = node.prop.startsWith('grid-template')\n        let gridGap = /^grid-([A-z]+-)?gap/.test(node.prop)\n        return displayGrid || gridTemplate || gridGap\n      })\n    }\n    function insideFlex(decl) {\n      return decl.parent.some(node => {\n        return node.prop === 'display' && /(inline-)?flex/.test(node.value)\n      })\n    }\n\n    let gridPrefixes =\n      this.gridStatus(css, result) &&\n      this.prefixes.add['grid-area'] &&\n      this.prefixes.add['grid-area'].prefixes\n\n    css.walkDecls(decl => {\n      if (this.disabledDecl(decl, result)) return undefined\n\n      let parent = decl.parent\n      let prop = decl.prop\n      let value = decl.value\n\n      if (prop === 'color-adjust') {\n        if (parent.every(i => i.prop !== 'print-color-adjust')) {\n          result.warn(\n            'Replace color-adjust to print-color-adjust. ' +\n              'The color-adjust shorthand is currently deprecated.',\n            { node: decl }\n          )\n        }\n      } else if (prop === 'grid-row-span') {\n        result.warn(\n          'grid-row-span is not part of final Grid Layout. Use grid-row.',\n          { node: decl }\n        )\n        return undefined\n      } else if (prop === 'grid-column-span') {\n        result.warn(\n          'grid-column-span is not part of final Grid Layout. Use grid-column.',\n          { node: decl }\n        )\n        return undefined\n      } else if (prop === 'display' && value === 'box') {\n        result.warn(\n          'You should write display: flex by final spec ' +\n            'instead of display: box',\n          { node: decl }\n        )\n        return undefined\n      } else if (prop === 'text-emphasis-position') {\n        if (value === 'under' || value === 'over') {\n          result.warn(\n            'You should use 2 values for text-emphasis-position ' +\n              'For example, `under left` instead of just `under`.',\n            { node: decl }\n          )\n        }\n      } else if (\n        /^(align|justify|place)-(items|content)$/.test(prop) &&\n        insideFlex(decl)\n      ) {\n        if (value === 'start' || value === 'end') {\n          result.warn(\n            `${value} value has mixed support, consider using ` +\n              `flex-${value} instead`,\n            { node: decl }\n          )\n        }\n      } else if (prop === 'text-decoration-skip' && value === 'ink') {\n        result.warn(\n          'Replace text-decoration-skip: ink to ' +\n            'text-decoration-skip-ink: auto, because spec had been changed',\n          { node: decl }\n        )\n      } else {\n        if (gridPrefixes && this.gridStatus(decl, result)) {\n          if (decl.value === 'subgrid') {\n            result.warn('IE does not support subgrid', { node: decl })\n          }\n          if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl)) {\n            let fixed = prop.replace('-items', '-self')\n            result.warn(\n              `IE does not support ${prop} on grid containers. ` +\n                `Try using ${fixed} on child elements instead: ` +\n                `${decl.parent.selector} > * { ${fixed}: ${decl.value} }`,\n              { node: decl }\n            )\n          } else if (\n            /^(align|justify|place)-content$/.test(prop) &&\n            insideGrid(decl)\n          ) {\n            result.warn(`IE does not support ${decl.prop} on grid containers`, {\n              node: decl\n            })\n          } else if (prop === 'display' && decl.value === 'contents') {\n            result.warn(\n              'Please do not use display: contents; ' +\n                'if you have grid setting enabled',\n              { node: decl }\n            )\n            return undefined\n          } else if (decl.prop === 'grid-gap') {\n            let status = this.gridStatus(decl, result)\n            if (\n              status === 'autoplace' &&\n              !hasRowsAndColumns(decl) &&\n              !hasGridTemplate(decl)\n            ) {\n              result.warn(\n                'grid-gap only works if grid-template(-areas) is being ' +\n                  'used or both rows and columns have been declared ' +\n                  'and cells have not been manually ' +\n                  'placed inside the explicit grid',\n                { node: decl }\n              )\n            } else if (\n              (status === true || status === 'no-autoplace') &&\n              !hasGridTemplate(decl)\n            ) {\n              result.warn(\n                'grid-gap only works if grid-template(-areas) is being used',\n                { node: decl }\n              )\n            }\n          } else if (prop === 'grid-auto-columns') {\n            result.warn('grid-auto-columns is not supported by IE', {\n              node: decl\n            })\n            return undefined\n          } else if (prop === 'grid-auto-rows') {\n            result.warn('grid-auto-rows is not supported by IE', { node: decl })\n            return undefined\n          } else if (prop === 'grid-auto-flow') {\n            let hasRows = parent.some(i => i.prop === 'grid-template-rows')\n            let hasCols = parent.some(i => i.prop === 'grid-template-columns')\n\n            if (hasGridTemplate(decl)) {\n              result.warn('grid-auto-flow is not supported by IE', {\n                node: decl\n              })\n            } else if (value.includes('dense')) {\n              result.warn('grid-auto-flow: dense is not supported by IE', {\n                node: decl\n              })\n            } else if (!hasRows && !hasCols) {\n              result.warn(\n                'grid-auto-flow works only if grid-template-rows and ' +\n                  'grid-template-columns are present in the same rule',\n                { node: decl }\n              )\n            }\n            return undefined\n          } else if (value.includes('auto-fit')) {\n            result.warn('auto-fit value is not supported by IE', {\n              node: decl,\n              word: 'auto-fit'\n            })\n            return undefined\n          } else if (value.includes('auto-fill')) {\n            result.warn('auto-fill value is not supported by IE', {\n              node: decl,\n              word: 'auto-fill'\n            })\n            return undefined\n          } else if (prop.startsWith('grid-template') && value.includes('[')) {\n            result.warn(\n              'Autoprefixer currently does not support line names. ' +\n                'Try using grid-template-areas instead.',\n              { node: decl, word: '[' }\n            )\n          }\n        }\n        if (value.includes('radial-gradient')) {\n          if (OLD_RADIAL.test(decl.value)) {\n            result.warn(\n              'Gradient has outdated direction syntax. ' +\n                'New syntax is like `closest-side at 0 0` ' +\n                'instead of `0 0, closest-side`.',\n              { node: decl }\n            )\n          } else {\n            let ast = parser(value)\n\n            for (let i of ast.nodes) {\n              if (i.type === 'function' && i.value === 'radial-gradient') {\n                for (let word of i.nodes) {\n                  if (word.type === 'word') {\n                    if (word.value === 'cover') {\n                      result.warn(\n                        'Gradient has outdated direction syntax. ' +\n                          'Replace `cover` to `farthest-corner`.',\n                        { node: decl }\n                      )\n                    } else if (word.value === 'contain') {\n                      result.warn(\n                        'Gradient has outdated direction syntax. ' +\n                          'Replace `contain` to `closest-side`.',\n                        { node: decl }\n                      )\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (value.includes('linear-gradient')) {\n          if (OLD_LINEAR.test(value)) {\n            result.warn(\n              'Gradient has outdated direction syntax. ' +\n                'New syntax is like `to left` instead of `right`.',\n              { node: decl }\n            )\n          }\n        }\n      }\n\n      if (SIZES.includes(decl.prop)) {\n        if (!decl.value.includes('-fill-available')) {\n          if (decl.value.includes('fill-available')) {\n            result.warn(\n              'Replace fill-available to stretch, ' +\n                'because spec had been changed',\n              { node: decl }\n            )\n          } else if (decl.value.includes('fill')) {\n            let ast = parser(value)\n            if (ast.nodes.some(i => i.type === 'word' && i.value === 'fill')) {\n              result.warn(\n                'Replace fill to stretch, because spec had been changed',\n                { node: decl }\n              )\n            }\n          }\n        }\n      }\n\n      let prefixer\n\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n        // Transition\n        return this.prefixes.transition.add(decl, result)\n      } else if (decl.prop === 'align-self') {\n        // align-self flexbox or grid\n        let display = this.displayType(decl)\n        if (display !== 'grid' && this.prefixes.options.flexbox !== false) {\n          prefixer = this.prefixes.add['align-self']\n          if (prefixer && prefixer.prefixes) {\n            prefixer.process(decl)\n          }\n        }\n        if (this.gridStatus(decl, result) !== false) {\n          prefixer = this.prefixes.add['grid-row-align']\n          if (prefixer && prefixer.prefixes) {\n            return prefixer.process(decl, result)\n          }\n        }\n      } else if (decl.prop === 'justify-self') {\n        // justify-self flexbox or grid\n        if (this.gridStatus(decl, result) !== false) {\n          prefixer = this.prefixes.add['grid-column-align']\n          if (prefixer && prefixer.prefixes) {\n            return prefixer.process(decl, result)\n          }\n        }\n      } else if (decl.prop === 'place-self') {\n        prefixer = this.prefixes.add['place-self']\n        if (\n          prefixer &&\n          prefixer.prefixes &&\n          this.gridStatus(decl, result) !== false\n        ) {\n          return prefixer.process(decl, result)\n        }\n      } else {\n        // Properties\n        prefixer = this.prefixes.add[decl.prop]\n        if (prefixer && prefixer.prefixes) {\n          return prefixer.process(decl, result)\n        }\n      }\n\n      return undefined\n    })\n\n    // Insert grid-area prefixes. We need to be able to store the different\n    // rules as a data and hack API is not enough for this\n    if (this.gridStatus(css, result)) {\n      insertAreas(css, this.disabled)\n    }\n\n    // Values\n    return css.walkDecls(decl => {\n      if (this.disabledValue(decl, result)) return\n\n      let unprefixed = this.prefixes.unprefixed(decl.prop)\n      let list = this.prefixes.values('add', unprefixed)\n      if (Array.isArray(list)) {\n        for (let value of list) {\n          if (value.process) value.process(decl, result)\n        }\n      }\n      Value.save(this.prefixes, decl)\n    })\n  }\n\n  /**\n   * Remove unnecessary pefixes\n   */\n  remove(css, result) {\n    // At-rules\n    let resolution = this.prefixes.remove['@resolution']\n\n    css.walkAtRules((rule, i) => {\n      if (this.prefixes.remove[`@${rule.name}`]) {\n        if (!this.disabled(rule, result)) {\n          rule.parent.removeChild(i)\n        }\n      } else if (\n        rule.name === 'media' &&\n        rule.params.includes('-resolution') &&\n        resolution\n      ) {\n        resolution.clean(rule)\n      }\n    })\n\n    // Selectors\n    for (let checker of this.prefixes.remove.selectors) {\n      css.walkRules((rule, i) => {\n        if (checker.check(rule)) {\n          if (!this.disabled(rule, result)) {\n            rule.parent.removeChild(i)\n          }\n        }\n      })\n    }\n\n    return css.walkDecls((decl, i) => {\n      if (this.disabled(decl, result)) return\n\n      let rule = decl.parent\n      let unprefixed = this.prefixes.unprefixed(decl.prop)\n\n      // Transition\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n        this.prefixes.transition.remove(decl)\n      }\n\n      // Properties\n      if (\n        this.prefixes.remove[decl.prop] &&\n        this.prefixes.remove[decl.prop].remove\n      ) {\n        let notHack = this.prefixes.group(decl).down(other => {\n          return this.prefixes.normalize(other.prop) === unprefixed\n        })\n\n        if (unprefixed === 'flex-flow') {\n          notHack = true\n        }\n\n        if (decl.prop === '-webkit-box-orient') {\n          let hacks = { 'flex-direction': true, 'flex-flow': true }\n          if (!decl.parent.some(j => hacks[j.prop])) return\n        }\n\n        if (notHack && !this.withHackValue(decl)) {\n          if (decl.raw('before').includes('\\n')) {\n            this.reduceSpaces(decl)\n          }\n          rule.removeChild(i)\n          return\n        }\n      }\n\n      // Values\n      for (let checker of this.prefixes.values('remove', unprefixed)) {\n        if (!checker.check) continue\n        if (!checker.check(decl.value)) continue\n\n        unprefixed = checker.unprefixed\n        let notHack = this.prefixes.group(decl).down(other => {\n          return other.value.includes(unprefixed)\n        })\n\n        if (notHack) {\n          rule.removeChild(i)\n          return\n        }\n      }\n    })\n  }\n\n  /**\n   * Some rare old values, which is not in standard\n   */\n  withHackValue(decl) {\n    return decl.prop === '-webkit-background-clip' && decl.value === 'text'\n  }\n\n  /**\n   * Check for grid/flexbox options.\n   */\n  disabledValue(node, result) {\n    if (this.gridStatus(node, result) === false && node.type === 'decl') {\n      if (node.prop === 'display' && node.value.includes('grid')) {\n        return true\n      }\n    }\n    if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n      if (node.prop === 'display' && node.value.includes('flex')) {\n        return true\n      }\n    }\n    if (node.type === 'decl' && node.prop === 'content') {\n      return true\n    }\n\n    return this.disabled(node, result)\n  }\n\n  /**\n   * Check for grid/flexbox options.\n   */\n  disabledDecl(node, result) {\n    if (this.gridStatus(node, result) === false && node.type === 'decl') {\n      if (node.prop.includes('grid') || node.prop === 'justify-items') {\n        return true\n      }\n    }\n    if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n      let other = ['order', 'justify-content', 'align-items', 'align-content']\n      if (node.prop.includes('flex') || other.includes(node.prop)) {\n        return true\n      }\n    }\n\n    return this.disabled(node, result)\n  }\n\n  /**\n   * Check for control comment and global options\n   */\n  disabled(node, result) {\n    if (!node) return false\n\n    if (node._autoprefixerDisabled !== undefined) {\n      return node._autoprefixerDisabled\n    }\n\n    if (node.parent) {\n      let p = node.prev()\n      if (p && p.type === 'comment' && IGNORE_NEXT.test(p.text)) {\n        node._autoprefixerDisabled = true\n        node._autoprefixerSelfDisabled = true\n        return true\n      }\n    }\n\n    let value = null\n    if (node.nodes) {\n      let status\n      node.each(i => {\n        if (i.type !== 'comment') return\n        if (/(!\\s*)?autoprefixer:\\s*(off|on)/i.test(i.text)) {\n          if (typeof status !== 'undefined') {\n            result.warn(\n              'Second Autoprefixer control comment ' +\n                'was ignored. Autoprefixer applies control ' +\n                'comment to whole block, not to next rules.',\n              { node: i }\n            )\n          } else {\n            status = /on/i.test(i.text)\n          }\n        }\n      })\n\n      if (status !== undefined) {\n        value = !status\n      }\n    }\n    if (!node.nodes || value === null) {\n      if (node.parent) {\n        let isParentDisabled = this.disabled(node.parent, result)\n        if (node.parent._autoprefixerSelfDisabled === true) {\n          value = false\n        } else {\n          value = isParentDisabled\n        }\n      } else {\n        value = false\n      }\n    }\n    node._autoprefixerDisabled = value\n    return value\n  }\n\n  /**\n   * Normalize spaces in cascade declaration group\n   */\n  reduceSpaces(decl) {\n    let stop = false\n    this.prefixes.group(decl).up(() => {\n      stop = true\n      return true\n    })\n    if (stop) {\n      return\n    }\n\n    let parts = decl.raw('before').split('\\n')\n    let prevMin = parts[parts.length - 1].length\n    let diff = false\n\n    this.prefixes.group(decl).down(other => {\n      parts = other.raw('before').split('\\n')\n      let last = parts.length - 1\n\n      if (parts[last].length > prevMin) {\n        if (diff === false) {\n          diff = parts[last].length - prevMin\n        }\n\n        parts[last] = parts[last].slice(0, -diff)\n        other.raws.before = parts.join('\\n')\n      }\n    })\n  }\n\n  /**\n   * Is it flebox or grid rule\n   */\n  displayType(decl) {\n    for (let i of decl.parent.nodes) {\n      if (i.prop !== 'display') {\n        continue\n      }\n\n      if (i.value.includes('flex')) {\n        return 'flex'\n      }\n\n      if (i.value.includes('grid')) {\n        return 'grid'\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Set grid option via control comment\n   */\n  gridStatus(node, result) {\n    if (!node) return false\n\n    if (node._autoprefixerGridStatus !== undefined) {\n      return node._autoprefixerGridStatus\n    }\n\n    let value = null\n    if (node.nodes) {\n      let status\n      node.each(i => {\n        if (i.type !== 'comment') return\n        if (GRID_REGEX.test(i.text)) {\n          let hasAutoplace = /:\\s*autoplace/i.test(i.text)\n          let noAutoplace = /no-autoplace/i.test(i.text)\n          if (typeof status !== 'undefined') {\n            result.warn(\n              'Second Autoprefixer grid control comment was ' +\n                'ignored. Autoprefixer applies control comments to the whole ' +\n                'block, not to the next rules.',\n              { node: i }\n            )\n          } else if (hasAutoplace) {\n            status = 'autoplace'\n          } else if (noAutoplace) {\n            status = true\n          } else {\n            status = /on/i.test(i.text)\n          }\n        }\n      })\n\n      if (status !== undefined) {\n        value = status\n      }\n    }\n\n    if (node.type === 'atrule' && node.name === 'supports') {\n      let params = node.params\n      if (params.includes('grid') && params.includes('auto')) {\n        value = false\n      }\n    }\n\n    if (!node.nodes || value === null) {\n      if (node.parent) {\n        let isParentGrid = this.gridStatus(node.parent, result)\n        if (node.parent._autoprefixerSelfDisabled === true) {\n          value = false\n        } else {\n          value = isParentGrid\n        }\n      } else if (typeof this.prefixes.options.grid !== 'undefined') {\n        value = this.prefixes.options.grid\n      } else if (typeof process.env.AUTOPREFIXER_GRID !== 'undefined') {\n        if (process.env.AUTOPREFIXER_GRID === 'autoplace') {\n          value = 'autoplace'\n        } else {\n          value = true\n        }\n      } else {\n        value = false\n      }\n    }\n\n    node._autoprefixerGridStatus = value\n    return value\n  }\n}\n\nmodule.exports = Processor\n"],"mappings":";;;AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAE5C,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAIE,WAAW,GAAGF,OAAO,CAAC,oBAAoB,CAAC,CAACE,WAAW;AAE3D,IAAMC,UAAU,GAAG,sDAAsD;AACzE,IAAMC,UAAU,GAAG,0DAA0D;AAC7E,IAAMC,WAAW,GAAG,uCAAuC;AAC3D,IAAMC,UAAU,GAAG,yDAAyD;AAE5E,IAAMC,KAAK,GAAG,CACZ,OAAO,EACP,QAAQ,EACR,WAAW,EACX,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,aAAa,EACb,iBAAiB,EACjB,iBAAiB,EACjB,YAAY,EACZ,gBAAgB,EAChB,gBAAgB,CACjB;AAED,SAASC,eAAe,CAACC,IAAI,EAAE;EAC7B,OAAOA,IAAI,CAACC,MAAM,CAACC,IAAI,CACrB,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACC,IAAI,KAAK,eAAe,IAAID,CAAC,CAACC,IAAI,KAAK,qBAAqB;EAAA,EACpE;AACH;AAEA,SAASC,iBAAiB,CAACL,IAAI,EAAE;EAC/B,IAAIM,OAAO,GAAGN,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACC,IAAI,KAAK,oBAAoB;EAAA,EAAC;EACpE,IAAIG,UAAU,GAAGP,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACC,IAAI,KAAK,uBAAuB;EAAA,EAAC;EAC1E,OAAOE,OAAO,IAAIC,UAAU;AAC9B;AAAC,IAEKC,SAAS;EAAA;;EACb,mBAAYC,QAAQ,EAAE;IAAA;IACpB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;;EAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,aAAIC,GAAG,EAAEC,MAAM,EAAE;MAAA;MACf;MACA,IAAIC,UAAU,GAAG,IAAI,CAACH,QAAQ,CAACI,GAAG,CAAC,aAAa,CAAC;MACjD,IAAIC,SAAS,GAAG,IAAI,CAACL,QAAQ,CAACI,GAAG,CAAC,YAAY,CAAC;MAC/C,IAAIE,QAAQ,GAAG,IAAI,CAACN,QAAQ,CAACI,GAAG,CAAC,WAAW,CAAC;MAC7C,IAAIG,QAAQ,GAAG,IAAI,CAACP,QAAQ,CAACI,GAAG,CAAC,WAAW,CAAC;MAE7CH,GAAG,CAACO,WAAW,CAAC,UAAAC,IAAI,EAAI;QACtB,IAAIA,IAAI,CAACC,IAAI,KAAK,WAAW,EAAE;UAC7B,IAAI,CAAC,KAAI,CAACC,QAAQ,CAACF,IAAI,EAAEP,MAAM,CAAC,EAAE;YAChC,OAAOG,SAAS,IAAIA,SAAS,CAACO,OAAO,CAACH,IAAI,CAAC;UAC7C;QACF,CAAC,MAAM,IAAIA,IAAI,CAACC,IAAI,KAAK,UAAU,EAAE;UACnC,IAAI,CAAC,KAAI,CAACC,QAAQ,CAACF,IAAI,EAAEP,MAAM,CAAC,EAAE;YAChC,OAAOI,QAAQ,IAAIA,QAAQ,CAACM,OAAO,CAACH,IAAI,CAAC;UAC3C;QACF,CAAC,MAAM,IAAIA,IAAI,CAACC,IAAI,KAAK,UAAU,EAAE;UACnC,IACE,KAAI,CAACV,QAAQ,CAACa,OAAO,CAACN,QAAQ,KAAK,KAAK,IACxC,CAAC,KAAI,CAACI,QAAQ,CAACF,IAAI,EAAEP,MAAM,CAAC,EAC5B;YACA,OAAOK,QAAQ,CAACK,OAAO,CAACH,IAAI,CAAC;UAC/B;QACF,CAAC,MAAM,IAAIA,IAAI,CAACC,IAAI,KAAK,OAAO,IAAID,IAAI,CAACK,MAAM,CAACC,QAAQ,CAAC,aAAa,CAAC,EAAE;UACvE,IAAI,CAAC,KAAI,CAACJ,QAAQ,CAACF,IAAI,EAAEP,MAAM,CAAC,EAAE;YAChC,OAAOC,UAAU,IAAIA,UAAU,CAACS,OAAO,CAACH,IAAI,CAAC;UAC/C;QACF;QAEA,OAAOO,SAAS;MAClB,CAAC,CAAC;;MAEF;MACAf,GAAG,CAACgB,SAAS,CAAC,UAAAR,IAAI,EAAI;QACpB,IAAI,KAAI,CAACE,QAAQ,CAACF,IAAI,EAAEP,MAAM,CAAC,EAAE,OAAOc,SAAS;QAEjD,OAAO,KAAI,CAAChB,QAAQ,CAACI,GAAG,CAACc,SAAS,CAACC,GAAG,CAAC,UAAAC,QAAQ,EAAI;UACjD,OAAOA,QAAQ,CAACR,OAAO,CAACH,IAAI,EAAEP,MAAM,CAAC;QACvC,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,SAASmB,UAAU,CAAC9B,IAAI,EAAE;QACxB,OAAOA,IAAI,CAACC,MAAM,CAAC8B,KAAK,CAAC7B,IAAI,CAAC,UAAA8B,IAAI,EAAI;UACpC,IAAIA,IAAI,CAACC,IAAI,KAAK,MAAM,EAAE,OAAO,KAAK;UACtC,IAAIC,WAAW,GACbF,IAAI,CAAC5B,IAAI,KAAK,SAAS,IAAI,gBAAgB,CAAC+B,IAAI,CAACH,IAAI,CAACI,KAAK,CAAC;UAC9D,IAAIC,YAAY,GAAGL,IAAI,CAAC5B,IAAI,CAACkC,UAAU,CAAC,eAAe,CAAC;UACxD,IAAIC,OAAO,GAAG,qBAAqB,CAACJ,IAAI,CAACH,IAAI,CAAC5B,IAAI,CAAC;UACnD,OAAO8B,WAAW,IAAIG,YAAY,IAAIE,OAAO;QAC/C,CAAC,CAAC;MACJ;MACA,SAASC,UAAU,CAACxC,IAAI,EAAE;QACxB,OAAOA,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,UAAA8B,IAAI,EAAI;UAC9B,OAAOA,IAAI,CAAC5B,IAAI,KAAK,SAAS,IAAI,gBAAgB,CAAC+B,IAAI,CAACH,IAAI,CAACI,KAAK,CAAC;QACrE,CAAC,CAAC;MACJ;MAEA,IAAIK,YAAY,GACd,IAAI,CAACC,UAAU,CAAChC,GAAG,EAAEC,MAAM,CAAC,IAC5B,IAAI,CAACF,QAAQ,CAACI,GAAG,CAAC,WAAW,CAAC,IAC9B,IAAI,CAACJ,QAAQ,CAACI,GAAG,CAAC,WAAW,CAAC,CAACJ,QAAQ;MAEzCC,GAAG,CAACiC,SAAS,CAAC,UAAA3C,IAAI,EAAI;QACpB,IAAI,KAAI,CAAC4C,YAAY,CAAC5C,IAAI,EAAEW,MAAM,CAAC,EAAE,OAAOc,SAAS;QAErD,IAAIxB,MAAM,GAAGD,IAAI,CAACC,MAAM;QACxB,IAAIG,IAAI,GAAGJ,IAAI,CAACI,IAAI;QACpB,IAAIgC,KAAK,GAAGpC,IAAI,CAACoC,KAAK;QAEtB,IAAIhC,IAAI,KAAK,cAAc,EAAE;UAC3B,IAAIH,MAAM,CAAC4C,KAAK,CAAC,UAAA1C,CAAC;YAAA,OAAIA,CAAC,CAACC,IAAI,KAAK,oBAAoB;UAAA,EAAC,EAAE;YACtDO,MAAM,CAACmC,IAAI,CACT,8CAA8C,GAC5C,qDAAqD,EACvD;cAAEd,IAAI,EAAEhC;YAAK,CAAC,CACf;UACH;QACF,CAAC,MAAM,IAAII,IAAI,KAAK,eAAe,EAAE;UACnCO,MAAM,CAACmC,IAAI,CACT,+DAA+D,EAC/D;YAAEd,IAAI,EAAEhC;UAAK,CAAC,CACf;UACD,OAAOyB,SAAS;QAClB,CAAC,MAAM,IAAIrB,IAAI,KAAK,kBAAkB,EAAE;UACtCO,MAAM,CAACmC,IAAI,CACT,qEAAqE,EACrE;YAAEd,IAAI,EAAEhC;UAAK,CAAC,CACf;UACD,OAAOyB,SAAS;QAClB,CAAC,MAAM,IAAIrB,IAAI,KAAK,SAAS,IAAIgC,KAAK,KAAK,KAAK,EAAE;UAChDzB,MAAM,CAACmC,IAAI,CACT,+CAA+C,GAC7C,yBAAyB,EAC3B;YAAEd,IAAI,EAAEhC;UAAK,CAAC,CACf;UACD,OAAOyB,SAAS;QAClB,CAAC,MAAM,IAAIrB,IAAI,KAAK,wBAAwB,EAAE;UAC5C,IAAIgC,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,MAAM,EAAE;YACzCzB,MAAM,CAACmC,IAAI,CACT,qDAAqD,GACnD,oDAAoD,EACtD;cAAEd,IAAI,EAAEhC;YAAK,CAAC,CACf;UACH;QACF,CAAC,MAAM,IACL,yCAAyC,CAACmC,IAAI,CAAC/B,IAAI,CAAC,IACpDoC,UAAU,CAACxC,IAAI,CAAC,EAChB;UACA,IAAIoC,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,KAAK,EAAE;YACxCzB,MAAM,CAACmC,IAAI,CACT,UAAGV,KAAK,gEACEA,KAAK,aAAU,EACzB;cAAEJ,IAAI,EAAEhC;YAAK,CAAC,CACf;UACH;QACF,CAAC,MAAM,IAAII,IAAI,KAAK,sBAAsB,IAAIgC,KAAK,KAAK,KAAK,EAAE;UAC7DzB,MAAM,CAACmC,IAAI,CACT,uCAAuC,GACrC,+DAA+D,EACjE;YAAEd,IAAI,EAAEhC;UAAK,CAAC,CACf;QACH,CAAC,MAAM;UACL,IAAIyC,YAAY,IAAI,KAAI,CAACC,UAAU,CAAC1C,IAAI,EAAEW,MAAM,CAAC,EAAE;YACjD,IAAIX,IAAI,CAACoC,KAAK,KAAK,SAAS,EAAE;cAC5BzB,MAAM,CAACmC,IAAI,CAAC,6BAA6B,EAAE;gBAAEd,IAAI,EAAEhC;cAAK,CAAC,CAAC;YAC5D;YACA,IAAI,+BAA+B,CAACmC,IAAI,CAAC/B,IAAI,CAAC,IAAI0B,UAAU,CAAC9B,IAAI,CAAC,EAAE;cAClE,IAAI+C,KAAK,GAAG3C,IAAI,CAAC4C,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC;cAC3CrC,MAAM,CAACmC,IAAI,CACT,8BAAuB1C,IAAI,iDACZ2C,KAAK,iCAA8B,aAC7C/C,IAAI,CAACC,MAAM,CAAC4B,QAAQ,oBAAUkB,KAAK,eAAK/C,IAAI,CAACoC,KAAK,OAAI,EAC3D;gBAAEJ,IAAI,EAAEhC;cAAK,CAAC,CACf;YACH,CAAC,MAAM,IACL,iCAAiC,CAACmC,IAAI,CAAC/B,IAAI,CAAC,IAC5C0B,UAAU,CAAC9B,IAAI,CAAC,EAChB;cACAW,MAAM,CAACmC,IAAI,+BAAwB9C,IAAI,CAACI,IAAI,0BAAuB;gBACjE4B,IAAI,EAAEhC;cACR,CAAC,CAAC;YACJ,CAAC,MAAM,IAAII,IAAI,KAAK,SAAS,IAAIJ,IAAI,CAACoC,KAAK,KAAK,UAAU,EAAE;cAC1DzB,MAAM,CAACmC,IAAI,CACT,uCAAuC,GACrC,kCAAkC,EACpC;gBAAEd,IAAI,EAAEhC;cAAK,CAAC,CACf;cACD,OAAOyB,SAAS;YAClB,CAAC,MAAM,IAAIzB,IAAI,CAACI,IAAI,KAAK,UAAU,EAAE;cACnC,IAAI6C,MAAM,GAAG,KAAI,CAACP,UAAU,CAAC1C,IAAI,EAAEW,MAAM,CAAC;cAC1C,IACEsC,MAAM,KAAK,WAAW,IACtB,CAAC5C,iBAAiB,CAACL,IAAI,CAAC,IACxB,CAACD,eAAe,CAACC,IAAI,CAAC,EACtB;gBACAW,MAAM,CAACmC,IAAI,CACT,wDAAwD,GACtD,mDAAmD,GACnD,mCAAmC,GACnC,iCAAiC,EACnC;kBAAEd,IAAI,EAAEhC;gBAAK,CAAC,CACf;cACH,CAAC,MAAM,IACL,CAACiD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,cAAc,KAC7C,CAAClD,eAAe,CAACC,IAAI,CAAC,EACtB;gBACAW,MAAM,CAACmC,IAAI,CACT,4DAA4D,EAC5D;kBAAEd,IAAI,EAAEhC;gBAAK,CAAC,CACf;cACH;YACF,CAAC,MAAM,IAAII,IAAI,KAAK,mBAAmB,EAAE;cACvCO,MAAM,CAACmC,IAAI,CAAC,0CAA0C,EAAE;gBACtDd,IAAI,EAAEhC;cACR,CAAC,CAAC;cACF,OAAOyB,SAAS;YAClB,CAAC,MAAM,IAAIrB,IAAI,KAAK,gBAAgB,EAAE;cACpCO,MAAM,CAACmC,IAAI,CAAC,uCAAuC,EAAE;gBAAEd,IAAI,EAAEhC;cAAK,CAAC,CAAC;cACpE,OAAOyB,SAAS;YAClB,CAAC,MAAM,IAAIrB,IAAI,KAAK,gBAAgB,EAAE;cACpC,IAAIE,OAAO,GAAGL,MAAM,CAACC,IAAI,CAAC,UAAAC,CAAC;gBAAA,OAAIA,CAAC,CAACC,IAAI,KAAK,oBAAoB;cAAA,EAAC;cAC/D,IAAI8C,OAAO,GAAGjD,MAAM,CAACC,IAAI,CAAC,UAAAC,CAAC;gBAAA,OAAIA,CAAC,CAACC,IAAI,KAAK,uBAAuB;cAAA,EAAC;cAElE,IAAIL,eAAe,CAACC,IAAI,CAAC,EAAE;gBACzBW,MAAM,CAACmC,IAAI,CAAC,uCAAuC,EAAE;kBACnDd,IAAI,EAAEhC;gBACR,CAAC,CAAC;cACJ,CAAC,MAAM,IAAIoC,KAAK,CAACZ,QAAQ,CAAC,OAAO,CAAC,EAAE;gBAClCb,MAAM,CAACmC,IAAI,CAAC,8CAA8C,EAAE;kBAC1Dd,IAAI,EAAEhC;gBACR,CAAC,CAAC;cACJ,CAAC,MAAM,IAAI,CAACM,OAAO,IAAI,CAAC4C,OAAO,EAAE;gBAC/BvC,MAAM,CAACmC,IAAI,CACT,sDAAsD,GACpD,oDAAoD,EACtD;kBAAEd,IAAI,EAAEhC;gBAAK,CAAC,CACf;cACH;cACA,OAAOyB,SAAS;YAClB,CAAC,MAAM,IAAIW,KAAK,CAACZ,QAAQ,CAAC,UAAU,CAAC,EAAE;cACrCb,MAAM,CAACmC,IAAI,CAAC,uCAAuC,EAAE;gBACnDd,IAAI,EAAEhC,IAAI;gBACVmD,IAAI,EAAE;cACR,CAAC,CAAC;cACF,OAAO1B,SAAS;YAClB,CAAC,MAAM,IAAIW,KAAK,CAACZ,QAAQ,CAAC,WAAW,CAAC,EAAE;cACtCb,MAAM,CAACmC,IAAI,CAAC,wCAAwC,EAAE;gBACpDd,IAAI,EAAEhC,IAAI;gBACVmD,IAAI,EAAE;cACR,CAAC,CAAC;cACF,OAAO1B,SAAS;YAClB,CAAC,MAAM,IAAIrB,IAAI,CAACkC,UAAU,CAAC,eAAe,CAAC,IAAIF,KAAK,CAACZ,QAAQ,CAAC,GAAG,CAAC,EAAE;cAClEb,MAAM,CAACmC,IAAI,CACT,sDAAsD,GACpD,wCAAwC,EAC1C;gBAAEd,IAAI,EAAEhC,IAAI;gBAAEmD,IAAI,EAAE;cAAI,CAAC,CAC1B;YACH;UACF;UACA,IAAIf,KAAK,CAACZ,QAAQ,CAAC,iBAAiB,CAAC,EAAE;YACrC,IAAI7B,UAAU,CAACwC,IAAI,CAACnC,IAAI,CAACoC,KAAK,CAAC,EAAE;cAC/BzB,MAAM,CAACmC,IAAI,CACT,0CAA0C,GACxC,2CAA2C,GAC3C,iCAAiC,EACnC;gBAAEd,IAAI,EAAEhC;cAAK,CAAC,CACf;YACH,CAAC,MAAM;cACL,IAAIoD,GAAG,GAAG9D,MAAM,CAAC8C,KAAK,CAAC;cAAA,2CAETgB,GAAG,CAACrB,KAAK;gBAAA;cAAA;gBAAvB,oDAAyB;kBAAA,IAAhB5B,CAAC;kBACR,IAAIA,CAAC,CAAC8B,IAAI,KAAK,UAAU,IAAI9B,CAAC,CAACiC,KAAK,KAAK,iBAAiB,EAAE;oBAAA,4CACzCjC,CAAC,CAAC4B,KAAK;sBAAA;oBAAA;sBAAxB,uDAA0B;wBAAA,IAAjBoB,IAAI;wBACX,IAAIA,IAAI,CAAClB,IAAI,KAAK,MAAM,EAAE;0BACxB,IAAIkB,IAAI,CAACf,KAAK,KAAK,OAAO,EAAE;4BAC1BzB,MAAM,CAACmC,IAAI,CACT,0CAA0C,GACxC,uCAAuC,EACzC;8BAAEd,IAAI,EAAEhC;4BAAK,CAAC,CACf;0BACH,CAAC,MAAM,IAAImD,IAAI,CAACf,KAAK,KAAK,SAAS,EAAE;4BACnCzB,MAAM,CAACmC,IAAI,CACT,0CAA0C,GACxC,sCAAsC,EACxC;8BAAEd,IAAI,EAAEhC;4BAAK,CAAC,CACf;0BACH;wBACF;sBACF;oBAAC;sBAAA;oBAAA;sBAAA;oBAAA;kBACH;gBACF;cAAC;gBAAA;cAAA;gBAAA;cAAA;YACH;UACF;UACA,IAAIoC,KAAK,CAACZ,QAAQ,CAAC,iBAAiB,CAAC,EAAE;YACrC,IAAI9B,UAAU,CAACyC,IAAI,CAACC,KAAK,CAAC,EAAE;cAC1BzB,MAAM,CAACmC,IAAI,CACT,0CAA0C,GACxC,kDAAkD,EACpD;gBAAEd,IAAI,EAAEhC;cAAK,CAAC,CACf;YACH;UACF;QACF;QAEA,IAAIF,KAAK,CAAC0B,QAAQ,CAACxB,IAAI,CAACI,IAAI,CAAC,EAAE;UAC7B,IAAI,CAACJ,IAAI,CAACoC,KAAK,CAACZ,QAAQ,CAAC,iBAAiB,CAAC,EAAE;YAC3C,IAAIxB,IAAI,CAACoC,KAAK,CAACZ,QAAQ,CAAC,gBAAgB,CAAC,EAAE;cACzCb,MAAM,CAACmC,IAAI,CACT,qCAAqC,GACnC,+BAA+B,EACjC;gBAAEd,IAAI,EAAEhC;cAAK,CAAC,CACf;YACH,CAAC,MAAM,IAAIA,IAAI,CAACoC,KAAK,CAACZ,QAAQ,CAAC,MAAM,CAAC,EAAE;cACtC,IAAI4B,IAAG,GAAG9D,MAAM,CAAC8C,KAAK,CAAC;cACvB,IAAIgB,IAAG,CAACrB,KAAK,CAAC7B,IAAI,CAAC,UAAAC,CAAC;gBAAA,OAAIA,CAAC,CAAC8B,IAAI,KAAK,MAAM,IAAI9B,CAAC,CAACiC,KAAK,KAAK,MAAM;cAAA,EAAC,EAAE;gBAChEzB,MAAM,CAACmC,IAAI,CACT,wDAAwD,EACxD;kBAAEd,IAAI,EAAEhC;gBAAK,CAAC,CACf;cACH;YACF;UACF;QACF;QAEA,IAAIqD,QAAQ;QAEZ,IAAIrD,IAAI,CAACI,IAAI,KAAK,YAAY,IAAIJ,IAAI,CAACI,IAAI,KAAK,qBAAqB,EAAE;UACrE;UACA,OAAO,KAAI,CAACK,QAAQ,CAAC6C,UAAU,CAACzC,GAAG,CAACb,IAAI,EAAEW,MAAM,CAAC;QACnD,CAAC,MAAM,IAAIX,IAAI,CAACI,IAAI,KAAK,YAAY,EAAE;UACrC;UACA,IAAImD,OAAO,GAAG,KAAI,CAACC,WAAW,CAACxD,IAAI,CAAC;UACpC,IAAIuD,OAAO,KAAK,MAAM,IAAI,KAAI,CAAC9C,QAAQ,CAACa,OAAO,CAACmC,OAAO,KAAK,KAAK,EAAE;YACjEJ,QAAQ,GAAG,KAAI,CAAC5C,QAAQ,CAACI,GAAG,CAAC,YAAY,CAAC;YAC1C,IAAIwC,QAAQ,IAAIA,QAAQ,CAAC5C,QAAQ,EAAE;cACjC4C,QAAQ,CAAChC,OAAO,CAACrB,IAAI,CAAC;YACxB;UACF;UACA,IAAI,KAAI,CAAC0C,UAAU,CAAC1C,IAAI,EAAEW,MAAM,CAAC,KAAK,KAAK,EAAE;YAC3C0C,QAAQ,GAAG,KAAI,CAAC5C,QAAQ,CAACI,GAAG,CAAC,gBAAgB,CAAC;YAC9C,IAAIwC,QAAQ,IAAIA,QAAQ,CAAC5C,QAAQ,EAAE;cACjC,OAAO4C,QAAQ,CAAChC,OAAO,CAACrB,IAAI,EAAEW,MAAM,CAAC;YACvC;UACF;QACF,CAAC,MAAM,IAAIX,IAAI,CAACI,IAAI,KAAK,cAAc,EAAE;UACvC;UACA,IAAI,KAAI,CAACsC,UAAU,CAAC1C,IAAI,EAAEW,MAAM,CAAC,KAAK,KAAK,EAAE;YAC3C0C,QAAQ,GAAG,KAAI,CAAC5C,QAAQ,CAACI,GAAG,CAAC,mBAAmB,CAAC;YACjD,IAAIwC,QAAQ,IAAIA,QAAQ,CAAC5C,QAAQ,EAAE;cACjC,OAAO4C,QAAQ,CAAChC,OAAO,CAACrB,IAAI,EAAEW,MAAM,CAAC;YACvC;UACF;QACF,CAAC,MAAM,IAAIX,IAAI,CAACI,IAAI,KAAK,YAAY,EAAE;UACrCiD,QAAQ,GAAG,KAAI,CAAC5C,QAAQ,CAACI,GAAG,CAAC,YAAY,CAAC;UAC1C,IACEwC,QAAQ,IACRA,QAAQ,CAAC5C,QAAQ,IACjB,KAAI,CAACiC,UAAU,CAAC1C,IAAI,EAAEW,MAAM,CAAC,KAAK,KAAK,EACvC;YACA,OAAO0C,QAAQ,CAAChC,OAAO,CAACrB,IAAI,EAAEW,MAAM,CAAC;UACvC;QACF,CAAC,MAAM;UACL;UACA0C,QAAQ,GAAG,KAAI,CAAC5C,QAAQ,CAACI,GAAG,CAACb,IAAI,CAACI,IAAI,CAAC;UACvC,IAAIiD,QAAQ,IAAIA,QAAQ,CAAC5C,QAAQ,EAAE;YACjC,OAAO4C,QAAQ,CAAChC,OAAO,CAACrB,IAAI,EAAEW,MAAM,CAAC;UACvC;QACF;QAEA,OAAOc,SAAS;MAClB,CAAC,CAAC;;MAEF;MACA;MACA,IAAI,IAAI,CAACiB,UAAU,CAAChC,GAAG,EAAEC,MAAM,CAAC,EAAE;QAChClB,WAAW,CAACiB,GAAG,EAAE,IAAI,CAACU,QAAQ,CAAC;MACjC;;MAEA;MACA,OAAOV,GAAG,CAACiC,SAAS,CAAC,UAAA3C,IAAI,EAAI;QAC3B,IAAI,KAAI,CAAC0D,aAAa,CAAC1D,IAAI,EAAEW,MAAM,CAAC,EAAE;QAEtC,IAAIgD,UAAU,GAAG,KAAI,CAAClD,QAAQ,CAACkD,UAAU,CAAC3D,IAAI,CAACI,IAAI,CAAC;QACpD,IAAIwD,IAAI,GAAG,KAAI,CAACnD,QAAQ,CAACoD,MAAM,CAAC,KAAK,EAAEF,UAAU,CAAC;QAClD,IAAIG,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;UAAA,4CACLA,IAAI;YAAA;UAAA;YAAtB,uDAAwB;cAAA,IAAfxB,KAAK;cACZ,IAAIA,KAAK,CAACf,OAAO,EAAEe,KAAK,CAACf,OAAO,CAACrB,IAAI,EAAEW,MAAM,CAAC;YAChD;UAAC;YAAA;UAAA;YAAA;UAAA;QACH;QACAnB,KAAK,CAACwE,IAAI,CAAC,KAAI,CAACvD,QAAQ,EAAET,IAAI,CAAC;MACjC,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,gBAAOU,GAAG,EAAEC,MAAM,EAAE;MAAA;MAClB;MACA,IAAIC,UAAU,GAAG,IAAI,CAACH,QAAQ,CAACwD,MAAM,CAAC,aAAa,CAAC;MAEpDvD,GAAG,CAACO,WAAW,CAAC,UAACC,IAAI,EAAEf,CAAC,EAAK;QAC3B,IAAI,MAAI,CAACM,QAAQ,CAACwD,MAAM,YAAK/C,IAAI,CAACC,IAAI,EAAG,EAAE;UACzC,IAAI,CAAC,MAAI,CAACC,QAAQ,CAACF,IAAI,EAAEP,MAAM,CAAC,EAAE;YAChCO,IAAI,CAACjB,MAAM,CAACiE,WAAW,CAAC/D,CAAC,CAAC;UAC5B;QACF,CAAC,MAAM,IACLe,IAAI,CAACC,IAAI,KAAK,OAAO,IACrBD,IAAI,CAACK,MAAM,CAACC,QAAQ,CAAC,aAAa,CAAC,IACnCZ,UAAU,EACV;UACAA,UAAU,CAACuD,KAAK,CAACjD,IAAI,CAAC;QACxB;MACF,CAAC,CAAC;;MAEF;MAAA,4CACoB,IAAI,CAACT,QAAQ,CAACwD,MAAM,CAACtC,SAAS;QAAA;MAAA;QAAA,6BAAE;UAAA,IAA3CyC,OAAO;UACd1D,GAAG,CAACgB,SAAS,CAAC,UAACR,IAAI,EAAEf,CAAC,EAAK;YACzB,IAAIiE,OAAO,CAACC,KAAK,CAACnD,IAAI,CAAC,EAAE;cACvB,IAAI,CAAC,MAAI,CAACE,QAAQ,CAACF,IAAI,EAAEP,MAAM,CAAC,EAAE;gBAChCO,IAAI,CAACjB,MAAM,CAACiE,WAAW,CAAC/D,CAAC,CAAC;cAC5B;YACF;UACF,CAAC,CAAC;QACJ,CAAC;QARD;UAAA;QAAA;MAQC;QAAA;MAAA;QAAA;MAAA;MAED,OAAOO,GAAG,CAACiC,SAAS,CAAC,UAAC3C,IAAI,EAAEG,CAAC,EAAK;QAChC,IAAI,MAAI,CAACiB,QAAQ,CAACpB,IAAI,EAAEW,MAAM,CAAC,EAAE;QAEjC,IAAIO,IAAI,GAAGlB,IAAI,CAACC,MAAM;QACtB,IAAI0D,UAAU,GAAG,MAAI,CAAClD,QAAQ,CAACkD,UAAU,CAAC3D,IAAI,CAACI,IAAI,CAAC;;QAEpD;QACA,IAAIJ,IAAI,CAACI,IAAI,KAAK,YAAY,IAAIJ,IAAI,CAACI,IAAI,KAAK,qBAAqB,EAAE;UACrE,MAAI,CAACK,QAAQ,CAAC6C,UAAU,CAACW,MAAM,CAACjE,IAAI,CAAC;QACvC;;QAEA;QACA,IACE,MAAI,CAACS,QAAQ,CAACwD,MAAM,CAACjE,IAAI,CAACI,IAAI,CAAC,IAC/B,MAAI,CAACK,QAAQ,CAACwD,MAAM,CAACjE,IAAI,CAACI,IAAI,CAAC,CAAC6D,MAAM,EACtC;UACA,IAAIK,OAAO,GAAG,MAAI,CAAC7D,QAAQ,CAAC8D,KAAK,CAACvE,IAAI,CAAC,CAACwE,IAAI,CAAC,UAAAC,KAAK,EAAI;YACpD,OAAO,MAAI,CAAChE,QAAQ,CAACiE,SAAS,CAACD,KAAK,CAACrE,IAAI,CAAC,KAAKuD,UAAU;UAC3D,CAAC,CAAC;UAEF,IAAIA,UAAU,KAAK,WAAW,EAAE;YAC9BW,OAAO,GAAG,IAAI;UAChB;UAEA,IAAItE,IAAI,CAACI,IAAI,KAAK,oBAAoB,EAAE;YACtC,IAAIuE,KAAK,GAAG;cAAE,gBAAgB,EAAE,IAAI;cAAE,WAAW,EAAE;YAAK,CAAC;YACzD,IAAI,CAAC3E,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,UAAA0E,CAAC;cAAA,OAAID,KAAK,CAACC,CAAC,CAACxE,IAAI,CAAC;YAAA,EAAC,EAAE;UAC7C;UAEA,IAAIkE,OAAO,IAAI,CAAC,MAAI,CAACO,aAAa,CAAC7E,IAAI,CAAC,EAAE;YACxC,IAAIA,IAAI,CAAC8E,GAAG,CAAC,QAAQ,CAAC,CAACtD,QAAQ,CAAC,IAAI,CAAC,EAAE;cACrC,MAAI,CAACuD,YAAY,CAAC/E,IAAI,CAAC;YACzB;YACAkB,IAAI,CAACgD,WAAW,CAAC/D,CAAC,CAAC;YACnB;UACF;QACF;;QAEA;QAAA,4CACoB,MAAI,CAACM,QAAQ,CAACoD,MAAM,CAAC,QAAQ,EAAEF,UAAU,CAAC;UAAA;QAAA;UAA9D,uDAAgE;YAAA,IAAvDS,OAAO;YACd,IAAI,CAACA,OAAO,CAACC,KAAK,EAAE;YACpB,IAAI,CAACD,OAAO,CAACC,KAAK,CAACrE,IAAI,CAACoC,KAAK,CAAC,EAAE;YAEhCuB,UAAU,GAAGS,OAAO,CAACT,UAAU;YAC/B,IAAIW,QAAO,GAAG,MAAI,CAAC7D,QAAQ,CAAC8D,KAAK,CAACvE,IAAI,CAAC,CAACwE,IAAI,CAAC,UAAAC,KAAK,EAAI;cACpD,OAAOA,KAAK,CAACrC,KAAK,CAACZ,QAAQ,CAACmC,UAAU,CAAC;YACzC,CAAC,CAAC;YAEF,IAAIW,QAAO,EAAE;cACXpD,IAAI,CAACgD,WAAW,CAAC/D,CAAC,CAAC;cACnB;YACF;UACF;QAAC;UAAA;QAAA;UAAA;QAAA;MACH,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,uBAAcH,IAAI,EAAE;MAClB,OAAOA,IAAI,CAACI,IAAI,KAAK,yBAAyB,IAAIJ,IAAI,CAACoC,KAAK,KAAK,MAAM;IACzE;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,uBAAcJ,IAAI,EAAErB,MAAM,EAAE;MAC1B,IAAI,IAAI,CAAC+B,UAAU,CAACV,IAAI,EAAErB,MAAM,CAAC,KAAK,KAAK,IAAIqB,IAAI,CAACC,IAAI,KAAK,MAAM,EAAE;QACnE,IAAID,IAAI,CAAC5B,IAAI,KAAK,SAAS,IAAI4B,IAAI,CAACI,KAAK,CAACZ,QAAQ,CAAC,MAAM,CAAC,EAAE;UAC1D,OAAO,IAAI;QACb;MACF;MACA,IAAI,IAAI,CAACf,QAAQ,CAACa,OAAO,CAACmC,OAAO,KAAK,KAAK,IAAIzB,IAAI,CAACC,IAAI,KAAK,MAAM,EAAE;QACnE,IAAID,IAAI,CAAC5B,IAAI,KAAK,SAAS,IAAI4B,IAAI,CAACI,KAAK,CAACZ,QAAQ,CAAC,MAAM,CAAC,EAAE;UAC1D,OAAO,IAAI;QACb;MACF;MACA,IAAIQ,IAAI,CAACC,IAAI,KAAK,MAAM,IAAID,IAAI,CAAC5B,IAAI,KAAK,SAAS,EAAE;QACnD,OAAO,IAAI;MACb;MAEA,OAAO,IAAI,CAACgB,QAAQ,CAACY,IAAI,EAAErB,MAAM,CAAC;IACpC;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,sBAAaqB,IAAI,EAAErB,MAAM,EAAE;MACzB,IAAI,IAAI,CAAC+B,UAAU,CAACV,IAAI,EAAErB,MAAM,CAAC,KAAK,KAAK,IAAIqB,IAAI,CAACC,IAAI,KAAK,MAAM,EAAE;QACnE,IAAID,IAAI,CAAC5B,IAAI,CAACoB,QAAQ,CAAC,MAAM,CAAC,IAAIQ,IAAI,CAAC5B,IAAI,KAAK,eAAe,EAAE;UAC/D,OAAO,IAAI;QACb;MACF;MACA,IAAI,IAAI,CAACK,QAAQ,CAACa,OAAO,CAACmC,OAAO,KAAK,KAAK,IAAIzB,IAAI,CAACC,IAAI,KAAK,MAAM,EAAE;QACnE,IAAIwC,KAAK,GAAG,CAAC,OAAO,EAAE,iBAAiB,EAAE,aAAa,EAAE,eAAe,CAAC;QACxE,IAAIzC,IAAI,CAAC5B,IAAI,CAACoB,QAAQ,CAAC,MAAM,CAAC,IAAIiD,KAAK,CAACjD,QAAQ,CAACQ,IAAI,CAAC5B,IAAI,CAAC,EAAE;UAC3D,OAAO,IAAI;QACb;MACF;MAEA,OAAO,IAAI,CAACgB,QAAQ,CAACY,IAAI,EAAErB,MAAM,CAAC;IACpC;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,kBAASqB,IAAI,EAAErB,MAAM,EAAE;MACrB,IAAI,CAACqB,IAAI,EAAE,OAAO,KAAK;MAEvB,IAAIA,IAAI,CAACgD,qBAAqB,KAAKvD,SAAS,EAAE;QAC5C,OAAOO,IAAI,CAACgD,qBAAqB;MACnC;MAEA,IAAIhD,IAAI,CAAC/B,MAAM,EAAE;QACf,IAAIgF,CAAC,GAAGjD,IAAI,CAACkD,IAAI,EAAE;QACnB,IAAID,CAAC,IAAIA,CAAC,CAAChD,IAAI,KAAK,SAAS,IAAIrC,WAAW,CAACuC,IAAI,CAAC8C,CAAC,CAACE,IAAI,CAAC,EAAE;UACzDnD,IAAI,CAACgD,qBAAqB,GAAG,IAAI;UACjChD,IAAI,CAACoD,yBAAyB,GAAG,IAAI;UACrC,OAAO,IAAI;QACb;MACF;MAEA,IAAIhD,KAAK,GAAG,IAAI;MAChB,IAAIJ,IAAI,CAACD,KAAK,EAAE;QACd,IAAIkB,MAAM;QACVjB,IAAI,CAACqD,IAAI,CAAC,UAAAlF,CAAC,EAAI;UACb,IAAIA,CAAC,CAAC8B,IAAI,KAAK,SAAS,EAAE;UAC1B,IAAI,kCAAkC,CAACE,IAAI,CAAChC,CAAC,CAACgF,IAAI,CAAC,EAAE;YACnD,IAAI,OAAOlC,MAAM,KAAK,WAAW,EAAE;cACjCtC,MAAM,CAACmC,IAAI,CACT,sCAAsC,GACpC,4CAA4C,GAC5C,4CAA4C,EAC9C;gBAAEd,IAAI,EAAE7B;cAAE,CAAC,CACZ;YACH,CAAC,MAAM;cACL8C,MAAM,GAAG,KAAK,CAACd,IAAI,CAAChC,CAAC,CAACgF,IAAI,CAAC;YAC7B;UACF;QACF,CAAC,CAAC;QAEF,IAAIlC,MAAM,KAAKxB,SAAS,EAAE;UACxBW,KAAK,GAAG,CAACa,MAAM;QACjB;MACF;MACA,IAAI,CAACjB,IAAI,CAACD,KAAK,IAAIK,KAAK,KAAK,IAAI,EAAE;QACjC,IAAIJ,IAAI,CAAC/B,MAAM,EAAE;UACf,IAAIqF,gBAAgB,GAAG,IAAI,CAAClE,QAAQ,CAACY,IAAI,CAAC/B,MAAM,EAAEU,MAAM,CAAC;UACzD,IAAIqB,IAAI,CAAC/B,MAAM,CAACmF,yBAAyB,KAAK,IAAI,EAAE;YAClDhD,KAAK,GAAG,KAAK;UACf,CAAC,MAAM;YACLA,KAAK,GAAGkD,gBAAgB;UAC1B;QACF,CAAC,MAAM;UACLlD,KAAK,GAAG,KAAK;QACf;MACF;MACAJ,IAAI,CAACgD,qBAAqB,GAAG5C,KAAK;MAClC,OAAOA,KAAK;IACd;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,sBAAapC,IAAI,EAAE;MACjB,IAAIuF,IAAI,GAAG,KAAK;MAChB,IAAI,CAAC9E,QAAQ,CAAC8D,KAAK,CAACvE,IAAI,CAAC,CAACwF,EAAE,CAAC,YAAM;QACjCD,IAAI,GAAG,IAAI;QACX,OAAO,IAAI;MACb,CAAC,CAAC;MACF,IAAIA,IAAI,EAAE;QACR;MACF;MAEA,IAAIE,KAAK,GAAGzF,IAAI,CAAC8E,GAAG,CAAC,QAAQ,CAAC,CAACY,KAAK,CAAC,IAAI,CAAC;MAC1C,IAAIC,OAAO,GAAGF,KAAK,CAACA,KAAK,CAACG,MAAM,GAAG,CAAC,CAAC,CAACA,MAAM;MAC5C,IAAIC,IAAI,GAAG,KAAK;MAEhB,IAAI,CAACpF,QAAQ,CAAC8D,KAAK,CAACvE,IAAI,CAAC,CAACwE,IAAI,CAAC,UAAAC,KAAK,EAAI;QACtCgB,KAAK,GAAGhB,KAAK,CAACK,GAAG,CAAC,QAAQ,CAAC,CAACY,KAAK,CAAC,IAAI,CAAC;QACvC,IAAII,IAAI,GAAGL,KAAK,CAACG,MAAM,GAAG,CAAC;QAE3B,IAAIH,KAAK,CAACK,IAAI,CAAC,CAACF,MAAM,GAAGD,OAAO,EAAE;UAChC,IAAIE,IAAI,KAAK,KAAK,EAAE;YAClBA,IAAI,GAAGJ,KAAK,CAACK,IAAI,CAAC,CAACF,MAAM,GAAGD,OAAO;UACrC;UAEAF,KAAK,CAACK,IAAI,CAAC,GAAGL,KAAK,CAACK,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAACF,IAAI,CAAC;UACzCpB,KAAK,CAACuB,IAAI,CAACC,MAAM,GAAGR,KAAK,CAACS,IAAI,CAAC,IAAI,CAAC;QACtC;MACF,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,qBAAYlG,IAAI,EAAE;MAAA,4CACFA,IAAI,CAACC,MAAM,CAAC8B,KAAK;QAAA;MAAA;QAA/B,uDAAiC;UAAA,IAAxB5B,CAAC;UACR,IAAIA,CAAC,CAACC,IAAI,KAAK,SAAS,EAAE;YACxB;UACF;UAEA,IAAID,CAAC,CAACiC,KAAK,CAACZ,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC5B,OAAO,MAAM;UACf;UAEA,IAAIrB,CAAC,CAACiC,KAAK,CAACZ,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC5B,OAAO,MAAM;UACf;QACF;MAAC;QAAA;MAAA;QAAA;MAAA;MAED,OAAO,KAAK;IACd;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,oBAAWQ,IAAI,EAAErB,MAAM,EAAE;MACvB,IAAI,CAACqB,IAAI,EAAE,OAAO,KAAK;MAEvB,IAAIA,IAAI,CAACmE,uBAAuB,KAAK1E,SAAS,EAAE;QAC9C,OAAOO,IAAI,CAACmE,uBAAuB;MACrC;MAEA,IAAI/D,KAAK,GAAG,IAAI;MAChB,IAAIJ,IAAI,CAACD,KAAK,EAAE;QACd,IAAIkB,MAAM;QACVjB,IAAI,CAACqD,IAAI,CAAC,UAAAlF,CAAC,EAAI;UACb,IAAIA,CAAC,CAAC8B,IAAI,KAAK,SAAS,EAAE;UAC1B,IAAIpC,UAAU,CAACsC,IAAI,CAAChC,CAAC,CAACgF,IAAI,CAAC,EAAE;YAC3B,IAAIiB,YAAY,GAAG,gBAAgB,CAACjE,IAAI,CAAChC,CAAC,CAACgF,IAAI,CAAC;YAChD,IAAIkB,WAAW,GAAG,eAAe,CAAClE,IAAI,CAAChC,CAAC,CAACgF,IAAI,CAAC;YAC9C,IAAI,OAAOlC,MAAM,KAAK,WAAW,EAAE;cACjCtC,MAAM,CAACmC,IAAI,CACT,+CAA+C,GAC7C,8DAA8D,GAC9D,+BAA+B,EACjC;gBAAEd,IAAI,EAAE7B;cAAE,CAAC,CACZ;YACH,CAAC,MAAM,IAAIiG,YAAY,EAAE;cACvBnD,MAAM,GAAG,WAAW;YACtB,CAAC,MAAM,IAAIoD,WAAW,EAAE;cACtBpD,MAAM,GAAG,IAAI;YACf,CAAC,MAAM;cACLA,MAAM,GAAG,KAAK,CAACd,IAAI,CAAChC,CAAC,CAACgF,IAAI,CAAC;YAC7B;UACF;QACF,CAAC,CAAC;QAEF,IAAIlC,MAAM,KAAKxB,SAAS,EAAE;UACxBW,KAAK,GAAGa,MAAM;QAChB;MACF;MAEA,IAAIjB,IAAI,CAACC,IAAI,KAAK,QAAQ,IAAID,IAAI,CAACb,IAAI,KAAK,UAAU,EAAE;QACtD,IAAII,MAAM,GAAGS,IAAI,CAACT,MAAM;QACxB,IAAIA,MAAM,CAACC,QAAQ,CAAC,MAAM,CAAC,IAAID,MAAM,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;UACtDY,KAAK,GAAG,KAAK;QACf;MACF;MAEA,IAAI,CAACJ,IAAI,CAACD,KAAK,IAAIK,KAAK,KAAK,IAAI,EAAE;QACjC,IAAIJ,IAAI,CAAC/B,MAAM,EAAE;UACf,IAAIqG,YAAY,GAAG,IAAI,CAAC5D,UAAU,CAACV,IAAI,CAAC/B,MAAM,EAAEU,MAAM,CAAC;UACvD,IAAIqB,IAAI,CAAC/B,MAAM,CAACmF,yBAAyB,KAAK,IAAI,EAAE;YAClDhD,KAAK,GAAG,KAAK;UACf,CAAC,MAAM;YACLA,KAAK,GAAGkE,YAAY;UACtB;QACF,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC7F,QAAQ,CAACa,OAAO,CAACiF,IAAI,KAAK,WAAW,EAAE;UAC5DnE,KAAK,GAAG,IAAI,CAAC3B,QAAQ,CAACa,OAAO,CAACiF,IAAI;QACpC,CAAC,MAAM,IAAI,OAAOlF,OAAO,CAACmF,GAAG,CAACC,iBAAiB,KAAK,WAAW,EAAE;UAC/D,IAAIpF,OAAO,CAACmF,GAAG,CAACC,iBAAiB,KAAK,WAAW,EAAE;YACjDrE,KAAK,GAAG,WAAW;UACrB,CAAC,MAAM;YACLA,KAAK,GAAG,IAAI;UACd;QACF,CAAC,MAAM;UACLA,KAAK,GAAG,KAAK;QACf;MACF;MAEAJ,IAAI,CAACmE,uBAAuB,GAAG/D,KAAK;MACpC,OAAOA,KAAK;IACd;EAAC;EAAA;AAAA;AAGHsE,MAAM,CAACC,OAAO,GAAGnG,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}