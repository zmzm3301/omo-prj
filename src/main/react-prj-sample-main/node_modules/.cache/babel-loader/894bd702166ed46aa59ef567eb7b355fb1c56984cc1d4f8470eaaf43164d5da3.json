{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Declaration = require('../declaration');\nvar _require = require('../utils'),\n  isPureNumber = _require.isPureNumber;\nvar GridEnd = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(GridEnd, _Declaration);\n  var _super = _createSuper(GridEnd);\n  function GridEnd() {\n    _classCallCheck(this, GridEnd);\n    return _super.apply(this, arguments);\n  }\n  _createClass(GridEnd, [{\n    key: \"insert\",\n    value:\n    /**\n     * Change repeating syntax for IE\n     */\n    function insert(decl, prefix, prefixes, result) {\n      if (prefix !== '-ms-') return _get(_getPrototypeOf(GridEnd.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n      var clonedDecl = this.clone(decl);\n      var startProp = decl.prop.replace(/end$/, 'start');\n      var spanProp = prefix + decl.prop.replace(/end$/, 'span');\n      if (decl.parent.some(function (i) {\n        return i.prop === spanProp;\n      })) {\n        return undefined;\n      }\n      clonedDecl.prop = spanProp;\n      if (decl.value.includes('span')) {\n        clonedDecl.value = decl.value.replace(/span\\s/i, '');\n      } else {\n        var startDecl;\n        decl.parent.walkDecls(startProp, function (d) {\n          startDecl = d;\n        });\n        if (startDecl) {\n          if (isPureNumber(startDecl.value)) {\n            var value = Number(decl.value) - Number(startDecl.value) + '';\n            clonedDecl.value = value;\n          } else {\n            return undefined;\n          }\n        } else {\n          decl.warn(result, \"Can not prefix \".concat(decl.prop, \" (\").concat(startProp, \" is not found)\"));\n        }\n      }\n      decl.cloneBefore(clonedDecl);\n      return undefined;\n    }\n  }]);\n  return GridEnd;\n}(Declaration);\nGridEnd.names = ['grid-row-end', 'grid-column-end'];\nmodule.exports = GridEnd;","map":{"version":3,"names":["Declaration","require","isPureNumber","GridEnd","decl","prefix","prefixes","result","clonedDecl","clone","startProp","prop","replace","spanProp","parent","some","i","undefined","value","includes","startDecl","walkDecls","d","Number","warn","cloneBefore","names","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/hacks/grid-end.js"],"sourcesContent":["let Declaration = require('../declaration')\nlet { isPureNumber } = require('../utils')\n\nclass GridEnd extends Declaration {\n  /**\n   * Change repeating syntax for IE\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let clonedDecl = this.clone(decl)\n\n    let startProp = decl.prop.replace(/end$/, 'start')\n    let spanProp = prefix + decl.prop.replace(/end$/, 'span')\n\n    if (decl.parent.some(i => i.prop === spanProp)) {\n      return undefined\n    }\n\n    clonedDecl.prop = spanProp\n\n    if (decl.value.includes('span')) {\n      clonedDecl.value = decl.value.replace(/span\\s/i, '')\n    } else {\n      let startDecl\n      decl.parent.walkDecls(startProp, d => {\n        startDecl = d\n      })\n      if (startDecl) {\n        if (isPureNumber(startDecl.value)) {\n          let value = Number(decl.value) - Number(startDecl.value) + ''\n          clonedDecl.value = value\n        } else {\n          return undefined\n        }\n      } else {\n        decl.warn(\n          result,\n          `Can not prefix ${decl.prop} (${startProp} is not found)`\n        )\n      }\n    }\n\n    decl.cloneBefore(clonedDecl)\n\n    return undefined\n  }\n}\n\nGridEnd.names = ['grid-row-end', 'grid-column-end']\n\nmodule.exports = GridEnd\n"],"mappings":";;;;;;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC3C,eAAuBA,OAAO,CAAC,UAAU,CAAC;EAApCC,YAAY,YAAZA,YAAY;AAAwB,IAEpCC,OAAO;EAAA;;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACX;AACF;AACA;IACE,gBAAOC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAE;MACrC,IAAIF,MAAM,KAAK,MAAM,EAAE,2EAAoBD,IAAI,EAAEC,MAAM,EAAEC,QAAQ;MAEjE,IAAIE,UAAU,GAAG,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC;MAEjC,IAAIM,SAAS,GAAGN,IAAI,CAACO,IAAI,CAACC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;MAClD,IAAIC,QAAQ,GAAGR,MAAM,GAAGD,IAAI,CAACO,IAAI,CAACC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;MAEzD,IAAIR,IAAI,CAACU,MAAM,CAACC,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACL,IAAI,KAAKE,QAAQ;MAAA,EAAC,EAAE;QAC9C,OAAOI,SAAS;MAClB;MAEAT,UAAU,CAACG,IAAI,GAAGE,QAAQ;MAE1B,IAAIT,IAAI,CAACc,KAAK,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC/BX,UAAU,CAACU,KAAK,GAAGd,IAAI,CAACc,KAAK,CAACN,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;MACtD,CAAC,MAAM;QACL,IAAIQ,SAAS;QACbhB,IAAI,CAACU,MAAM,CAACO,SAAS,CAACX,SAAS,EAAE,UAAAY,CAAC,EAAI;UACpCF,SAAS,GAAGE,CAAC;QACf,CAAC,CAAC;QACF,IAAIF,SAAS,EAAE;UACb,IAAIlB,YAAY,CAACkB,SAAS,CAACF,KAAK,CAAC,EAAE;YACjC,IAAIA,KAAK,GAAGK,MAAM,CAACnB,IAAI,CAACc,KAAK,CAAC,GAAGK,MAAM,CAACH,SAAS,CAACF,KAAK,CAAC,GAAG,EAAE;YAC7DV,UAAU,CAACU,KAAK,GAAGA,KAAK;UAC1B,CAAC,MAAM;YACL,OAAOD,SAAS;UAClB;QACF,CAAC,MAAM;UACLb,IAAI,CAACoB,IAAI,CACPjB,MAAM,2BACYH,IAAI,CAACO,IAAI,eAAKD,SAAS,oBAC1C;QACH;MACF;MAEAN,IAAI,CAACqB,WAAW,CAACjB,UAAU,CAAC;MAE5B,OAAOS,SAAS;IAClB;EAAC;EAAA;AAAA,EA3CmBjB,WAAW;AA8CjCG,OAAO,CAACuB,KAAK,GAAG,CAAC,cAAc,EAAE,iBAAiB,CAAC;AAEnDC,MAAM,CAACC,OAAO,GAAGzB,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}