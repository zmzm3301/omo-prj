{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Declaration = require('../declaration');\nvar _require = require('./grid-utils'),\n  prefixTrackProp = _require.prefixTrackProp,\n  prefixTrackValue = _require.prefixTrackValue,\n  autoplaceGridItems = _require.autoplaceGridItems,\n  getGridGap = _require.getGridGap,\n  inheritGridGap = _require.inheritGridGap;\nvar Processor = require('../processor');\nvar GridRowsColumns = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(GridRowsColumns, _Declaration);\n  var _super = _createSuper(GridRowsColumns);\n  function GridRowsColumns() {\n    _classCallCheck(this, GridRowsColumns);\n    return _super.apply(this, arguments);\n  }\n  _createClass(GridRowsColumns, [{\n    key: \"prefixed\",\n    value:\n    /**\n     * Change property name for IE\n     */\n    function prefixed(prop, prefix) {\n      if (prefix === '-ms-') {\n        return prefixTrackProp({\n          prop: prop,\n          prefix: prefix\n        });\n      }\n      return _get(_getPrototypeOf(GridRowsColumns.prototype), \"prefixed\", this).call(this, prop, prefix);\n    }\n\n    /**\n     * Change IE property back\n     */\n  }, {\n    key: \"normalize\",\n    value: function normalize(prop) {\n      return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1');\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(decl, prefix, prefixes, result) {\n      if (prefix !== '-ms-') return _get(_getPrototypeOf(GridRowsColumns.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n      var parent = decl.parent,\n        prop = decl.prop,\n        value = decl.value;\n      var isRowProp = prop.includes('rows');\n      var isColumnProp = prop.includes('columns');\n      var hasGridTemplate = parent.some(function (i) {\n        return i.prop === 'grid-template' || i.prop === 'grid-template-areas';\n      });\n\n      /**\n       * Not to prefix rows declaration if grid-template(-areas) is present\n       */\n      if (hasGridTemplate && isRowProp) {\n        return false;\n      }\n      var processor = new Processor({\n        options: {}\n      });\n      var status = processor.gridStatus(parent, result);\n      var gap = getGridGap(decl);\n      gap = inheritGridGap(decl, gap) || gap;\n      var gapValue = isRowProp ? gap.row : gap.column;\n      if ((status === 'no-autoplace' || status === true) && !hasGridTemplate) {\n        gapValue = null;\n      }\n      var prefixValue = prefixTrackValue({\n        value: value,\n        gap: gapValue\n      });\n\n      /**\n       * Insert prefixes\n       */\n      decl.cloneBefore({\n        prop: prefixTrackProp({\n          prop: prop,\n          prefix: prefix\n        }),\n        value: prefixValue\n      });\n      var autoflow = parent.nodes.find(function (i) {\n        return i.prop === 'grid-auto-flow';\n      });\n      var autoflowValue = 'row';\n      if (autoflow && !processor.disabled(autoflow, result)) {\n        autoflowValue = autoflow.value.trim();\n      }\n      if (status === 'autoplace') {\n        /**\n         * Show warning if grid-template-rows decl is not found\n         */\n        var rowDecl = parent.nodes.find(function (i) {\n          return i.prop === 'grid-template-rows';\n        });\n        if (!rowDecl && hasGridTemplate) {\n          return undefined;\n        } else if (!rowDecl && !hasGridTemplate) {\n          decl.warn(result, 'Autoplacement does not work without grid-template-rows property');\n          return undefined;\n        }\n\n        /**\n         * Show warning if grid-template-columns decl is not found\n         */\n        var columnDecl = parent.nodes.find(function (i) {\n          return i.prop === 'grid-template-columns';\n        });\n        if (!columnDecl && !hasGridTemplate) {\n          decl.warn(result, 'Autoplacement does not work without grid-template-columns property');\n        }\n\n        /**\n         * Autoplace grid items\n         */\n        if (isColumnProp && !hasGridTemplate) {\n          autoplaceGridItems(decl, result, gap, autoflowValue);\n        }\n      }\n      return undefined;\n    }\n  }]);\n  return GridRowsColumns;\n}(Declaration);\nGridRowsColumns.names = ['grid-template-rows', 'grid-template-columns', 'grid-rows', 'grid-columns'];\nmodule.exports = GridRowsColumns;","map":{"version":3,"names":["Declaration","require","prefixTrackProp","prefixTrackValue","autoplaceGridItems","getGridGap","inheritGridGap","Processor","GridRowsColumns","prop","prefix","replace","decl","prefixes","result","parent","value","isRowProp","includes","isColumnProp","hasGridTemplate","some","i","processor","options","status","gridStatus","gap","gapValue","row","column","prefixValue","cloneBefore","autoflow","nodes","find","autoflowValue","disabled","trim","rowDecl","undefined","warn","columnDecl","names","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/hacks/grid-rows-columns.js"],"sourcesContent":["let Declaration = require('../declaration')\nlet {\n  prefixTrackProp,\n  prefixTrackValue,\n  autoplaceGridItems,\n  getGridGap,\n  inheritGridGap\n} = require('./grid-utils')\nlet Processor = require('../processor')\n\nclass GridRowsColumns extends Declaration {\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-ms-') {\n      return prefixTrackProp({ prop, prefix })\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Change IE property back\n   */\n  normalize(prop) {\n    return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1')\n  }\n\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let { parent, prop, value } = decl\n    let isRowProp = prop.includes('rows')\n    let isColumnProp = prop.includes('columns')\n\n    let hasGridTemplate = parent.some(\n      i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'\n    )\n\n    /**\n     * Not to prefix rows declaration if grid-template(-areas) is present\n     */\n    if (hasGridTemplate && isRowProp) {\n      return false\n    }\n\n    let processor = new Processor({ options: {} })\n    let status = processor.gridStatus(parent, result)\n    let gap = getGridGap(decl)\n    gap = inheritGridGap(decl, gap) || gap\n\n    let gapValue = isRowProp ? gap.row : gap.column\n\n    if ((status === 'no-autoplace' || status === true) && !hasGridTemplate) {\n      gapValue = null\n    }\n\n    let prefixValue = prefixTrackValue({\n      value,\n      gap: gapValue\n    })\n\n    /**\n     * Insert prefixes\n     */\n    decl.cloneBefore({\n      prop: prefixTrackProp({ prop, prefix }),\n      value: prefixValue\n    })\n\n    let autoflow = parent.nodes.find(i => i.prop === 'grid-auto-flow')\n    let autoflowValue = 'row'\n\n    if (autoflow && !processor.disabled(autoflow, result)) {\n      autoflowValue = autoflow.value.trim()\n    }\n    if (status === 'autoplace') {\n      /**\n       * Show warning if grid-template-rows decl is not found\n       */\n      let rowDecl = parent.nodes.find(i => i.prop === 'grid-template-rows')\n\n      if (!rowDecl && hasGridTemplate) {\n        return undefined\n      } else if (!rowDecl && !hasGridTemplate) {\n        decl.warn(\n          result,\n          'Autoplacement does not work without grid-template-rows property'\n        )\n        return undefined\n      }\n\n      /**\n       * Show warning if grid-template-columns decl is not found\n       */\n      let columnDecl = parent.nodes.find(i => {\n        return i.prop === 'grid-template-columns'\n      })\n      if (!columnDecl && !hasGridTemplate) {\n        decl.warn(\n          result,\n          'Autoplacement does not work without grid-template-columns property'\n        )\n      }\n\n      /**\n       * Autoplace grid items\n       */\n      if (isColumnProp && !hasGridTemplate) {\n        autoplaceGridItems(decl, result, gap, autoflowValue)\n      }\n    }\n\n    return undefined\n  }\n}\n\nGridRowsColumns.names = [\n  'grid-template-rows',\n  'grid-template-columns',\n  'grid-rows',\n  'grid-columns'\n]\n\nmodule.exports = GridRowsColumns\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}