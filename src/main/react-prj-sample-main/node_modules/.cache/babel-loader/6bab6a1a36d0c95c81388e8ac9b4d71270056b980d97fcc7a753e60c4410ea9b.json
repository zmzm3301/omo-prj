{"ast":null,"code":"var _createForOfIteratorHelper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar FractionJs = require('fraction.js');\nvar Prefixer = require('./prefixer');\nvar utils = require('./utils');\nvar REGEXP = /(min|max)-resolution\\s*:\\s*\\d*\\.?\\d+(dppx|dpcm|dpi|x)/gi;\nvar SPLIT = /(min|max)-resolution(\\s*:\\s*)(\\d*\\.?\\d+)(dppx|dpcm|dpi|x)/i;\nvar Resolution = /*#__PURE__*/function (_Prefixer) {\n  \"use strict\";\n\n  _inherits(Resolution, _Prefixer);\n  var _super = _createSuper(Resolution);\n  function Resolution() {\n    _classCallCheck(this, Resolution);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Resolution, [{\n    key: \"prefixName\",\n    value:\n    /**\n     * Return prefixed query name\n     */\n    function prefixName(prefix, name) {\n      if (prefix === '-moz-') {\n        return name + '--moz-device-pixel-ratio';\n      } else {\n        return prefix + name + '-device-pixel-ratio';\n      }\n    }\n\n    /**\n     * Return prefixed query\n     */\n  }, {\n    key: \"prefixQuery\",\n    value: function prefixQuery(prefix, name, colon, value, units) {\n      value = new FractionJs(value);\n\n      // 1dpcm = 2.54dpi\n      // 1dppx = 96dpi\n      if (units === 'dpi') {\n        value = value.div(96);\n      } else if (units === 'dpcm') {\n        value = value.mul(2.54).div(96);\n      }\n      value = value.simplify();\n      if (prefix === '-o-') {\n        value = value.n + '/' + value.d;\n      }\n      return this.prefixName(prefix, name) + colon + value;\n    }\n\n    /**\n     * Remove prefixed queries\n     */\n  }, {\n    key: \"clean\",\n    value: function clean(rule) {\n      var _this = this;\n      if (!this.bad) {\n        this.bad = [];\n        var _iterator = _createForOfIteratorHelper(this.prefixes),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var prefix = _step.value;\n            this.bad.push(this.prefixName(prefix, 'min'));\n            this.bad.push(this.prefixName(prefix, 'max'));\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      rule.params = utils.editList(rule.params, function (queries) {\n        return queries.filter(function (query) {\n          return _this.bad.every(function (i) {\n            return !query.includes(i);\n          });\n        });\n      });\n    }\n\n    /**\n     * Add prefixed queries\n     */\n  }, {\n    key: \"process\",\n    value: function process(rule) {\n      var _this2 = this;\n      var parent = this.parentPrefix(rule);\n      var prefixes = parent ? [parent] : this.prefixes;\n      rule.params = utils.editList(rule.params, function (origin, prefixed) {\n        var _iterator2 = _createForOfIteratorHelper(origin),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var query = _step2.value;\n            if (!query.includes('min-resolution') && !query.includes('max-resolution')) {\n              prefixed.push(query);\n              continue;\n            }\n            var _iterator3 = _createForOfIteratorHelper(prefixes),\n              _step3;\n            try {\n              var _loop = function _loop() {\n                var prefix = _step3.value;\n                var processed = query.replace(REGEXP, function (str) {\n                  var parts = str.match(SPLIT);\n                  return _this2.prefixQuery(prefix, parts[1], parts[2], parts[3], parts[4]);\n                });\n                prefixed.push(processed);\n              };\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                _loop();\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n            prefixed.push(query);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        return utils.uniq(prefixed);\n      });\n    }\n  }]);\n  return Resolution;\n}(Prefixer);\nmodule.exports = Resolution;","map":{"version":3,"names":["FractionJs","require","Prefixer","utils","REGEXP","SPLIT","Resolution","prefix","name","colon","value","units","div","mul","simplify","n","d","prefixName","rule","bad","prefixes","push","params","editList","queries","filter","query","every","i","includes","parent","parentPrefix","origin","prefixed","processed","replace","str","parts","match","prefixQuery","uniq","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/resolution.js"],"sourcesContent":["let FractionJs = require('fraction.js')\n\nlet Prefixer = require('./prefixer')\nlet utils = require('./utils')\n\nconst REGEXP = /(min|max)-resolution\\s*:\\s*\\d*\\.?\\d+(dppx|dpcm|dpi|x)/gi\nconst SPLIT = /(min|max)-resolution(\\s*:\\s*)(\\d*\\.?\\d+)(dppx|dpcm|dpi|x)/i\n\nclass Resolution extends Prefixer {\n  /**\n   * Return prefixed query name\n   */\n  prefixName(prefix, name) {\n    if (prefix === '-moz-') {\n      return name + '--moz-device-pixel-ratio'\n    } else {\n      return prefix + name + '-device-pixel-ratio'\n    }\n  }\n\n  /**\n   * Return prefixed query\n   */\n  prefixQuery(prefix, name, colon, value, units) {\n    value = new FractionJs(value)\n\n    // 1dpcm = 2.54dpi\n    // 1dppx = 96dpi\n    if (units === 'dpi') {\n      value = value.div(96)\n    } else if (units === 'dpcm') {\n      value = value.mul(2.54).div(96)\n    }\n    value = value.simplify()\n\n    if (prefix === '-o-') {\n      value = value.n + '/' + value.d\n    }\n    return this.prefixName(prefix, name) + colon + value\n  }\n\n  /**\n   * Remove prefixed queries\n   */\n  clean(rule) {\n    if (!this.bad) {\n      this.bad = []\n      for (let prefix of this.prefixes) {\n        this.bad.push(this.prefixName(prefix, 'min'))\n        this.bad.push(this.prefixName(prefix, 'max'))\n      }\n    }\n\n    rule.params = utils.editList(rule.params, queries => {\n      return queries.filter(query => this.bad.every(i => !query.includes(i)))\n    })\n  }\n\n  /**\n   * Add prefixed queries\n   */\n  process(rule) {\n    let parent = this.parentPrefix(rule)\n    let prefixes = parent ? [parent] : this.prefixes\n\n    rule.params = utils.editList(rule.params, (origin, prefixed) => {\n      for (let query of origin) {\n        if (\n          !query.includes('min-resolution') &&\n          !query.includes('max-resolution')\n        ) {\n          prefixed.push(query)\n          continue\n        }\n\n        for (let prefix of prefixes) {\n          let processed = query.replace(REGEXP, str => {\n            let parts = str.match(SPLIT)\n            return this.prefixQuery(\n              prefix,\n              parts[1],\n              parts[2],\n              parts[3],\n              parts[4]\n            )\n          })\n          prefixed.push(processed)\n        }\n        prefixed.push(query)\n      }\n\n      return utils.uniq(prefixed)\n    })\n  }\n}\n\nmodule.exports = Resolution\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}