{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Declaration = require('../declaration');\nvar BlockLogical = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(BlockLogical, _Declaration);\n  var _super = _createSuper(BlockLogical);\n  function BlockLogical() {\n    _classCallCheck(this, BlockLogical);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BlockLogical, [{\n    key: \"prefixed\",\n    value:\n    /**\n     * Use old syntax for -moz- and -webkit-\n     */\n    function prefixed(prop, prefix) {\n      if (prop.includes('-start')) {\n        return prefix + prop.replace('-block-start', '-before');\n      }\n      return prefix + prop.replace('-block-end', '-after');\n    }\n\n    /**\n     * Return property name by spec\n     */\n  }, {\n    key: \"normalize\",\n    value: function normalize(prop) {\n      if (prop.includes('-before')) {\n        return prop.replace('-before', '-block-start');\n      }\n      return prop.replace('-after', '-block-end');\n    }\n  }]);\n  return BlockLogical;\n}(Declaration);\nBlockLogical.names = ['border-block-start', 'border-block-end', 'margin-block-start', 'margin-block-end', 'padding-block-start', 'padding-block-end', 'border-before', 'border-after', 'margin-before', 'margin-after', 'padding-before', 'padding-after'];\nmodule.exports = BlockLogical;","map":{"version":3,"names":["Declaration","require","BlockLogical","prop","prefix","includes","replace","names","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/hacks/block-logical.js"],"sourcesContent":["let Declaration = require('../declaration')\n\nclass BlockLogical extends Declaration {\n  /**\n   * Use old syntax for -moz- and -webkit-\n   */\n  prefixed(prop, prefix) {\n    if (prop.includes('-start')) {\n      return prefix + prop.replace('-block-start', '-before')\n    }\n    return prefix + prop.replace('-block-end', '-after')\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize(prop) {\n    if (prop.includes('-before')) {\n      return prop.replace('-before', '-block-start')\n    }\n    return prop.replace('-after', '-block-end')\n  }\n}\n\nBlockLogical.names = [\n  'border-block-start',\n  'border-block-end',\n  'margin-block-start',\n  'margin-block-end',\n  'padding-block-start',\n  'padding-block-end',\n  'border-before',\n  'border-after',\n  'margin-before',\n  'margin-after',\n  'padding-before',\n  'padding-after'\n]\n\nmodule.exports = BlockLogical\n"],"mappings":";;;;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAAA,IAErCC,YAAY;EAAA;;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAChB;AACF;AACA;IACE,kBAASC,IAAI,EAAEC,MAAM,EAAE;MACrB,IAAID,IAAI,CAACE,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC3B,OAAOD,MAAM,GAAGD,IAAI,CAACG,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC;MACzD;MACA,OAAOF,MAAM,GAAGD,IAAI,CAACG,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC;IACtD;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,mBAAUH,IAAI,EAAE;MACd,IAAIA,IAAI,CAACE,QAAQ,CAAC,SAAS,CAAC,EAAE;QAC5B,OAAOF,IAAI,CAACG,OAAO,CAAC,SAAS,EAAE,cAAc,CAAC;MAChD;MACA,OAAOH,IAAI,CAACG,OAAO,CAAC,QAAQ,EAAE,YAAY,CAAC;IAC7C;EAAC;EAAA;AAAA,EAnBwBN,WAAW;AAsBtCE,YAAY,CAACK,KAAK,GAAG,CACnB,oBAAoB,EACpB,kBAAkB,EAClB,oBAAoB,EACpB,kBAAkB,EAClB,qBAAqB,EACrB,mBAAmB,EACnB,eAAe,EACf,cAAc,EACd,eAAe,EACf,cAAc,EACd,gBAAgB,EAChB,eAAe,CAChB;AAEDC,MAAM,CAACC,OAAO,GAAGP,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}