{"ast":null,"code":"var _slicedToArray = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar browserslist = require('browserslist');\nvar agents = require('caniuse-lite').agents;\nvar utils = require('./utils');\nvar Browsers = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Browsers(data, requirements, options, browserslistOpts) {\n    _classCallCheck(this, Browsers);\n    this.data = data;\n    this.options = options || {};\n    this.browserslistOpts = browserslistOpts || {};\n    this.selected = this.parse(requirements);\n  }\n\n  /**\n   * Return browsers selected by requirements\n   */\n  _createClass(Browsers, [{\n    key: \"parse\",\n    value: function parse(requirements) {\n      var opts = {};\n      for (var i in this.browserslistOpts) {\n        opts[i] = this.browserslistOpts[i];\n      }\n      opts.path = this.options.from;\n      return browserslist(requirements, opts);\n    }\n\n    /**\n     * Return prefix for selected browser\n     */\n  }, {\n    key: \"prefix\",\n    value: function prefix(browser) {\n      var _browser$split = browser.split(' '),\n        _browser$split2 = _slicedToArray(_browser$split, 2),\n        name = _browser$split2[0],\n        version = _browser$split2[1];\n      var data = this.data[name];\n      var prefix = data.prefix_exceptions && data.prefix_exceptions[version];\n      if (!prefix) {\n        prefix = data.prefix;\n      }\n      return \"-\".concat(prefix, \"-\");\n    }\n\n    /**\n     * Is browser is selected by requirements\n     */\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(browser) {\n      return this.selected.includes(browser);\n    }\n  }], [{\n    key: \"prefixes\",\n    value:\n    /**\n     * Return all prefixes for default browser data\n     */\n    function prefixes() {\n      if (this.prefixesCache) {\n        return this.prefixesCache;\n      }\n      this.prefixesCache = [];\n      for (var name in agents) {\n        this.prefixesCache.push(\"-\".concat(agents[name].prefix, \"-\"));\n      }\n      this.prefixesCache = utils.uniq(this.prefixesCache).sort(function (a, b) {\n        return b.length - a.length;\n      });\n      return this.prefixesCache;\n    }\n\n    /**\n     * Check is value contain any possible prefix\n     */\n  }, {\n    key: \"withPrefix\",\n    value: function withPrefix(value) {\n      if (!this.prefixesRegexp) {\n        this.prefixesRegexp = new RegExp(this.prefixes().join('|'));\n      }\n      return this.prefixesRegexp.test(value);\n    }\n  }]);\n  return Browsers;\n}();\nmodule.exports = Browsers;","map":{"version":3,"names":["browserslist","require","agents","utils","Browsers","data","requirements","options","browserslistOpts","selected","parse","opts","i","path","from","browser","split","name","version","prefix","prefix_exceptions","includes","prefixesCache","push","uniq","sort","a","b","length","value","prefixesRegexp","RegExp","prefixes","join","test","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/browsers.js"],"sourcesContent":["let browserslist = require('browserslist')\nlet agents = require('caniuse-lite').agents\n\nlet utils = require('./utils')\n\nclass Browsers {\n  /**\n   * Return all prefixes for default browser data\n   */\n  static prefixes() {\n    if (this.prefixesCache) {\n      return this.prefixesCache\n    }\n\n    this.prefixesCache = []\n    for (let name in agents) {\n      this.prefixesCache.push(`-${agents[name].prefix}-`)\n    }\n\n    this.prefixesCache = utils\n      .uniq(this.prefixesCache)\n      .sort((a, b) => b.length - a.length)\n\n    return this.prefixesCache\n  }\n\n  /**\n   * Check is value contain any possible prefix\n   */\n  static withPrefix(value) {\n    if (!this.prefixesRegexp) {\n      this.prefixesRegexp = new RegExp(this.prefixes().join('|'))\n    }\n\n    return this.prefixesRegexp.test(value)\n  }\n\n  constructor(data, requirements, options, browserslistOpts) {\n    this.data = data\n    this.options = options || {}\n    this.browserslistOpts = browserslistOpts || {}\n    this.selected = this.parse(requirements)\n  }\n\n  /**\n   * Return browsers selected by requirements\n   */\n  parse(requirements) {\n    let opts = {}\n    for (let i in this.browserslistOpts) {\n      opts[i] = this.browserslistOpts[i]\n    }\n    opts.path = this.options.from\n    return browserslist(requirements, opts)\n  }\n\n  /**\n   * Return prefix for selected browser\n   */\n  prefix(browser) {\n    let [name, version] = browser.split(' ')\n    let data = this.data[name]\n\n    let prefix = data.prefix_exceptions && data.prefix_exceptions[version]\n    if (!prefix) {\n      prefix = data.prefix\n    }\n    return `-${prefix}-`\n  }\n\n  /**\n   * Is browser is selected by requirements\n   */\n  isSelected(browser) {\n    return this.selected.includes(browser)\n  }\n}\n\nmodule.exports = Browsers\n"],"mappings":";;;AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC1C,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAc,CAAC,CAACC,MAAM;AAE3C,IAAIC,KAAK,GAAGF,OAAO,CAAC,SAAS,CAAC;AAAA,IAExBG,QAAQ;EAAA;;EAgCZ,kBAAYC,IAAI,EAAEC,YAAY,EAAEC,OAAO,EAAEC,gBAAgB,EAAE;IAAA;IACzD,IAAI,CAACH,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACE,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IAC5B,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB,IAAI,CAAC,CAAC;IAC9C,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC;EAC1C;;EAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,eAAMA,YAAY,EAAE;MAClB,IAAIK,IAAI,GAAG,CAAC,CAAC;MACb,KAAK,IAAIC,CAAC,IAAI,IAAI,CAACJ,gBAAgB,EAAE;QACnCG,IAAI,CAACC,CAAC,CAAC,GAAG,IAAI,CAACJ,gBAAgB,CAACI,CAAC,CAAC;MACpC;MACAD,IAAI,CAACE,IAAI,GAAG,IAAI,CAACN,OAAO,CAACO,IAAI;MAC7B,OAAOd,YAAY,CAACM,YAAY,EAAEK,IAAI,CAAC;IACzC;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,gBAAOI,OAAO,EAAE;MACd,qBAAsBA,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC;QAAA;QAAnCC,IAAI;QAAEC,OAAO;MAClB,IAAIb,IAAI,GAAG,IAAI,CAACA,IAAI,CAACY,IAAI,CAAC;MAE1B,IAAIE,MAAM,GAAGd,IAAI,CAACe,iBAAiB,IAAIf,IAAI,CAACe,iBAAiB,CAACF,OAAO,CAAC;MACtE,IAAI,CAACC,MAAM,EAAE;QACXA,MAAM,GAAGd,IAAI,CAACc,MAAM;MACtB;MACA,kBAAWA,MAAM;IACnB;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,oBAAWJ,OAAO,EAAE;MAClB,OAAO,IAAI,CAACN,QAAQ,CAACY,QAAQ,CAACN,OAAO,CAAC;IACxC;EAAC;IAAA;IAAA;IArED;AACF;AACA;IACE,oBAAkB;MAChB,IAAI,IAAI,CAACO,aAAa,EAAE;QACtB,OAAO,IAAI,CAACA,aAAa;MAC3B;MAEA,IAAI,CAACA,aAAa,GAAG,EAAE;MACvB,KAAK,IAAIL,IAAI,IAAIf,MAAM,EAAE;QACvB,IAAI,CAACoB,aAAa,CAACC,IAAI,YAAKrB,MAAM,CAACe,IAAI,CAAC,CAACE,MAAM,OAAI;MACrD;MAEA,IAAI,CAACG,aAAa,GAAGnB,KAAK,CACvBqB,IAAI,CAAC,IAAI,CAACF,aAAa,CAAC,CACxBG,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;QAAA,OAAKA,CAAC,CAACC,MAAM,GAAGF,CAAC,CAACE,MAAM;MAAA,EAAC;MAEtC,OAAO,IAAI,CAACN,aAAa;IAC3B;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,oBAAkBO,KAAK,EAAE;MACvB,IAAI,CAAC,IAAI,CAACC,cAAc,EAAE;QACxB,IAAI,CAACA,cAAc,GAAG,IAAIC,MAAM,CAAC,IAAI,CAACC,QAAQ,EAAE,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC7D;MAEA,OAAO,IAAI,CAACH,cAAc,CAACI,IAAI,CAACL,KAAK,CAAC;IACxC;EAAC;EAAA;AAAA;AA2CHM,MAAM,CAACC,OAAO,GAAGhC,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}