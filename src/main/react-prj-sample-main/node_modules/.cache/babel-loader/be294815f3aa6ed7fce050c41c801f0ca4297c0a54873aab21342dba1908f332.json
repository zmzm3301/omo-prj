{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Declaration = require('../declaration');\nvar MaskComposite = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(MaskComposite, _Declaration);\n  var _super = _createSuper(MaskComposite);\n  function MaskComposite() {\n    _classCallCheck(this, MaskComposite);\n    return _super.apply(this, arguments);\n  }\n  _createClass(MaskComposite, [{\n    key: \"insert\",\n    value:\n    /**\n     * Prefix mask-composite for webkit\n     */\n    function insert(decl, prefix, prefixes) {\n      var isCompositeProp = decl.prop === 'mask-composite';\n      var compositeValues;\n      if (isCompositeProp) {\n        compositeValues = decl.value.split(',');\n      } else {\n        compositeValues = decl.value.match(MaskComposite.regexp) || [];\n      }\n      compositeValues = compositeValues.map(function (el) {\n        return el.trim();\n      }).filter(function (el) {\n        return el;\n      });\n      var hasCompositeValues = compositeValues.length;\n      var compositeDecl;\n      if (hasCompositeValues) {\n        compositeDecl = this.clone(decl);\n        compositeDecl.value = compositeValues.map(function (value) {\n          return MaskComposite.oldValues[value] || value;\n        }).join(', ');\n        if (compositeValues.includes('intersect')) {\n          compositeDecl.value += ', xor';\n        }\n        compositeDecl.prop = prefix + 'mask-composite';\n      }\n      if (isCompositeProp) {\n        if (!hasCompositeValues) {\n          return undefined;\n        }\n        if (this.needCascade(decl)) {\n          compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);\n        }\n        return decl.parent.insertBefore(decl, compositeDecl);\n      }\n      var cloned = this.clone(decl);\n      cloned.prop = prefix + cloned.prop;\n      if (hasCompositeValues) {\n        cloned.value = cloned.value.replace(MaskComposite.regexp, '');\n      }\n      if (this.needCascade(decl)) {\n        cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n      }\n      decl.parent.insertBefore(decl, cloned);\n      if (!hasCompositeValues) {\n        return decl;\n      }\n      if (this.needCascade(decl)) {\n        compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);\n      }\n      return decl.parent.insertBefore(decl, compositeDecl);\n    }\n  }]);\n  return MaskComposite;\n}(Declaration);\nMaskComposite.names = ['mask', 'mask-composite'];\nMaskComposite.oldValues = {\n  add: 'source-over',\n  subtract: 'source-out',\n  intersect: 'source-in',\n  exclude: 'xor'\n};\nMaskComposite.regexp = new RegExp(\"\\\\s+(\".concat(Object.keys(MaskComposite.oldValues).join('|'), \")\\\\b(?!\\\\))\\\\s*(?=[,])\"), 'ig');\nmodule.exports = MaskComposite;","map":{"version":3,"names":["Declaration","require","MaskComposite","decl","prefix","prefixes","isCompositeProp","prop","compositeValues","value","split","match","regexp","map","el","trim","filter","hasCompositeValues","length","compositeDecl","clone","oldValues","join","includes","undefined","needCascade","raws","before","calcBefore","parent","insertBefore","cloned","replace","names","add","subtract","intersect","exclude","RegExp","Object","keys","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/hacks/mask-composite.js"],"sourcesContent":["let Declaration = require('../declaration')\n\nclass MaskComposite extends Declaration {\n  /**\n   * Prefix mask-composite for webkit\n   */\n  insert(decl, prefix, prefixes) {\n    let isCompositeProp = decl.prop === 'mask-composite'\n\n    let compositeValues\n\n    if (isCompositeProp) {\n      compositeValues = decl.value.split(',')\n    } else {\n      compositeValues = decl.value.match(MaskComposite.regexp) || []\n    }\n\n    compositeValues = compositeValues.map(el => el.trim()).filter(el => el)\n    let hasCompositeValues = compositeValues.length\n\n    let compositeDecl\n\n    if (hasCompositeValues) {\n      compositeDecl = this.clone(decl)\n      compositeDecl.value = compositeValues\n        .map(value => MaskComposite.oldValues[value] || value)\n        .join(', ')\n\n      if (compositeValues.includes('intersect')) {\n        compositeDecl.value += ', xor'\n      }\n\n      compositeDecl.prop = prefix + 'mask-composite'\n    }\n\n    if (isCompositeProp) {\n      if (!hasCompositeValues) {\n        return undefined\n      }\n\n      if (this.needCascade(decl)) {\n        compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix)\n      }\n\n      return decl.parent.insertBefore(decl, compositeDecl)\n    }\n\n    let cloned = this.clone(decl)\n    cloned.prop = prefix + cloned.prop\n\n    if (hasCompositeValues) {\n      cloned.value = cloned.value.replace(MaskComposite.regexp, '')\n    }\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n\n    decl.parent.insertBefore(decl, cloned)\n\n    if (!hasCompositeValues) {\n      return decl\n    }\n\n    if (this.needCascade(decl)) {\n      compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, compositeDecl)\n  }\n}\n\nMaskComposite.names = ['mask', 'mask-composite']\n\nMaskComposite.oldValues = {\n  add: 'source-over',\n  subtract: 'source-out',\n  intersect: 'source-in',\n  exclude: 'xor'\n}\n\nMaskComposite.regexp = new RegExp(\n  `\\\\s+(${Object.keys(MaskComposite.oldValues).join(\n    '|'\n  )})\\\\b(?!\\\\))\\\\s*(?=[,])`,\n  'ig'\n)\n\nmodule.exports = MaskComposite\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}