{"ast":null,"code":"var _slicedToArray = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar flexSpec = require('./flex-spec');\nvar OldValue = require('../old-value');\nvar Value = require('../value');\nvar DisplayFlex = /*#__PURE__*/function (_Value) {\n  \"use strict\";\n\n  _inherits(DisplayFlex, _Value);\n  var _super = _createSuper(DisplayFlex);\n  function DisplayFlex(name, prefixes) {\n    var _this;\n    _classCallCheck(this, DisplayFlex);\n    _this = _super.call(this, name, prefixes);\n    if (name === 'display-flex') {\n      _this.name = 'flex';\n    }\n    return _this;\n  }\n\n  /**\n   * Faster check for flex value\n   */\n  _createClass(DisplayFlex, [{\n    key: \"check\",\n    value: function check(decl) {\n      return decl.prop === 'display' && decl.value === this.name;\n    }\n\n    /**\n     * Return value by spec\n     */\n  }, {\n    key: \"prefixed\",\n    value: function prefixed(prefix) {\n      var spec, value;\n      var _flexSpec = flexSpec(prefix);\n      var _flexSpec2 = _slicedToArray(_flexSpec, 2);\n      spec = _flexSpec2[0];\n      prefix = _flexSpec2[1];\n      if (spec === 2009) {\n        if (this.name === 'flex') {\n          value = 'box';\n        } else {\n          value = 'inline-box';\n        }\n      } else if (spec === 2012) {\n        if (this.name === 'flex') {\n          value = 'flexbox';\n        } else {\n          value = 'inline-flexbox';\n        }\n      } else if (spec === 'final') {\n        value = this.name;\n      }\n      return prefix + value;\n    }\n\n    /**\n     * Add prefix to value depend on flebox spec version\n     */\n  }, {\n    key: \"replace\",\n    value: function replace(string, prefix) {\n      return this.prefixed(prefix);\n    }\n\n    /**\n     * Change value for old specs\n     */\n  }, {\n    key: \"old\",\n    value: function old(prefix) {\n      var prefixed = this.prefixed(prefix);\n      if (!prefixed) return undefined;\n      return new OldValue(this.name, prefixed);\n    }\n  }]);\n  return DisplayFlex;\n}(Value);\nDisplayFlex.names = ['display-flex', 'inline-flex'];\nmodule.exports = DisplayFlex;","map":{"version":3,"names":["flexSpec","require","OldValue","Value","DisplayFlex","name","prefixes","decl","prop","value","prefix","spec","string","prefixed","undefined","names","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/hacks/display-flex.js"],"sourcesContent":["let flexSpec = require('./flex-spec')\nlet OldValue = require('../old-value')\nlet Value = require('../value')\n\nclass DisplayFlex extends Value {\n  constructor(name, prefixes) {\n    super(name, prefixes)\n    if (name === 'display-flex') {\n      this.name = 'flex'\n    }\n  }\n\n  /**\n   * Faster check for flex value\n   */\n  check(decl) {\n    return decl.prop === 'display' && decl.value === this.name\n  }\n\n  /**\n   * Return value by spec\n   */\n  prefixed(prefix) {\n    let spec, value\n    ;[spec, prefix] = flexSpec(prefix)\n\n    if (spec === 2009) {\n      if (this.name === 'flex') {\n        value = 'box'\n      } else {\n        value = 'inline-box'\n      }\n    } else if (spec === 2012) {\n      if (this.name === 'flex') {\n        value = 'flexbox'\n      } else {\n        value = 'inline-flexbox'\n      }\n    } else if (spec === 'final') {\n      value = this.name\n    }\n\n    return prefix + value\n  }\n\n  /**\n   * Add prefix to value depend on flebox spec version\n   */\n  replace(string, prefix) {\n    return this.prefixed(prefix)\n  }\n\n  /**\n   * Change value for old specs\n   */\n  old(prefix) {\n    let prefixed = this.prefixed(prefix)\n    if (!prefixed) return undefined\n    return new OldValue(this.name, prefixed)\n  }\n}\n\nDisplayFlex.names = ['display-flex', 'inline-flex']\n\nmodule.exports = DisplayFlex\n"],"mappings":";;;;;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;AACrC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,cAAc,CAAC;AACtC,IAAIE,KAAK,GAAGF,OAAO,CAAC,UAAU,CAAC;AAAA,IAEzBG,WAAW;EAAA;;EAAA;EAAA;EACf,qBAAYC,IAAI,EAAEC,QAAQ,EAAE;IAAA;IAAA;IAC1B,0BAAMD,IAAI,EAAEC,QAAQ;IACpB,IAAID,IAAI,KAAK,cAAc,EAAE;MAC3B,MAAKA,IAAI,GAAG,MAAM;IACpB;IAAC;EACH;;EAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,eAAME,IAAI,EAAE;MACV,OAAOA,IAAI,CAACC,IAAI,KAAK,SAAS,IAAID,IAAI,CAACE,KAAK,KAAK,IAAI,CAACJ,IAAI;IAC5D;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,kBAASK,MAAM,EAAE;MACf,IAAIC,IAAI,EAAEF,KAAK;MACd,gBAAiBT,QAAQ,CAACU,MAAM,CAAC;MAAA;MAAhCC,IAAI;MAAED,MAAM;MAEd,IAAIC,IAAI,KAAK,IAAI,EAAE;QACjB,IAAI,IAAI,CAACN,IAAI,KAAK,MAAM,EAAE;UACxBI,KAAK,GAAG,KAAK;QACf,CAAC,MAAM;UACLA,KAAK,GAAG,YAAY;QACtB;MACF,CAAC,MAAM,IAAIE,IAAI,KAAK,IAAI,EAAE;QACxB,IAAI,IAAI,CAACN,IAAI,KAAK,MAAM,EAAE;UACxBI,KAAK,GAAG,SAAS;QACnB,CAAC,MAAM;UACLA,KAAK,GAAG,gBAAgB;QAC1B;MACF,CAAC,MAAM,IAAIE,IAAI,KAAK,OAAO,EAAE;QAC3BF,KAAK,GAAG,IAAI,CAACJ,IAAI;MACnB;MAEA,OAAOK,MAAM,GAAGD,KAAK;IACvB;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,iBAAQG,MAAM,EAAEF,MAAM,EAAE;MACtB,OAAO,IAAI,CAACG,QAAQ,CAACH,MAAM,CAAC;IAC9B;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,aAAIA,MAAM,EAAE;MACV,IAAIG,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACH,MAAM,CAAC;MACpC,IAAI,CAACG,QAAQ,EAAE,OAAOC,SAAS;MAC/B,OAAO,IAAIZ,QAAQ,CAAC,IAAI,CAACG,IAAI,EAAEQ,QAAQ,CAAC;IAC1C;EAAC;EAAA;AAAA,EAvDuBV,KAAK;AA0D/BC,WAAW,CAACW,KAAK,GAAG,CAAC,cAAc,EAAE,aAAa,CAAC;AAEnDC,MAAM,CAACC,OAAO,GAAGb,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}