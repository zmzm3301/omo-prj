{"ast":null,"code":"var _slicedToArray = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Declaration = require('../declaration');\nvar utils = require('./grid-utils');\nvar GridRowColumn = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(GridRowColumn, _Declaration);\n  var _super = _createSuper(GridRowColumn);\n  function GridRowColumn() {\n    _classCallCheck(this, GridRowColumn);\n    return _super.apply(this, arguments);\n  }\n  _createClass(GridRowColumn, [{\n    key: \"insert\",\n    value:\n    /**\n     * Translate grid-row / grid-column to separate -ms- prefixed properties\n     */\n    function insert(decl, prefix, prefixes) {\n      if (prefix !== '-ms-') return _get(_getPrototypeOf(GridRowColumn.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n      var values = utils.parse(decl);\n      var _utils$translate = utils.translate(values, 0, 1),\n        _utils$translate2 = _slicedToArray(_utils$translate, 2),\n        start = _utils$translate2[0],\n        span = _utils$translate2[1];\n      var hasStartValueSpan = values[0] && values[0].includes('span');\n      if (hasStartValueSpan) {\n        span = values[0].join('').replace(/\\D/g, '');\n      }\n      ;\n      [[decl.prop, start], [\"\".concat(decl.prop, \"-span\"), span]].forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          prop = _ref2[0],\n          value = _ref2[1];\n        utils.insertDecl(decl, prop, value);\n      });\n      return undefined;\n    }\n  }]);\n  return GridRowColumn;\n}(Declaration);\nGridRowColumn.names = ['grid-row', 'grid-column'];\nmodule.exports = GridRowColumn;","map":{"version":3,"names":["Declaration","require","utils","GridRowColumn","decl","prefix","prefixes","values","parse","translate","start","span","hasStartValueSpan","includes","join","replace","prop","forEach","value","insertDecl","undefined","names","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/hacks/grid-row-column.js"],"sourcesContent":["let Declaration = require('../declaration')\nlet utils = require('./grid-utils')\n\nclass GridRowColumn extends Declaration {\n  /**\n   * Translate grid-row / grid-column to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let values = utils.parse(decl)\n    let [start, span] = utils.translate(values, 0, 1)\n\n    let hasStartValueSpan = values[0] && values[0].includes('span')\n\n    if (hasStartValueSpan) {\n      span = values[0].join('').replace(/\\D/g, '')\n    }\n\n    ;[\n      [decl.prop, start],\n      [`${decl.prop}-span`, span]\n    ].forEach(([prop, value]) => {\n      utils.insertDecl(decl, prop, value)\n    })\n\n    return undefined\n  }\n}\n\nGridRowColumn.names = ['grid-row', 'grid-column']\n\nmodule.exports = GridRowColumn\n"],"mappings":";;;;;;;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC3C,IAAIC,KAAK,GAAGD,OAAO,CAAC,cAAc,CAAC;AAAA,IAE7BE,aAAa;EAAA;;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACjB;AACF;AACA;IACE,gBAAOC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAE;MAC7B,IAAID,MAAM,KAAK,MAAM,EAAE,iFAAoBD,IAAI,EAAEC,MAAM,EAAEC,QAAQ;MAEjE,IAAIC,MAAM,GAAGL,KAAK,CAACM,KAAK,CAACJ,IAAI,CAAC;MAC9B,uBAAoBF,KAAK,CAACO,SAAS,CAACF,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAAA;QAA5CG,KAAK;QAAEC,IAAI;MAEhB,IAAIC,iBAAiB,GAAGL,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,CAACM,QAAQ,CAAC,MAAM,CAAC;MAE/D,IAAID,iBAAiB,EAAE;QACrBD,IAAI,GAAGJ,MAAM,CAAC,CAAC,CAAC,CAACO,IAAI,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;MAC9C;MAEA;MAAC,CACC,CAACX,IAAI,CAACY,IAAI,EAAEN,KAAK,CAAC,EAClB,WAAIN,IAAI,CAACY,IAAI,YAASL,IAAI,CAAC,CAC5B,CAACM,OAAO,CAAC,gBAAmB;QAAA;UAAjBD,IAAI;UAAEE,KAAK;QACrBhB,KAAK,CAACiB,UAAU,CAACf,IAAI,EAAEY,IAAI,EAAEE,KAAK,CAAC;MACrC,CAAC,CAAC;MAEF,OAAOE,SAAS;IAClB;EAAC;EAAA;AAAA,EAxByBpB,WAAW;AA2BvCG,aAAa,CAACkB,KAAK,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC;AAEjDC,MAAM,CAACC,OAAO,GAAGpB,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}