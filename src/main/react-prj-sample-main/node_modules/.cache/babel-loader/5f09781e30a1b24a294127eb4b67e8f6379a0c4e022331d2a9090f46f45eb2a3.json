{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Value = require('../value');\nvar ImageSet = /*#__PURE__*/function (_Value) {\n  \"use strict\";\n\n  _inherits(ImageSet, _Value);\n  var _super = _createSuper(ImageSet);\n  function ImageSet() {\n    _classCallCheck(this, ImageSet);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ImageSet, [{\n    key: \"replace\",\n    value:\n    /**\n     * Use non-standard name for WebKit and Firefox\n     */\n    function replace(string, prefix) {\n      var fixed = _get(_getPrototypeOf(ImageSet.prototype), \"replace\", this).call(this, string, prefix);\n      if (prefix === '-webkit-') {\n        fixed = fixed.replace(/(\"[^\"]+\"|'[^']+')(\\s+\\d+\\w)/gi, 'url($1)$2');\n      }\n      return fixed;\n    }\n  }]);\n  return ImageSet;\n}(Value);\nImageSet.names = ['image-set'];\nmodule.exports = ImageSet;","map":{"version":3,"names":["Value","require","ImageSet","string","prefix","fixed","replace","names","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/hacks/image-set.js"],"sourcesContent":["let Value = require('../value')\n\nclass ImageSet extends Value {\n  /**\n   * Use non-standard name for WebKit and Firefox\n   */\n  replace(string, prefix) {\n    let fixed = super.replace(string, prefix)\n    if (prefix === '-webkit-') {\n      fixed = fixed.replace(/(\"[^\"]+\"|'[^']+')(\\s+\\d+\\w)/gi, 'url($1)$2')\n    }\n    return fixed\n  }\n}\n\nImageSet.names = ['image-set']\n\nmodule.exports = ImageSet\n"],"mappings":";;;;;;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAU,CAAC;AAAA,IAEzBC,QAAQ;EAAA;;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACZ;AACF;AACA;IACE,iBAAQC,MAAM,EAAEC,MAAM,EAAE;MACtB,IAAIC,KAAK,yEAAiBF,MAAM,EAAEC,MAAM,CAAC;MACzC,IAAIA,MAAM,KAAK,UAAU,EAAE;QACzBC,KAAK,GAAGA,KAAK,CAACC,OAAO,CAAC,+BAA+B,EAAE,WAAW,CAAC;MACrE;MACA,OAAOD,KAAK;IACd;EAAC;EAAA;AAAA,EAVoBL,KAAK;AAa5BE,QAAQ,CAACK,KAAK,GAAG,CAAC,WAAW,CAAC;AAE9BC,MAAM,CAACC,OAAO,GAAGP,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}