{"ast":null,"code":"var _createForOfIteratorHelper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Browsers = require('./browsers');\nvar vendor = require('./vendor');\nvar utils = require('./utils');\n\n/**\n * Recursively clone objects\n */\nfunction _clone(obj, parent) {\n  var cloned = new obj.constructor();\n  for (var _i = 0, _Object$keys = Object.keys(obj || {}); _i < _Object$keys.length; _i++) {\n    var i = _Object$keys[_i];\n    var value = obj[i];\n    if (i === 'parent' && typeof value === 'object') {\n      if (parent) {\n        cloned[i] = parent;\n      }\n    } else if (i === 'source' || i === null) {\n      cloned[i] = value;\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(function (x) {\n        return _clone(x, cloned);\n      });\n    } else if (i !== '_autoprefixerPrefix' && i !== '_autoprefixerValues' && i !== 'proxyCache') {\n      if (typeof value === 'object' && value !== null) {\n        value = _clone(value, cloned);\n      }\n      cloned[i] = value;\n    }\n  }\n  return cloned;\n}\nvar Prefixer = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Prefixer(name, prefixes, all) {\n    _classCallCheck(this, Prefixer);\n    this.prefixes = prefixes;\n    this.name = name;\n    this.all = all;\n  }\n\n  /**\n   * Find prefix in node parents\n   */\n  _createClass(Prefixer, [{\n    key: \"parentPrefix\",\n    value: function parentPrefix(node) {\n      var prefix;\n      if (typeof node._autoprefixerPrefix !== 'undefined') {\n        prefix = node._autoprefixerPrefix;\n      } else if (node.type === 'decl' && node.prop[0] === '-') {\n        prefix = vendor.prefix(node.prop);\n      } else if (node.type === 'root') {\n        prefix = false;\n      } else if (node.type === 'rule' && node.selector.includes(':-') && /:(-\\w+-)/.test(node.selector)) {\n        prefix = node.selector.match(/:(-\\w+-)/)[1];\n      } else if (node.type === 'atrule' && node.name[0] === '-') {\n        prefix = vendor.prefix(node.name);\n      } else {\n        prefix = this.parentPrefix(node.parent);\n      }\n      if (!Browsers.prefixes().includes(prefix)) {\n        prefix = false;\n      }\n      node._autoprefixerPrefix = prefix;\n      return node._autoprefixerPrefix;\n    }\n\n    /**\n     * Clone node with prefixes\n     */\n  }, {\n    key: \"process\",\n    value: function process(node, result) {\n      if (!this.check(node)) {\n        return undefined;\n      }\n      var parent = this.parentPrefix(node);\n      var prefixes = this.prefixes.filter(function (prefix) {\n        return !parent || parent === utils.removeNote(prefix);\n      });\n      var added = [];\n      var _iterator = _createForOfIteratorHelper(prefixes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var prefix = _step.value;\n          if (this.add(node, prefix, added.concat([prefix]), result)) {\n            added.push(prefix);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return added;\n    }\n\n    /**\n     * Shortcut for Prefixer.clone\n     */\n  }, {\n    key: \"clone\",\n    value: function clone(node, overrides) {\n      return Prefixer.clone(node, overrides);\n    }\n  }], [{\n    key: \"hack\",\n    value:\n    /**\n     * Add hack to selected names\n     */\n    function hack(klass) {\n      var _this = this;\n      if (!this.hacks) {\n        this.hacks = {};\n      }\n      return klass.names.map(function (name) {\n        _this.hacks[name] = klass;\n        return _this.hacks[name];\n      });\n    }\n\n    /**\n     * Load hacks for some names\n     */\n  }, {\n    key: \"load\",\n    value: function load(name, prefixes, all) {\n      var Klass = this.hacks && this.hacks[name];\n      if (Klass) {\n        return new Klass(name, prefixes, all);\n      } else {\n        return new this(name, prefixes, all);\n      }\n    }\n\n    /**\n     * Clone node and clean autprefixer custom caches\n     */\n  }, {\n    key: \"clone\",\n    value: function clone(node, overrides) {\n      var cloned = _clone(node);\n      for (var name in overrides) {\n        cloned[name] = overrides[name];\n      }\n      return cloned;\n    }\n  }]);\n  return Prefixer;\n}();\nmodule.exports = Prefixer;","map":{"version":3,"names":["Browsers","require","vendor","utils","clone","obj","parent","cloned","constructor","Object","keys","i","value","Array","isArray","map","x","Prefixer","name","prefixes","all","node","prefix","_autoprefixerPrefix","type","prop","selector","includes","test","match","parentPrefix","result","check","undefined","filter","removeNote","added","add","concat","push","overrides","klass","hacks","names","Klass","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/prefixer.js"],"sourcesContent":["let Browsers = require('./browsers')\nlet vendor = require('./vendor')\nlet utils = require('./utils')\n\n/**\n * Recursively clone objects\n */\nfunction clone(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i of Object.keys(obj || {})) {\n    let value = obj[i]\n    if (i === 'parent' && typeof value === 'object') {\n      if (parent) {\n        cloned[i] = parent\n      }\n    } else if (i === 'source' || i === null) {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(x => clone(x, cloned))\n    } else if (\n      i !== '_autoprefixerPrefix' &&\n      i !== '_autoprefixerValues' &&\n      i !== 'proxyCache'\n    ) {\n      if (typeof value === 'object' && value !== null) {\n        value = clone(value, cloned)\n      }\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Prefixer {\n  /**\n   * Add hack to selected names\n   */\n  static hack(klass) {\n    if (!this.hacks) {\n      this.hacks = {}\n    }\n    return klass.names.map(name => {\n      this.hacks[name] = klass\n      return this.hacks[name]\n    })\n  }\n\n  /**\n   * Load hacks for some names\n   */\n  static load(name, prefixes, all) {\n    let Klass = this.hacks && this.hacks[name]\n    if (Klass) {\n      return new Klass(name, prefixes, all)\n    } else {\n      return new this(name, prefixes, all)\n    }\n  }\n\n  /**\n   * Clone node and clean autprefixer custom caches\n   */\n  static clone(node, overrides) {\n    let cloned = clone(node)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  constructor(name, prefixes, all) {\n    this.prefixes = prefixes\n    this.name = name\n    this.all = all\n  }\n\n  /**\n   * Find prefix in node parents\n   */\n  parentPrefix(node) {\n    let prefix\n\n    if (typeof node._autoprefixerPrefix !== 'undefined') {\n      prefix = node._autoprefixerPrefix\n    } else if (node.type === 'decl' && node.prop[0] === '-') {\n      prefix = vendor.prefix(node.prop)\n    } else if (node.type === 'root') {\n      prefix = false\n    } else if (\n      node.type === 'rule' &&\n      node.selector.includes(':-') &&\n      /:(-\\w+-)/.test(node.selector)\n    ) {\n      prefix = node.selector.match(/:(-\\w+-)/)[1]\n    } else if (node.type === 'atrule' && node.name[0] === '-') {\n      prefix = vendor.prefix(node.name)\n    } else {\n      prefix = this.parentPrefix(node.parent)\n    }\n\n    if (!Browsers.prefixes().includes(prefix)) {\n      prefix = false\n    }\n\n    node._autoprefixerPrefix = prefix\n\n    return node._autoprefixerPrefix\n  }\n\n  /**\n   * Clone node with prefixes\n   */\n  process(node, result) {\n    if (!this.check(node)) {\n      return undefined\n    }\n\n    let parent = this.parentPrefix(node)\n\n    let prefixes = this.prefixes.filter(\n      prefix => !parent || parent === utils.removeNote(prefix)\n    )\n\n    let added = []\n    for (let prefix of prefixes) {\n      if (this.add(node, prefix, added.concat([prefix]), result)) {\n        added.push(prefix)\n      }\n    }\n\n    return added\n  }\n\n  /**\n   * Shortcut for Prefixer.clone\n   */\n  clone(node, overrides) {\n    return Prefixer.clone(node, overrides)\n  }\n}\n\nmodule.exports = Prefixer\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}