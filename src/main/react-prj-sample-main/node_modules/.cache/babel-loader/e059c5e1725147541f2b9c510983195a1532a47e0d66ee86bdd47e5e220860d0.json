{"ast":null,"code":"import reducer from'./stores/reducer';import React from'react';import ReactDOM from'react-dom/client';import'./index.css';import App from'./App';import reportWebVitals from'./reportWebVitals';import{CookiesProvider}from'react-cookie';import{Provider}from\"react-redux\";import{createStore}from'redux';import jwt_decode from'jwt-decode';import{login,setCurrentUser,setNickName,setUserRole}from'./stores/actions';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";var store=createStore(reducer);// 애플리케이션이 시작될 때, 로컬 스토리지에서 JWT 토큰을 읽어와 사용자 정보를 복원합니다.\nif(localStorage.accessToken&&localStorage.accessToken!=null){var token=localStorage.accessToken;var decoded=jwt_decode(token);var user=decoded.sub;var userRole=decoded.auth;store.dispatch(setCurrentUser(user));store.dispatch(setUserRole(userRole));var date=new Date();store.dispatch({type:'SET_LOADING',payload:true});axios.post('/api/auth/refresh',null,{headers:{Authorization:\"Bearer \".concat(token),'Content-Type':'application/json'}}).then(function(res){var update=res.headers.authorization;localStorage.setItem(\"accessToken\",update);decoded=jwt_decode(update);if(decoded.exp>date.getTime()/1000){store.dispatch(login(decoded.sub));store.dispatch(setNickName(res.data));}store.dispatch({type:'SET_LOADING',payload:false});}).catch(function(error){console.log(error);store.dispatch({type:'SET_LOADING',payload:false});});if(decoded.exp>date.getTime()/1000){store.dispatch(login(decoded.sub));}}if(localStorage.accessToken==null){localStorage.removeItem(\"accessToken\");}var root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(CookiesProvider,{children:/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(App,{})})}));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["reducer","React","ReactDOM","App","reportWebVitals","CookiesProvider","Provider","createStore","jwt_decode","login","setCurrentUser","setNickName","setUserRole","axios","store","localStorage","accessToken","token","decoded","user","sub","userRole","auth","dispatch","date","Date","type","payload","post","headers","Authorization","then","res","update","authorization","setItem","exp","getTime","data","catch","error","console","log","removeItem","root","createRoot","document","getElementById","render"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/src/index.js"],"sourcesContent":["import reducer from './stores/reducer';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { CookiesProvider } from 'react-cookie';\nimport { Provider } from \"react-redux\";\nimport { createStore } from 'redux';\nimport jwt_decode from 'jwt-decode';\nimport { login, setCurrentUser, setNickName, setUserRole } from './stores/actions';\nimport axios from 'axios';\n\nconst store = createStore(reducer);\n// 애플리케이션이 시작될 때, 로컬 스토리지에서 JWT 토큰을 읽어와 사용자 정보를 복원합니다.\nif (localStorage.accessToken && localStorage.accessToken != null) {\n  const token = localStorage.accessToken;\n  let decoded = jwt_decode(token);\n  const user = decoded.sub\n  const userRole = decoded.auth\n  store.dispatch(setCurrentUser(user));\n  store.dispatch(setUserRole(userRole));\n  const date = new Date()\n  store.dispatch({ type: 'SET_LOADING', payload: true });\n  axios.post('/api/auth/refresh', null, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    const update = res.headers.authorization\n    localStorage.setItem(\"accessToken\", update)\n    decoded = jwt_decode(update);\n    if (decoded.exp > (date.getTime() / 1000)) {\n      store.dispatch(login(decoded.sub))\n      store.dispatch(setNickName(res.data))\n    }\n    store.dispatch({ type: 'SET_LOADING', payload: false });\n  }).catch((error) => {\n    console.log(error)\n    store.dispatch({ type: 'SET_LOADING', payload: false });\n  });\n\n\n  if (decoded.exp > (date.getTime() / 1000)) {\n    store.dispatch(login(decoded.sub))\n  }\n\n}\nif (localStorage.accessToken == null) {\n  localStorage.removeItem(\"accessToken\")\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <CookiesProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </CookiesProvider >\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}