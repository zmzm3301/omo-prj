{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Declaration = require('../declaration');\nvar BreakProps = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(BreakProps, _Declaration);\n  var _super = _createSuper(BreakProps);\n  function BreakProps() {\n    _classCallCheck(this, BreakProps);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BreakProps, [{\n    key: \"prefixed\",\n    value:\n    /**\n     * Change name for -webkit- and -moz- prefix\n     */\n    function prefixed(prop, prefix) {\n      return \"\".concat(prefix, \"column-\").concat(prop);\n    }\n\n    /**\n     * Return property name by final spec\n     */\n  }, {\n    key: \"normalize\",\n    value: function normalize(prop) {\n      if (prop.includes('inside')) {\n        return 'break-inside';\n      }\n      if (prop.includes('before')) {\n        return 'break-before';\n      }\n      return 'break-after';\n    }\n\n    /**\n     * Change prefixed value for avoid-column and avoid-page\n     */\n  }, {\n    key: \"set\",\n    value: function set(decl, prefix) {\n      if (decl.prop === 'break-inside' && decl.value === 'avoid-column' || decl.value === 'avoid-page') {\n        decl.value = 'avoid';\n      }\n      return _get(_getPrototypeOf(BreakProps.prototype), \"set\", this).call(this, decl, prefix);\n    }\n\n    /**\n     * Don’t prefix some values\n     */\n  }, {\n    key: \"insert\",\n    value: function insert(decl, prefix, prefixes) {\n      if (decl.prop !== 'break-inside') {\n        return _get(_getPrototypeOf(BreakProps.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n      }\n      if (/region/i.test(decl.value) || /page/i.test(decl.value)) {\n        return undefined;\n      }\n      return _get(_getPrototypeOf(BreakProps.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n    }\n  }]);\n  return BreakProps;\n}(Declaration);\nBreakProps.names = ['break-inside', 'page-break-inside', 'column-break-inside', 'break-before', 'page-break-before', 'column-break-before', 'break-after', 'page-break-after', 'column-break-after'];\nmodule.exports = BreakProps;","map":{"version":3,"names":["Declaration","require","BreakProps","prop","prefix","includes","decl","value","prefixes","test","undefined","names","module","exports"],"sources":["C:/Users/zmzm3/git/omo/omo-prj/src/main/react-prj-sample-main/node_modules/autoprefixer/lib/hacks/break-props.js"],"sourcesContent":["let Declaration = require('../declaration')\n\nclass BreakProps extends Declaration {\n  /**\n   * Change name for -webkit- and -moz- prefix\n   */\n  prefixed(prop, prefix) {\n    return `${prefix}column-${prop}`\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize(prop) {\n    if (prop.includes('inside')) {\n      return 'break-inside'\n    }\n    if (prop.includes('before')) {\n      return 'break-before'\n    }\n    return 'break-after'\n  }\n\n  /**\n   * Change prefixed value for avoid-column and avoid-page\n   */\n  set(decl, prefix) {\n    if (\n      (decl.prop === 'break-inside' && decl.value === 'avoid-column') ||\n      decl.value === 'avoid-page'\n    ) {\n      decl.value = 'avoid'\n    }\n    return super.set(decl, prefix)\n  }\n\n  /**\n   * Don’t prefix some values\n   */\n  insert(decl, prefix, prefixes) {\n    if (decl.prop !== 'break-inside') {\n      return super.insert(decl, prefix, prefixes)\n    }\n    if (/region/i.test(decl.value) || /page/i.test(decl.value)) {\n      return undefined\n    }\n    return super.insert(decl, prefix, prefixes)\n  }\n}\n\nBreakProps.names = [\n  'break-inside',\n  'page-break-inside',\n  'column-break-inside',\n  'break-before',\n  'page-break-before',\n  'column-break-before',\n  'break-after',\n  'page-break-after',\n  'column-break-after'\n]\n\nmodule.exports = BreakProps\n"],"mappings":";;;;;;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAAA,IAErCC,UAAU;EAAA;;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACd;AACF;AACA;IACE,kBAASC,IAAI,EAAEC,MAAM,EAAE;MACrB,iBAAUA,MAAM,oBAAUD,IAAI;IAChC;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,mBAAUA,IAAI,EAAE;MACd,IAAIA,IAAI,CAACE,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC3B,OAAO,cAAc;MACvB;MACA,IAAIF,IAAI,CAACE,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC3B,OAAO,cAAc;MACvB;MACA,OAAO,aAAa;IACtB;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,aAAIC,IAAI,EAAEF,MAAM,EAAE;MAChB,IACGE,IAAI,CAACH,IAAI,KAAK,cAAc,IAAIG,IAAI,CAACC,KAAK,KAAK,cAAc,IAC9DD,IAAI,CAACC,KAAK,KAAK,YAAY,EAC3B;QACAD,IAAI,CAACC,KAAK,GAAG,OAAO;MACtB;MACA,2EAAiBD,IAAI,EAAEF,MAAM;IAC/B;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,gBAAOE,IAAI,EAAEF,MAAM,EAAEI,QAAQ,EAAE;MAC7B,IAAIF,IAAI,CAACH,IAAI,KAAK,cAAc,EAAE;QAChC,8EAAoBG,IAAI,EAAEF,MAAM,EAAEI,QAAQ;MAC5C;MACA,IAAI,SAAS,CAACC,IAAI,CAACH,IAAI,CAACC,KAAK,CAAC,IAAI,OAAO,CAACE,IAAI,CAACH,IAAI,CAACC,KAAK,CAAC,EAAE;QAC1D,OAAOG,SAAS;MAClB;MACA,8EAAoBJ,IAAI,EAAEF,MAAM,EAAEI,QAAQ;IAC5C;EAAC;EAAA;AAAA,EA7CsBR,WAAW;AAgDpCE,UAAU,CAACS,KAAK,GAAG,CACjB,cAAc,EACd,mBAAmB,EACnB,qBAAqB,EACrB,cAAc,EACd,mBAAmB,EACnB,qBAAqB,EACrB,aAAa,EACb,kBAAkB,EAClB,oBAAoB,CACrB;AAEDC,MAAM,CAACC,OAAO,GAAGX,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}