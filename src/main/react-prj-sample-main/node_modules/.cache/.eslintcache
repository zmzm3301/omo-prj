[{"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\index.js":"1","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\reportWebVitals.js":"2","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\App.js":"3","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\stores\\actions.js":"4","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\stores\\reducer.js":"5","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\PrivateRoute.js":"6","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\FindId\\FindIdInput.js":"7","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\PrivateRouteAdmin.js":"8","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\FindPassword\\FindPwInput.js":"9","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\FindPassword\\FindPwOutput.js":"10","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\LoginPage.jsx":"11","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\Index.jsx":"12","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\ChangeInfoPage.jsx":"13","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\SignUpPage.jsx":"14","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\Board\\BoardList.js":"15","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\Board\\BoardCreate.js":"16","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\Board\\BoardDetail.js":"17","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\Board\\BoardMy.js":"18","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\admin\\AdminUser.js":"19","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\admin\\AdminBoard.js":"20","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\routes\\NoMatch.jsx":"21","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\ImgSlide.js":"22","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\ChangeInfo.js":"23","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\NewNav.js":"24","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\NewNavBoard.js":"25","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\Login.jsx":"26","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\Omocard.jsx":"27","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\KakaoMap.jsx":"28","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\Footer.jsx":"29","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\Hero.jsx":"30","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\Whats.jsx":"31","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\SignUp.jsx":"32","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\KakaoLogin.js":"33"},{"size":2211,"mtime":1679894587736,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1679635915037,"results":"36","hashOfConfig":"35"},{"size":2224,"mtime":1679635914898,"results":"37","hashOfConfig":"35"},{"size":754,"mtime":1679635916859,"results":"38","hashOfConfig":"35"},{"size":1404,"mtime":1679635916881,"results":"39","hashOfConfig":"35"},{"size":617,"mtime":1679635916043,"results":"40","hashOfConfig":"35"},{"size":3972,"mtime":1679635916176,"results":"41","hashOfConfig":"35"},{"size":590,"mtime":1679635916071,"results":"42","hashOfConfig":"35"},{"size":7540,"mtime":1679635916204,"results":"43","hashOfConfig":"35"},{"size":917,"mtime":1679635916228,"results":"44","hashOfConfig":"35"},{"size":102,"mtime":1679635916570,"results":"45","hashOfConfig":"35"},{"size":703,"mtime":1679635916546,"results":"46","hashOfConfig":"35"},{"size":122,"mtime":1679635916521,"results":"47","hashOfConfig":"35"},{"size":106,"mtime":1679635916595,"results":"48","hashOfConfig":"35"},{"size":3901,"mtime":1679635916681,"results":"49","hashOfConfig":"35"},{"size":3141,"mtime":1679635916620,"results":"50","hashOfConfig":"35"},{"size":8558,"mtime":1679635916649,"results":"51","hashOfConfig":"35"},{"size":2670,"mtime":1679635916710,"results":"52","hashOfConfig":"35"},{"size":8425,"mtime":1679635916769,"results":"53","hashOfConfig":"35"},{"size":4692,"mtime":1679647415200,"results":"54","hashOfConfig":"35"},{"size":580,"mtime":1679635916818,"results":"55","hashOfConfig":"35"},{"size":1768,"mtime":1679635915736,"results":"56","hashOfConfig":"35"},{"size":7510,"mtime":1679635915656,"results":"57","hashOfConfig":"35"},{"size":5812,"mtime":1679642792941,"results":"58","hashOfConfig":"35"},{"size":5643,"mtime":1679648059914,"results":"59","hashOfConfig":"35"},{"size":4604,"mtime":1679635915865,"results":"60","hashOfConfig":"35"},{"size":6969,"mtime":1679635916018,"results":"61","hashOfConfig":"35"},{"size":10104,"mtime":1679635915813,"results":"62","hashOfConfig":"35"},{"size":236,"mtime":1679635915683,"results":"63","hashOfConfig":"35"},{"size":1162,"mtime":1679647365693,"results":"64","hashOfConfig":"35"},{"size":8012,"mtime":1679635916146,"results":"65","hashOfConfig":"35"},{"size":10585,"mtime":1679635916092,"results":"66","hashOfConfig":"35"},{"size":2729,"mtime":1679877390135,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7z4bt4",{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\index.js",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\reportWebVitals.js",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\App.js",["183"],[],"import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Index from \"./pages/Index\";\nimport LoginPage from \"./pages/LoginPage\";\nimport SignupPage from \"./pages/SignUpPage\";\nimport BoardList from \"./pages/Board/BoardList\";\nimport BoardCreate from \"./pages/Board/BoardCreate\";\nimport BoardDetail from \"./pages/Board/BoardDetail\";\nimport BoardMy from \"./pages/Board/BoardMy\";\nimport ChangeInfoPage from \"./pages/ChangeInfoPage\";\nimport NoMatch from \"./routes/NoMatch\";\nimport FindIdInput from \"./components/FindId/FindIdInput\";\nimport AdminUser from \"./pages/admin/AdminUser\";\nimport AdminBoard from \"./pages/admin/AdminBoard\";\nimport PrivateRouteAdmin from './components/PrivateRouteAdmin'\nimport FindPwInput from \"./components/FindPassword/FindPwInput\";\nimport FindPwOutput from \"./components/FindPassword/FindPwOutput\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport { useSelector } from \"react-redux\";\n\nexport default function App() {\n  const isLoggedIn = useSelector(state => state.isLoggedIn)\n  return (\n    <main>\n      <BrowserRouter>\n        {/* <NewNav /> */}\n        <Routes>\n          <Route path=\"/\" element={<Index />} />\n          <Route path=\"/klogin\" element={<Index />} />\n          <Route path=\"/klogout\" element={<Index />} />\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"/signup\" element={<SignupPage />} />\n          <Route path=\"/board\" element={<BoardList />} />\n          <Route path=\"/board/create\" element={<PrivateRoute component={BoardCreate} />} />\n          <Route path=\"/board/detail/:no\" element={<BoardDetail />} />\n          <Route path=\"/board/my\" element={<BoardMy />} />\n          <Route path=\"/changeinfo\" element={<ChangeInfoPage />} />\n          <Route path=\"/findid\" element={<FindIdInput />} />\n          <Route path=\"/findpw\" element={<FindPwInput />} />\n          <Route path=\"/findpw/result\" element={<FindPwOutput />} />\n          <Route path=\"/Adminuser\" element={<PrivateRouteAdmin component={AdminUser} />} />\n          <Route path=\"/AdminBoard\" element={<AdminBoard />} />\n          <Route path=\"*\" element={<NoMatch />} />\n        </Routes>\n        {/* <Footer /> */}\n      </BrowserRouter>\n    </main>\n  );\n}","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\stores\\actions.js",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\stores\\reducer.js",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\PrivateRoute.js",["184"],[],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const isLoggedIn = useSelector(state => state.isLoggedIn);\n    const userRole = useSelector(state => state.userRole);\n    console.log(isLoggedIn)\n    console.log(userRole)\n\n    if (isLoggedIn && (userRole === 'ROLE_USER' || userRole === 'ROLE_ADMIN')) {\n        return <Component />\n    } else {\n        return <>{alert(\"로그인이 필요합니다.\")}<Navigate to=\"/login\" replace /></>\n    }\n};\n\nexport default PrivateRoute;\n","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\FindId\\FindIdInput.js",["185"],[],"import axios from \"axios\";\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nexport default function FindIdInput() {\n  const [info, setInfo] = useState({\n    name: \"\",\n    birth: \"\"\n  })\n  const [birthday, setbirthday] = useState({\n    year: \"\",\n    month: \"\",\n    day: \"\"\n  })\n  const [isFindid, setFindid] = useState()\n  const navigate = useNavigate();\n\n  const onSubmitFindId = (e) => {\n    e.preventDefault();\n    info.birth = birthday.year + \"-\" + birthday.month + \"-\" + birthday.day\n    console.log(info.birth)\n    axios.post('/api/auth/search_id', {\n      name: info.name,\n      birth: info.birth\n    }).then(res => {\n      console.log(res)\n      setFindid(res.data)\n      console.log(isFindid)\n      // navigate('/findid/result')\n    }).catch(error => console.log(error))\n  }\n\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-100\">\n      <div className=\"flex flex-col items-center justify-center flex-1 max-w-sm px-2 mx-auto w-96\">\n        <div className=\"w-full px-6 py-8 text-black bg-white rounded shadow-md\">\n\n          {isFindid ?\n            <>\n              <h1 className=\"mb-3 text-2xl\">{isFindid.name} 님의 아이디는</h1>\n              <div className=\"flex \">\n                <p className=\"mt-2 mb-4 text-gray-400\">{isFindid.username}</p>\n                <p className=\"mb-4 ml-2 text-2xl\">입니다</p>\n              </div>\n              <Link to=\"/login\">\n                <input\n                  type=\"submit\"\n                  className=\"w-full h-12 mt-5 text-white bg-blue-500 border-none rounded-lg hover:bg-blue-600 active:bg-blue-600\"\n                  value=\"로그인 하기\"\n                />\n              </Link>\n            </>\n            :\n            <>\n              <h1 className=\"mb-4 text-2xl\">아이디 찾기</h1>\n              <p className=\"mb-4 text-gray-400\">\n                이름과 생년월일을 입력하여\n                <br />\n                이메일을 찾을 수 있습니다.\n              </p>\n\n              <p className=\"mb-2 text-sm\">이름</p>\n              <input\n                type=\"text\"\n                className=\"w-full mb-3 bg-white border-b-2 border-gray-300\"\n                name=\"name\"\n                placeholder=\"이름을 입력해 주세요.\"\n                value={info.name}\n                onChange={(e) => setInfo({ ...info, name: e.target.value })}\n\n              />\n\n              <p className=\"mb-2 text-sm\">생년월일</p>\n              <div className=\"flex\">\n                <input\n                  type=\"text\"\n                  className=\"w-full mb-3 mr-2 bg-white border-b-2 border-gray-300\"\n                  name=\"name\"\n                  placeholder=\"생년(4자)\"\n                  value={birthday.year}\n                  onChange={e => setbirthday({ ...birthday, year: e.target.value })}\n                />\n                <input\n                  type=\"text\"\n                  className=\"w-full mb-3 mr-2 bg-white border-b-2 border-gray-300\"\n                  name=\"name\"\n                  placeholder=\"월(2자)\"\n                  value={birthday.month}\n                  onChange={e => setbirthday({ ...birthday, month: e.target.value })}\n                />\n                <input\n                  type=\"text\"\n                  className=\"w-full mb-3 bg-white border-b-2 border-gray-300\"\n                  name=\"name\"\n                  placeholder=\"일(2자)\"\n                  value={birthday.day}\n                  onChange={e => setbirthday({ ...birthday, day: e.target.value })}\n                />\n              </div>\n              <form onSubmit={onSubmitFindId}>\n                <input\n                  type=\"submit\"\n                  className=\"w-full h-12 text-white bg-gray-400 border-none rounded-lg hover:bg-gray-500 active:bg-gray-500\"\n                  value=\"이메일 찾기\"\n                />\n              </form>\n            </>\n          }\n        </div>\n      </div>\n    </div>\n\n\n  );\n}\n","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\PrivateRouteAdmin.js",["186"],[],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const isLoggedIn = useSelector(state => state.isLoggedIn);\n    const userRole = useSelector(state => state.userRole);\n    console.log(isLoggedIn)\n    console.log(userRole)\n\n    if (isLoggedIn && (userRole === 'ROLE_ADMIN')) {\n        return <Component />\n    } else {\n        return <>{alert(\"관리자 권한이 필요합니다.\")}<Navigate to=\"/\" replace /></>\n    }\n};\n\nexport default PrivateRoute;","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\FindPassword\\FindPwInput.js",["187","188","189","190"],[],"import axios from \"axios\";\nimport e from \"cors\";\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nexport default function FindIdInput() {\n  const [result, setResult] = useState();\n  const [check, setCheck] = useState(false);\n  const [code, setCode] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n\n  const navigate = useNavigate();\n  const [pass, setPassword] = useState({\n    password: \"\",\n    passwordConf: \"\"\n  })\n  const [info, setInfo] = useState({\n    username: \"\",\n    name: \"\",\n    birth: \"\"\n  });\n  const [birthday, setBirthday] = useState({\n    year: \"\",\n    month: \"\",\n    day: \"\"\n  })\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    info.birth = birthday.year + \"-\" + birthday.month + \"-\" + birthday.day\n    console.log(info)\n\n    axios.post('/api/auth/search_pw', {\n      username: info.username,\n      name: info.name,\n      birth: info.birth\n    })\n      .then(res => {\n        const data = res.data\n        console.log(data)\n        if (data.check == true) {\n          setCheck(true)\n          alert(\"이메일로 전송된 보안코드를 입력해주세요.\")\n        } else {\n          alert(\"일치하는 정보가 없습니다.\")\n        }\n      })\n      .catch(error => {\n\n      })\n  }\n\n  const onSubmitCode = (e) => {\n    e.preventDefault();\n\n    axios.post('/auth/login/check', {\n      email: info.username,\n      code: code\n    }).then(res => {\n      console.log(res)\n      setResult(true);\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  const onChangePassword = (e) => {\n    e.preventDefault();\n\n    axios.post('/api/auth/change_pw', {\n      username: info.username,\n      newPassword: pass.password,\n      confirmNewPassword: pass.passwordConf\n    }).then(res => {\n      console.log()\n      if (res.data.check == false) {\n        setErrorMessage(res.data.errorMessage);\n        return;\n      }\n      navigate('/findpw/result')\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-100\">\n      <div className=\"flex flex-col items-center justify-center flex-1 max-w-sm px-2 mx-auto w-96\">\n        <div className=\"w-full px-6 py-8 text-black bg-white rounded shadow-md\">\n          {result ?\n            <>\n              <h1 className=\"mb-4 text-2xl\">비밀번호 변경</h1>\n              <p className=\"mb-4 text-gray-400\">\n                새로운 비밀번호를 입력해주세요.\n              </p>\n              <input\n                type=\"password\"\n                className=\"w-full mb-3 bg-white border-b-2 border-gray-300\"\n                placeholder=\"비밀번호\"\n                value={pass.password}\n                onChange={e => setPassword({ ...pass, password: e.target.value })}\n              />\n              <p className=\"mb-4 text-gray-400\">\n                새로운 비밀번호를 다시 입력해주세요.\n              </p>\n              <input\n                type=\"password\"\n                className=\"w-full mb-3 bg-white border-b-2 border-gray-300\"\n                placeholder=\"비밀번호 확인\"\n                value={pass.passwordConf}\n                onChange={e => setPassword({ ...pass, passwordConf: e.target.value })}\n              />\n              {errorMessage ? <p>{errorMessage}</p> : <></>}\n              <form onSubmit={onChangePassword}>\n                <input\n                  type=\"submit\"\n                  className=\"w-full h-12 text-white bg-gray-400 border-none rounded-lg hover:bg-gray-500 active:bg-gray-500\"\n                  value=\"비밀번호 변경\"\n                />\n              </form>\n            </>\n            :\n            <>\n              <h1 className=\"mb-4 text-2xl\">비밀번호 찾기</h1>\n              {check ?\n                <>\n                  <p className=\"mb-4 text-gray-400\">\n                    전송된 보안코드를 입력해주세요.\n                  </p>\n                  <p className=\"mb-2 text-sm\">보안코드</p>\n                  <input\n                    className=\"w-full mb-3 bg-white border-b-2 border-gray-300\"\n                    placeholder=\"보안코드\"\n                    value={code ? code : \"\"}\n                    onChange={e =>\n                      setCode(e.target.value)}\n                  />\n                  <form onSubmit={onSubmitCode}>\n                    <input\n                      type=\"submit\"\n                      className=\"w-full h-12 text-white bg-gray-400 border-none rounded-lg hover:bg-gray-500 active:bg-gray-500\"\n                      value=\"비밀번호 찾기\"\n                    />\n                  </form>\n                </>\n                :\n                <>\n                  <p className=\"mb-4 text-gray-400\">\n                    이메일, 이름, 생년월일을 입력하여\n                    <br />\n                    비밀번호를 찾을 수 있습니다.\n                  </p>\n\n                  <p className=\"mb-2 text-sm\">아이디</p>\n                  <input\n                    type=\"text\"\n                    className=\"w-full mb-3 bg-white border-b-2 border-gray-300\"\n                    name=\"name\"\n                    placeholder=\"아이디를 입력해 주세요.\"\n                    value={info.username}\n                    onChange={e => setInfo({ ...info, username: e.target.value })}\n                  />\n\n                  <p className=\"mb-2 text-sm\">이름</p>\n                  <input\n                    type=\"text\"\n                    className=\"w-full mb-3 bg-white border-b-2 border-gray-300\"\n                    name=\"name\"\n                    placeholder=\"이름을 입력해 주세요.\"\n                    value={info.name}\n                    onChange={e => setInfo({ ...info, name: e.target.value })}\n                  />\n\n                  <p className=\"mb-2 text-sm\">생년월일</p>\n                  <div className=\"flex\">\n                    <input\n                      type=\"text\"\n                      className=\"w-full mb-3 mr-2 bg-white border-b-2 border-gray-300\"\n                      name=\"name\"\n                      placeholder=\"생년(4자)\"\n                      value={birthday.year}\n                      onChange={e => setBirthday({ ...birthday, year: e.target.value })}\n                    />\n                    <input\n                      type=\"text\"\n                      className=\"w-full mb-3 mr-2 bg-white border-b-2 border-gray-300\"\n                      name=\"name\"\n                      placeholder=\"월(2자)\"\n                      value={birthday.month}\n                      onChange={e => setBirthday({ ...birthday, month: e.target.value })}\n                    />\n                    <input\n                      type=\"text\"\n                      className=\"w-full mb-3 bg-white border-b-2 border-gray-300\"\n                      name=\"name\"\n                      placeholder=\"일(2자)\"\n                      value={birthday.day}\n                      onChange={e => setBirthday({ ...birthday, day: e.target.value })}\n                    />\n                  </div>\n                  <form onSubmit={onSubmitHandler}>\n                    <input\n                      type=\"submit\"\n                      className=\"w-full h-12 text-white bg-gray-400 border-none rounded-lg hover:bg-gray-500 active:bg-gray-500\"\n                      value=\"비밀번호 찾기\"\n                    />\n                  </form>\n                </>\n              }\n            </>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\FindPassword\\FindPwOutput.js",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\LoginPage.jsx",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\Index.jsx",["191"],[],"import Omocard from \"../components/Omocard\";\nimport React, { useState } from \"react\";\nimport Hero from \"../components/Hero\";\n// import Info from \"../components/Info\";\nimport Whats from \"../components/Whats\";\n// import Line from \"../components/Line\";\nimport KakaoMap from \"../components/KakaoMap\";\nimport ImgSlide from \"../components/ImgSlide\";\nimport NewNav from \"../components/NewNav\";\nimport Footer from \"../components/Footer\";\n\nexport default function Index() {\n  return (\n    <div style={{ overflowX: \"hidden\" }}>\n      <NewNav />\n      <Hero />\n      <Omocard />\n      {/* <Info /> */}\n      <Whats />\n      {/* <Line /> */}\n      <ImgSlide />\n      <KakaoMap />\n      <Footer />\n    </div>\n  );\n}\n","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\ChangeInfoPage.jsx",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\SignUpPage.jsx",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\Board\\BoardList.js",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\Board\\BoardCreate.js",["192","193","194"],[],"import NewNavBoard from \"../../components/NewNavBoard\";\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nexport default function BoardCreate() {\n  const isLoggedIn = useSelector(state => state.isLoggedIn)\n  const userRole = useSelector(state => state.userRole)\n  const [post, setPost] = useState({\n    check: false,\n    title: \"\",\n    content: \"\"\n  });\n  const navigate = useNavigate();\n\n  const onChecked = (e) => {\n    if (post.check) {\n      setPost({ ...post, check: false })\n    } else {\n      setPost({ ...post, check: true })\n    }\n    console.log(post)\n  }\n\n  const CreatePost = (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"accessToken\");\n    console.log(token)\n    axios.post('/api/post/add_post', {\n      notice: post.check,\n      title: post.title,\n      content: post.content\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res)\n      alert(res.data)\n      navigate('/board')\n    }).catch(error => {\n      console.log(error)\n      alert(\"게시물 등록에 실패했습니다.\")\n    })\n  }\n\n  return (\n    <div>\n      <NewNavBoard />\n      <div style={{ margin: \"auto\", width: \"60%\" }} className=\"h-screen\" id=\"boardCreateDiv\">\n        <div>.</div>\n        <p className=\"mt-20 text-2xl font-bold\">글쓰기</p>\n        <div className=\"mt-5\">\n          <form onSubmit={CreatePost}>\n            <div>\n              {isLoggedIn && userRole == 'ROLE_ADMIN' ?\n                <p><input type=\"checkbox\" value={post.check} onChange={onChecked} /> 공지사항</p>\n                :\n                <></>\n              }\n              <p className=\"mb-2 font-bold\">제목</p>\n              <input\n                type=\"text\"\n                className=\"p-1 text-sm bg-white\"\n                style={{ width: \"100%\", border: \"1px solid rgb(0,0,0)\" }}\n                placeholder=\"제목을 입력하세요.\"\n                value={post.title}\n                onChange={e =>\n                  setPost({ ...post, title: e.target.value })\n                }\n              />\n            </div>\n            <div>\n              <p className=\"mt-4 mb-2 font-bold\">내용</p>\n              <textarea\n                className=\"p-1 text-sm bg-white border-2 border-black resize-none\"\n                style={{\n                  width: \"100%\",\n                  height: \"50vh\",\n                  border: \"1px solid rgb(0,0,0)\",\n                }}\n                placeholder=\"내용을 입력하세요.\"\n                value={post.content}\n                onChange={e => setPost({\n                  ...post, content: e.target.value\n                })}\n              />\n            </div>\n            <div className=\"flex justify-center mt-3\">\n              <input type=\"submit\"\n                className=\"h-10 text-sm text-white bg-blue-500 rounded-lg w-28 hover:bg-blue-600\" value=\"등록하기\" />\n            </div>\n          </form>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\Board\\BoardDetail.js",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\Board\\BoardMy.js",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\admin\\AdminUser.js",["195"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default function AdminUser() {\n  const token = localStorage.getItem(\"accessToken\")\n  const [memberList, setMemberList] = useState([])\n  const [list, setList] = useState([])\n  const [isChecked, setIsChecked] = useState(false)\n\n  const onChangeCheck = (member, checked) => {\n    setIsChecked(checked)\n    setList((prevList) => {\n      const index = prevList.findIndex((m) => m.no === member.no);\n\n      if (checked && index === -1) {\n        return [...prevList, { no: member.no, roles: member.roles }];\n      } else if (!checked && index !== -1) {\n        const newList = [...prevList];\n        newList.splice(index, 1);\n        return newList;\n      } else {\n        return prevList;\n      }\n    });\n  };\n\n  const onDeleteRepository = (e) => {\n    e.preventDefault();\n    axios.post('/api/admin/delete', list, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res.data)\n      window.location.reload();\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  const onSaveRepository = (e) => {\n    e.preventDefault();\n    axios.post('/api/admin/save', list, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res.data)\n      window.location.reload();\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  useEffect((e) => {\n    console.log(list)\n    console.log(memberList)\n  }, [list, memberList])\n\n  useEffect((e) => {\n    axios.get('/api/admin/member', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res)\n      const member = res.data\n      setMemberList(member)\n    }).catch(error => {\n      console.log(error)\n    })\n  }, [])\n  return (\n    <div className=\"w-screen h-screen overflow-hidden bg-black \">\n      <div>\n        <div className=\"grid content-center text-2xl text-white h-14 bg-cyan-700\">\n          <p className=\"ml-10\" style={{ width: \"80%\", margin: \"auto\" }}>\n            ADMIN PAGE\n          </p>\n        </div>\n        <div className=\"text-sm text-white bg-cyan-800\">\n          <div className=\"flex\" style={{ width: \"80%\", margin: \"auto\" }}>\n            <Link to=\"/adminuser\">\n              <p className=\"pt-2 pb-2 hover:text-cyan-400 text-cyan-400 hover:cursor-pointer\">\n                회원 관리\n              </p>\n            </Link>\n            <Link to=\"/adminboard\">\n              <p className=\"pt-2 pb-2 ml-10 hover:text-cyan-400 hover:cursor-pointer\">\n                게시물 관리\n              </p>\n            </Link>\n            <Link to=\"/\">\n              <p className=\"pt-2 pb-2 ml-10 hover:text-cyan-400 hover:cursor-pointer\">\n                홈으로\n              </p>\n            </Link>\n          </div>\n        </div>\n        <div className=\"\" style={{ width: \"100%\", margin: \"auto\" }}>\n          <div>\n            <div style={{ width: \"80%\", margin: \"auto\" }}>\n              <div className=\"bg-black\">\n                <p className=\"mt-2 mb-2 text-lg text-white\">회원 관리</p>\n\n                <table className=\"board-table\" style={{ width: \"100%\" }}>\n                  <thead className=\"bg-cyan-900\">\n                    <tr className=\"pt-1 pb-1 text-center text-white font-bol\">\n                      <th className=\"col-1 \"></th>\n                      <th scope=\"col\" className=\"col-1\">\n                        회원번호\n                      </th>\n                      <th scope=\"col\" className=\"col-3\">\n                        아이디\n                      </th>\n                      <th scope=\"col\" className=\"col-3\">\n                        닉네임\n                      </th>\n                      <th scope=\"col\" className=\"col-2\">\n                        이름\n                      </th>\n                      <th scope=\"col\" className=\"col-2\">\n                        가입일\n                      </th>\n                      <th scope=\"col\" className=\"col-1\">\n                        등급\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-black\">\n                    {memberList.map((member) => (\n                      <tr className=\"text-white\" key={member.no}>\n                        <td className=\"pt-1 pb-1 text-center\">\n                          <input type={\"checkbox\"} checked={list.some((m) => m.no === member.no)} onChange={(e) => onChangeCheck(member, e.target.checked)} />\n                        </td>\n                        <td className=\"pt-1 pb-1 text-sm text-center\">{member.no}</td>\n                        <td className=\"pt-1 pb-1 text-sm text-center\">{member.username}</td>\n                        <td className=\"pt-1 pb-1 text-sm text-center\">{member.nickname}</td>\n                        <td className=\"pt-1 pb-1 text-sm text-center\">{member.name}</td>\n                        <td className=\"pt-1 pb-1 text-sm text-center\">\n                          {member.createdAt.split(\" \")[0]}\n                        </td>\n\n                        <td>\n                          <select\n                            className=\"text-sm text-right bg-black\"\n                            value={member.authorities[0]}\n                            onChange={(e) => {\n                              const newAuthorities = member.authorities.map((auth, index) => index === 0 ? { authority: e.target.value } : auth);\n                              const newRole = e.target.value\n                              setMemberList((prevMemberList) =>\n                                prevMemberList.map((prevMember) => {\n                                  if (prevMember.no === member.no) {\n                                    setList((prevList) => {\n                                      const index = prevList.findIndex((m) => m.no === member.no);\n\n                                      if (isChecked && index === -1) {\n                                        return [...prevList, { no: member.no, roles: newRole }];\n                                      } else if (!isChecked && index !== -1) {\n                                        const newList = [...prevList];\n                                        newList.splice(index, 1);\n                                        return newList;\n                                      } else {\n                                        return prevList;\n                                      }\n                                    })\n                                    return { ...prevMember, authorities: newAuthorities, roles: [newRole] };\n                                  } else {\n                                    return prevMember;\n                                  }\n                                })\n                              );\n                            }}\n                          >\n                            {member.authorities.map((auth) => (auth.authority === 'ADMIN' ?\n\n                              <><option value={'ADMIN'} key={auth}>관리자</option>\n                                <option value={'USER'}>회원</option></> :\n                              <><option value={'USER'} key={auth}>회원</option>\n                                <option value={'ADMIN'}>관리자</option></>\n                            ))}\n                          </select>\n                        </td>\n                      </tr>\n                    ))}\n\n\n                  </tbody>\n                </table>\n                <div\n                  className=\"flex justify-end mt-3\"\n                  style={{ width: \"100%\", borderTop: \"1px solid gray\" }}\n                >\n                  <button className=\"w-16 h-8 mt-3 mr-5 text-sm text-white bg-blue-500 rounded-md hover:bg-blue-600\"\n                    onClick={onSaveRepository}\n                  >\n                    저장\n                  </button>\n                  <button className=\"w-16 h-8 mt-3 text-sm text-white bg-red-500 rounded-md hover:bg-red-600\"\n                    onClick={onDeleteRepository}\n                  >\n                    삭제\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\pages\\admin\\AdminBoard.js",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\routes\\NoMatch.jsx",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\ImgSlide.js",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\ChangeInfo.js",["196","197"],[],"import React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { setAuthentication } from \"../stores/actions\";\n\n\nexport default function ChangeInfo() {\n  const s = [\"남성\", \"여성\"]\n  const [info, setInfo] = useState({\n    username: \"\",\n    name: \"\",\n    nickname: \"\",\n    password: \"\",\n    birth: \"\",\n    sex: \"\",\n  });\n  const [birthday, setBirthday] = useState({\n    year: \"\",\n    month: \"\",\n    day: \"\"\n  })\n  const [password, setPassword] = useState(\"\");\n  const [passwordConf, setPasswordConf] = useState(\"\");\n  const authentication = useSelector(state => state.authentication)\n  const dispatch = useDispatch();\n\n  const editProfile = (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"accessToken\")\n    if (info.password) {\n      if (info.password === passwordConf) {\n        axios.post('/api/auth/editprofile', {\n          nickname: info.nickname,\n          birth: birthday.year + \"-\" + birthday.month + \"-\" + birthday.day,\n          sex: info.sex,\n          password: info.password\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          console.log(res)\n        }).catch(error => {\n          console.log(error)\n        })\n      } else {\n        alert(\"비밀번호가 일치하지 않습니다.\")\n      }\n    } else {\n      axios.post('/api/auth/editprofile', {\n        nickname: info.nickname,\n        birth: birthday.year + \"-\" + birthday.month + \"-\" + birthday.day,\n        sex: info.sex\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        console.log(res)\n      }).catch(error => {\n        console.log(error)\n      })\n    }\n  }\n\n  const onSubmitPassword = (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"accessToken\")\n    axios.post('/api/auth/checkpw', {\n      password: password\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res)\n      if (!res.data) {\n        dispatch(setAuthentication(false))\n        return;\n      }\n      setInfo(res.data)\n      setBirthday({\n        year: res.data.birth.split(\"-\")[0],\n        month: res.data.birth.split(\"-\")[1],\n        day: res.data.birth.split(\"-\")[2]\n      });\n      dispatch(setAuthentication(true))\n    }).catch(error => {\n      console.log(error)\n    })\n    setInfo({\n      ...info,\n      password: \"\"\n    })\n  }\n  useEffect(() => {\n\n  }, [])\n\n  return (\n    <>\n      {authentication ?\n        <div className=\"flex flex-col min-h-screen bg-gray-100 border border-gray-300 shadow-xl rounded-xl\">\n          <div className=\"flex flex-col items-center justify-center flex-1 max-w-sm px-2 mx-auto \">\n            <div className=\"w-full px-6 py-8 text-black bg-white rounded shadow-md\">\n              <h1 className=\"mb-8 text-2xl font-bold text-center text-primary\">\n                정보 수정\n              </h1>\n              이메일\n              <textarea\n                readOnly={true}\n                className=\"w-full p-3 text-sm font-semibold bg-white\"\n                name=\"name\"\n                value={info.username}\n              />\n\n              이름\n              <textarea\n                readOnly={true}\n                className=\"w-full p-3 mb-4 text-sm font-semibold bg-white\"\n                name=\"name\"\n                value={info.name}\n                onChange={(e) => setInfo({ ...info, name: e.target.value })}\n              />\n              닉네임\n              <input\n                className=\"w-full p-3 mb-4 text-sm font-semibold bg-white\"\n                name=\"nickname\"\n                value={info.nickname}\n                onChange={(e) => setInfo({ ...info, nickname: e.target.value })}\n              />\n\n              <input\n                type=\"password\"\n                className=\"w-full p-3 mb-4 text-sm font-semibold bg-white input input-primary\"\n                name=\"password\"\n                placeholder=\"(선택)비밀번호 변경 시 입력해주세요.\"\n                value={info.password}\n                onChange={(e) => setInfo({ ...info, password: e.target.value })}\n              />\n              <input\n                type=\"password\"\n                className=\"w-full p-3 mb-4 text-sm font-semibold bg-white input input-primary\"\n                name=\"confirm_password\"\n                placeholder=\"비밀번호 확인\"\n                value={passwordConf}\n                onChange={(e) => setPasswordConf(e.target.value)}\n              />\n              <hr className=\"mb-4 border-dashed \" />\n              <div className=\"flex\">\n                <input\n                  type=\"text\"\n                  className=\"w-full p-3 mb-4 text-sm font-semibold bg-white input input-primary\"\n                  name=\"\byear\"\n                  placeholder=\"생년(4자)\"\n                  value={birthday.year}\n                  onChange={e => setBirthday({ ...birthday, year: e.target.value })}\n                />\n                <input className=\"w-full mb-4 ml-1 mr-1 text-sm font-semibold bg-white input input-primary\"\n                  placeholder=\"월(2자리)\"\n                  value={birthday.month}\n                  onChange={e => setBirthday({ ...birthday, month: e.target.value })}\n                />\n\n                <input\n                  type=\"text\"\n                  className=\"w-full p-3 mb-4 text-sm font-semibold bg-white input input-primary\"\n                  name=\"day\"\n                  placeholder=\"일(2자리)\"\n                  value={birthday.day}\n                  onChange={e => setBirthday({ ...birthday, day: e.target.value })}\n                />\n              </div>\n              <select className=\"w-full mb-4 text-sm font-semibold bg-white input input-primary\"\n                value={info.sex}\n                onChange={e => setInfo({ ...info, sex: e.target.value })}>\n                {s.map((e) => (\n                  <option key={e} value={e}>{e}</option>\n                ))}\n              </select>\n\n              <button\n                type=\"submit\"\n                className=\"w-full btn btn-primary\"\n                onClick={editProfile}\n              >\n                수정하기\n              </button>\n            </div>\n          </div>\n        </div>\n        :\n        <>\n          <div className=\"flex flex-col min-h-screen bg-gray-100\">\n            <div className=\"flex flex-col items-center justify-center flex-1 max-w-sm px-2 mx-auto w-96\">\n              <div className=\"w-full px-6 py-8 text-black bg-white rounded shadow-md\">\n                <p>비밀번호를 입력해주세요.</p>\n                <input\n                  type=\"password\"\n                  className=\"w-full mb-3 bg-white border-b-2 border-gray-300\"\n                  placeholder=\"비밀번호\"\n                  value={password}\n                  onChange={e => setPassword(e.target.value)}\n                />\n                <button onClick={onSubmitPassword}\n                  className=\"w-full h-12 text-white bg-gray-400 border-none rounded-lg hover:bg-gray-500 active:bg-gray-500\"\n                >확인</button>\n              </div>\n            </div>\n          </div>\n        </>}\n    </>\n  );\n}\n","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\NewNav.js",["198","199","200","201"],[],"import React, { useState, useEffect } from \"react\";\nimport { FaBars, FaTimes } from \"react-icons/fa\";\nimport { Link as LinkScroll } from \"react-scroll\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../stores/actions\";\nimport \"./Navbar.css\";\nimport KakaoLogin from \"./KakaoLogin\";\n\nconst Navbar = () => {\n  const [click, setClick] = useState(false);\n  const handleClick = () => setClick(!click);\n\n  const closeMenu = () => setClick(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate()\n  const users = useSelector(state => state.user);\n  const isLogin = useSelector(state => state.isLoggedIn);\n  const nickName = useSelector(state => state.nickName);\n  const userRole = useSelector(state => state.userRole)\n  const [kpersons, setKPersons] = useState([])\n  const [kakaoNickName, setNickName] = useState(\"\")\n  const [authority, setAuthority] = useState(\"\")\n  const [isAdmin, toggleAdmin] = useState(false)\n\n  useEffect(() => {\n    axios.get(\"kpersons\")\n    .then(res => {\n      setKPersons(res.data)\n    })\n  }, [])\n\n  useEffect(() => {\n    axios.get(\"/getCookie\").then(response => {\n      var arr = response.data.split(\" \")\n      const kakaoNickName = arr[0];\n      const authority = arr[2];\n      console.log(\"nick: \", kakaoNickName)\n      console.log(\"auth: \", authority)\n      setAuthority(authority)\n      setNickName(kakaoNickName)\n    })\n  }, [kpersons])\n\n  useEffect(() => {\n    if(authority === \"admin\" || authority===\"superAdmin\") {\n      toggleAdmin(true)\n    }\n  }, [kakaoNickName, kpersons, authority])\n\n  const handleMyBoard = () => {\n    navigate('/board/my');\n  }\n  const handleChangeInfo = () => {\n    navigate('/ChangeInfo');\n  }\n\n\n  const onLogoutHandler = () => {\n    localStorage.removeItem(\"accessToken\");\n    axios.post('/logout', {}).then(res => console.log(res)).catch(error => console.log(error))\n    dispatch(logout(users))\n    navigate('/')\n  }\n  return (\n    <div className=\"overflow-visible header\">\n      <nav className=\"navbar\">\n        <div className=\"hamburger\" onClick={handleClick}>\n          {click ? (\n            <FaTimes size={30} style={{ color: \"#ffffff\" }} />\n          ) : (\n            <FaBars size={30} style={{ color: \"#ffffff\" }} />\n          )}\n        </div>\n        <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\n          <li className=\"nav-item\">\n            <LinkScroll\n              to=\"hero\"\n              spy={true}\n              smooth={false}\n              offset={0}\n              duration={500}\n              onClick={closeMenu}\n            >\n              Home\n            </LinkScroll>\n          </li>\n          <li className=\"nav-item\">\n            <LinkScroll\n              to=\"robot\"\n              spy={true}\n              smooth={false}\n              offset={0}\n              duration={500}\n              onClick={closeMenu}\n            >\n              Robot\n            </LinkScroll>\n          </li>\n          <li className=\"nav-item\">\n            <LinkScroll\n              to=\"about\"\n              spy={true}\n              smooth={false}\n              offset={0}\n              duration={500}\n              onClick={closeMenu}\n            >\n              About\n            </LinkScroll>\n          </li>\n          <li className=\"nav-item\">\n            <LinkScroll\n              to=\"gallery\"\n              spy={true}\n              smooth={false}\n              offset={0}\n              duration={500}\n              onClick={closeMenu}\n            >\n              Gallery\n            </LinkScroll>\n          </li>\n          <li className=\"nav-item\">\n            <LinkScroll\n              to=\"contact\"\n              spy={true}\n              smooth={false}\n              offset={0}\n              duration={500}\n              onClick={closeMenu}\n            >\n              Contact\n            </LinkScroll>\n          </li>\n          <li className=\"nav-item\">\n            <a href=\"#demo\" onClick={closeMenu}>\n              Team\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a href=\"/board\" onClick={closeMenu}>\n              Board\n            </a>\n          </li>\n        </ul>\n        <ul>\n          {isLogin || kakaoNickName ?\n            <Dropdown>\n              <Dropdown.Toggle\n                variant=\"success\"\n                id=\"dropdown-basic\"\n                style={{ height: \"2rem\", minHeight: \"1rem\" }}\n                className=\"font-bold text-white bg-green-600 border-0 shadow-md hover:bg-green-800\"\n              >\n                {nickName} {kakaoNickName}\n              </Dropdown.Toggle>\n              <Dropdown.Menu className=\"border-0 shadow-sm\">\n\n                <Dropdown.Item href=\"/board/my\" className=\"text-sm\">\n                  내가 쓴 글\n                </Dropdown.Item>\n\n                <Dropdown.Item href=\"/ChangeInfo\" className=\"text-sm\">\n                  정보 변경\n                </Dropdown.Item>\n                {userRole === 'ROLE_ADMIN' ?\n                  <Dropdown.Item href=\"/adminuser\" className=\"text-sm\">\n                    회원 관리\n                  </Dropdown.Item>\n                  : <></>}\n                <Dropdown.Item>\n                  <button onClick={onLogoutHandler}>로그아웃</button>\n                </Dropdown.Item>\n\n\n\n              </Dropdown.Menu>\n            </Dropdown>\n            :\n            <KakaoLogin />\n          }\n          \n\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nwindow.addEventListener(\"scroll\", () => {\n  const test = document.querySelector(\".header\");\n  if (window.scrollY > 100) {\n    test.style.backgroundColor = \"rgba(0, 0, 0, .8)\";\n  } else {\n    test.style.backgroundColor = \"#00ff0000\";\n  }\n});\n\nexport default Navbar;\n","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\NewNavBoard.js",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\Login.jsx",["202","203"],[],"import { RiKakaoTalkFill } from \"react-icons/ri\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { setMessage, login } from \"../stores/actions\";\nimport jwt_decode from 'jwt-decode'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Login() {\n  const isLoggedIn = useSelector(state => state.isLoggedIn);\n  const userRole = useSelector(state => state.userRole);\n  const REST_API_KEY = \"8ef1d7ff4079cc081e948ea0988aafea\";\n  const REDIRECT_URI = \"http://localhost:3000/klogin\";\n\n  const KAKAO_AUTH_URL = `https://kauth.kakao.com/oauth/authorize?client_id=${REST_API_KEY}&redirect_uri=${REDIRECT_URI}&response_type=code&prompt=login;`\n\n  const [kperson, setKPerson] = useState('')\n\n\n  const params = new URLSearchParams(window.location.search);\n  const code = params.get(\"code\");\n\n\n  const navigate = useNavigate()\n\n  const message = useSelector(state => state.message)\n  const isLogin = useSelector(state => state.isLoggedIn);\n  const dispatch = useDispatch();\n\n  const [input, set_input] = useState({\n    id: '',\n    pw: ''\n  })\n  const onClickLogin = (e) => {\n    e.preventDefault();\n\n    axios.post('/api/auth/signin', {\n      username: input.id,\n      password: input.pw\n    }).then(response => {\n      console.log(response)\n      if (response.data != null) {\n        dispatch(setMessage(response.data))\n        console.log(message)\n      }\n      const token = response.headers.authorization;\n      console.log(token)\n      localStorage.setItem(\"accessToken\", token)\n      const decoded = jwt_decode(token)\n      console.log(decoded);\n\n      dispatch(login(decoded.sub));\n      console.log(isLogin);\n      if (!response.data.message) {\n        navigate('/')\n        dispatch(setMessage(\"\"))\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n    set_input({ ...input, pw: \"\" })\n  }\n\n  useEffect(() => {\n    if (code) {\n      axios.get('/klogin',\n        { params: { code: code } }\n      ).then(response => {\n        console.log(response)\n        setKPerson(response.data)\n        window.history.pushState(kperson, null, \"http://localhost:3000/\");\n      })\n    }\n  })\n\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-100 border border-gray-300 shadow-xl rounded-xl\">\n      <div className=\"flex flex-col items-center justify-center flex-1 max-w-sm px-2 mx-auto\">\n        <div className=\"w-full px-6 py-8 text-black bg-white rounded shadow-md\">\n          <h1 className=\"mb-8 text-2xl text-center text-primary\">Login</h1>\n          {message ?\n            <div>{message}</div>\n            :\n            <></>}\n          <form onSubmit={onClickLogin}>\n            <input\n              type=\"text\"\n              className=\"w-full p-3 mb-4 bg-white input input-primary\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={input.id}\n              onChange={(e) => set_input({ ...input, id: e.target.value })}\n            />\n\n            <input\n              type=\"password\"\n              className=\"w-full p-3 mb-4 bg-white input input-primary\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={input.pw}\n              onChange={(e) => set_input({ ...input, pw: e.target.value })}\n            />\n\n            <button\n              type=\"submit\"\n              className=\"w-full font-bold bg-blue-500 border-none btn btn-primary\"\n            >\n              로그인\n            </button>\n          </form>\n          <a href={KAKAO_AUTH_URL}>\n            <button\n              type=\"submit\"\n              className=\"w-full mt-3 font-bold text-black bg-yellow-300 border-none btn btn-warning\"\n            >\n\n              <RiKakaoTalkFill className=\"mr-2 text-2xl\" />\n              카카오로 로그인\n            </button>\n          </a>\n          <div className=\"flex justify-end mt-3\">\n            <Link to=\"/findid\">\n              <p className=\"text-xs\">아이디 찾기</p>\n            </Link>\n            <p className=\"ml-1 mr-1 text-xs text-gray-300\">|</p>\n            <Link to=\"/findpw\">\n              <p className=\"text-xs\">비밀번호 찾기</p>\n            </Link>\n          </div>\n        </div>\n\n        <div className=\"flex mt-6 text-grey-dark\">\n          <p className=\"font-semibold \">회원이 아니신가요?</p>\n          <p\n            herf=\"#\"\n            className=\"ml-3 font-bold text-blue-700 underline underline-offset-2 hover:cursor-pointer\"\n          >\n            <Link to=\"/signup/\">회원가입</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\Omocard.jsx",["204"],[],"import mapimg from \"../img/map.png\";\nimport Button from \"react-bootstrap/Button\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport React, { useState } from \"react\";\nimport { BsBatteryFull } from \"react-icons/bs\";\nimport { FaRunning } from \"react-icons/fa\";\nimport { BsSpeedometer2 } from \"react-icons/bs\";\nimport { ImConnection } from \"react-icons/im\";\nimport Fade from \"react-reveal/Fade\";\nimport { AiFillYoutube } from \"react-icons/ai\";\nimport { AiFillFacebook } from \"react-icons/ai\";\nimport { AiFillInstagram } from \"react-icons/ai\";\nimport { AiOutlineTwitter } from \"react-icons/ai\";\n\nexport default function Omocard() {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [robotNum, setRobotNum] = useState(\"\");\n  return (\n    <div\n      style={{ margin: \"auto\", width: \"870px\" }}\n      id=\"robot\"\n      className=\"pt-20 \"\n    >\n      {/* , overflowX: \"hidden\"  */}\n      <Fade bottom>\n        <p id=\"sectionP\" className=\"text-2xl font-bold\">\n          Robot\n        </p>\n      </Fade>\n      <Fade bottom>\n        <div\n          style={{ height: \"500px\" }}\n          className={\n            menuOpen\n              ? \" duration-500 mt-4 mb-4 flex  bg-white rounded-lg shadow-lg pt-4 pb-4\"\n              : \" duration-500 mt-4 mb-4 flex  bg-white rounded-lg shadow-lg pt-4 pb-4\"\n          }\n          id=\"omocardDiv\"\n        >\n          <div id=\"mapDiv\">\n            <img\n              src={mapimg}\n              className={\n                menuOpen\n                  ? \" rounded-xl scale-0 -ml-16 -mr-40 mt-24 duration-500 opacity-0\"\n                  : \" rounded-xl scale-75 mt-6 duration-500 ml-10\"\n              }\n            />\n          </div>\n\n          <div\n            id=\"omoButton\"\n            className={\n              menuOpen\n                ? \" grid content-center gap-4 -ml-32  duration-500 z-10\"\n                : \" grid content-center gap-4 duration-500 z-10\"\n            }\n          >\n            <div className=\"flex items-center\">\n              <Button\n                variant=\"primary\"\n                className=\"text-xs bg-blue-500 border-none \"\n                onClick={() => {\n                  setMenuOpen((menuOpen) => !menuOpen);\n                  setRobotNum(\"Robot A\");\n                }}\n              >\n                Robot A\n              </Button>\n              <div className=\"flex\">\n                <ProgressBar now={60} className=\"w-20 mt-1 ml-3\" />\n                <p className=\"ml-2 text-sm\">(60%)</p>\n              </div>\n            </div>\n            <div className=\"flex items-center\">\n              <Button\n                variant=\"success\"\n                className=\"text-xs text-white bg-green-500 border-none hover:bg-green-600\"\n                onClick={() => {\n                  setMenuOpen((menuOpen) => !menuOpen);\n                  setRobotNum(\"Robot B\");\n                }}\n              >\n                Robot B\n              </Button>{\" \"}\n              <div className=\"flex\">\n                <ProgressBar now={80} className=\"w-20 mt-1 ml-3\" />\n                <p className=\"ml-2 text-sm\">(80%)</p>\n              </div>\n            </div>\n            <div className=\"flex items-center\">\n              <Button\n                variant=\"danger\"\n                className=\"text-xs text-white bg-red-500 border-none hover:bg-red-700\"\n                onClick={() => {\n                  setMenuOpen((menuOpen) => !menuOpen);\n                  setRobotNum(\"Robot C\");\n                }}\n              >\n                Robot C\n              </Button>{\" \"}\n              <div className=\"flex\">\n                <ProgressBar now={100} className=\"w-20 mt-1 ml-3\" />\n                <p className=\"ml-2 text-sm\">(100%)</p>\n              </div>\n            </div>\n          </div>\n          <div\n            id=\"omoState\"\n            className={\n              menuOpen\n                ? \"  rounded-lg w-80  z-0 ml-10 duration-500 shadow-lg\"\n                : \"  rounded-lg w-80  z-0 -mr-96 duration-500 opacity-0 shadow-lg\"\n            }\n          >\n            <div className=\"font-bold bg-indigo-700 rounded-t-lg \">\n              <p className=\"text-center text-white\">{robotNum}</p>\n            </div>\n            <div className=\"flex justify-center mt-7\" id=\"batteryInfo\">\n              <div className=\"flex mt-4 col-10 h-13\">\n                <BsBatteryFull className=\"text-2xl text-blue-500\" />\n                <p className=\"mt-1 ml-3 text-sm font-bold \">배터리</p>\n              </div>\n            </div>\n            <div className=\"flex justify-center\">\n              <div className=\"flex mt-4 col-10 h-13\">\n                <FaRunning className=\"text-2xl text-blue-500\" />\n                <p className=\"mt-1 ml-3 text-sm font-bold \">구동시간</p>\n              </div>\n            </div>\n            <div className=\"flex justify-center\">\n              <div className=\"flex mt-4 col-10 h-13\">\n                <BsSpeedometer2 className=\"text-2xl text-blue-500\" />\n                <p className=\"mt-1 ml-3 text-sm font-bold \">속도</p>\n              </div>\n            </div>\n            <div className=\"flex justify-center\">\n              <div className=\"flex mt-4 col-10 h-13\">\n                <ImConnection className=\"text-2xl text-blue-500\" />\n                <p className=\"mt-1 ml-3 text-sm font-bold \">연결상태</p>\n              </div>\n            </div>\n            <Button\n              variant=\"primary\"\n              className=\"mt-5 ml-8 font-semibold bg-blue-500 border-none \"\n            >\n              제어하기\n            </Button>\n          </div>\n        </div>\n      </Fade>\n      <Fade bottom>\n        <div\n          className=\"flex justify-between mt-5 bg-white rounded-lg shadow-lg\"\n          id=\"omoInfo\"\n        >\n          <div>\n            <p className=\"p-4 text-lg font-bold \" id=\"omoP\">\n              오모로봇의 다양한 정보를 확인해보세요.\n            </p>\n          </div>\n          <div className=\"flex items-center \" id=\"infoIcons\">\n            <div className=\"flex items-center justify-center w-12 h-12 mr-4 bg-gray-100 rounded-full cursor-pointer hover:text-red-500\">\n              <AiFillYoutube className=\"text-3xl\" />\n            </div>\n            <div className=\"flex items-center justify-center w-12 h-12 mr-4 bg-gray-100 rounded-full cursor-pointer hover:text-sky-700\">\n              <AiFillFacebook className=\"text-3xl\" />\n            </div>\n            <div className=\"flex items-center justify-center w-12 h-12 mr-4 bg-gray-100 rounded-full cursor-pointer hover:text-fuchsia-700\">\n              {\" \"}\n              <AiFillInstagram className=\"text-3xl\" />\n            </div>\n            <div\n              id=\"twitterIcon\"\n              className=\"flex items-center justify-center w-12 h-12 mr-4 bg-gray-100 rounded-full cursor-pointer hover:text-blue-500\"\n            >\n              {\" \"}\n              <AiOutlineTwitter className=\"text-3xl\" />\n            </div>\n          </div>\n        </div>\n      </Fade>\n    </div>\n  );\n}\n","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\KakaoMap.jsx",["205","206","207","208","209","210"],[],"/*global kakao */\nimport React, { useEffect } from \"react\";\nimport { TbMap2 } from \"react-icons/tb\";\nimport { AiOutlineMail } from \"react-icons/ai\";\nimport { AiOutlinePhone } from \"react-icons/ai\";\nimport { useState } from \"react\";\nimport Fade from \"react-reveal/Fade\";\n\nexport default function KakaoMap() {\n  useEffect(() => {\n    mapscript();\n  }, []);\n\n  const [mouseOver, setMouseOver] = useState(false);\n  const [mouseOverTwo, setMouseOverTwo] = useState(false);\n  const [mouseOverThree, setMouseOverThree] = useState(false);\n\n  const mapscript = () => {\n    let container = document.getElementById(\"map\");\n    let options = {\n      center: new kakao.maps.LatLng(36.34851082043921, 127.382162385308),\n      level: 4,\n    };\n    //map\n    const map = new kakao.maps.Map(container, options);\n\n    //마커가 표시 될 위치\n    let markerPosition = new kakao.maps.LatLng(\n      36.34851082043921,\n      127.382162385308\n    );\n\n    // 마커를 생성\n    let marker = new kakao.maps.Marker({\n      position: markerPosition,\n    });\n\n    // 마커를 지도 위에 표시\n    marker.setMap(map);\n  };\n\n  return (\n    <div\n      style={{ margin: \"auto\", width: \"870px\" }}\n      id=\"contact\"\n      className=\"pt-20\"\n    >\n      <Fade bottom>\n        <p id=\"kakaoMapP\" className=\"text-2xl font-bold\">\n          Contact Us\n        </p>\n      </Fade>\n      <Fade bottom>\n        <div\n          id=\"kakaoMapDiv\"\n          className=\"mt-4 mb-3 bg-white rounded-lg shadow-md\"\n          style={{ height: \"300px\" }}\n        >\n          <div\n            className=\"rounded-lg shadow-md\"\n            id=\"map\"\n            style={{ height: \"300px\" }}\n          ></div>\n        </div>\n      </Fade>\n      <div className=\"flex mt-16 mb-16\" id=\"mailDiv\">\n        <div id=\"companyInfo\">\n          <div className=\"flex\">\n            <div className=\"flex items-center justify-center w-12 h-12 bg-blue-500 rounded-full\">\n              <TbMap2 className=\"text-3xl text-white\" />\n            </div>\n            <div className=\"grid ml-3\">\n              <div>\n                <p className=\"text-sm font-bold\">주소</p>\n              </div>\n              <div>\n                <p className=\"text-sm\">\n                  대전 서구 계룡로491번길 86 미래융합교육원\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex mt-5\" id=\"mailInfo\">\n            <div className=\"flex items-center justify-center w-12 h-12 bg-blue-500 rounded-full\">\n              <AiOutlineMail className=\"text-3xl text-white\" />\n            </div>\n            <div className=\"grid ml-3\">\n              <div>\n                <p className=\"text-sm font-bold\">메일</p>\n              </div>\n              <div>\n                <p className=\"text-sm\">omorobot123@sample.com</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex mt-5\" id=\"telInfo\">\n            <div className=\"flex items-center justify-center w-12 h-12 bg-blue-500 rounded-full\">\n              <AiOutlinePhone className=\"text-3xl text-white\" />\n            </div>\n            <div className=\"grid ml-3\">\n              <div>\n                <p className=\"text-sm font-bold\">연락처</p>\n              </div>\n              <div>\n                <p className=\"text-sm\">042-333-0000</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div id=\"sendMail\" style={{ flexGrow: 2 }} className=\"ml-32 bg-white \">\n          <div className=\"flex justify-between\">\n            <div style={{ width: \"40%\" }}>\n              <input\n                type=\"text\"\n                className=\"p-1 mr-3 text-sm bg-white border-2 border-gray-300 placeholder:text-gray-400\"\n                style={{ width: \"100%\" }}\n                placeholder=\"이름\"\n              />\n            </div>\n\n            <div style={{ width: \"60%\" }} className=\"ml-3\">\n              <input\n                type=\"text\"\n                className=\"p-1 text-sm bg-white border-2 border-gray-300 placeholder:text-gray-400 \"\n                style={{ width: \"100%\" }}\n                placeholder=\"이메일\"\n              />\n            </div>\n          </div>\n          <div>\n            <div>\n              <input\n                type=\"text\"\n                className=\"p-1 mt-3 text-sm bg-white border-2 border-gray-300 placeholder:text-gray-400\"\n                style={{ width: \"100%\" }}\n                placeholder=\"제목\"\n              />\n            </div>\n            <div>\n              <textarea\n                name=\"\"\n                id=\"\"\n                cols=\"30\"\n                rows=\"10\"\n                required\n                className=\"h-40 p-1 mt-3 text-sm bg-white border-2 border-gray-300 resize-none placeholder:text-gray-400\"\n                style={{ width: \"100%\" }}\n                placeholder=\"내용\"\n              ></textarea>\n            </div>\n          </div>\n          <div className=\"flex justify-center\">\n            <button className=\"w-32 h-10 mt-3 text-sm font-bold text-white bg-red-500 rounded-3xl hover:bg-red-600\">\n              보내기\n            </button>\n          </div>\n        </div>\n      </div>\n      {/* <Fade bottom>\n        <div className=\"flex justify-between\">\n          <div\n            id=\"map-card\"\n            className={\n              mouseOver\n                ? \"grid items-center h-48 mb-4 bg-blue-500 rounded-lg shadow-lg duration-300\"\n                : \"grid items-center h-48 mb-4 bg-white rounded-lg shadow-lg duration-300\"\n            }\n            onMouseOver={() => {\n              setMouseOver((mouseOver) => !mouseOver);\n            }}\n            onMouseLeave={() => {\n              setMouseOver((mouseOver) => !mouseOver);\n            }}\n            style={{ width: \"360px\" }}\n          >\n            <div className=\"grid items-center justify-center lign-middle\">\n              <div className=\"flex justify-center mb-2\">\n                <p className=\"text-5xl text-center\">\n                  <TbMap2\n                    className={\n                      mouseOver\n                        ? \" text-white duration-300\"\n                        : \"text-blue-500 duration-300\"\n                    }\n                  />\n                </p>\n              </div>\n              <p\n                className={\n                  mouseOver\n                    ? \" mb-2 text-lg font-bold text-center text-white duration-300\"\n                    : \"mb-2 text-lg font-bold text-center duration-300\"\n                }\n              >\n                주소\n              </p>\n              <p\n                className={\n                  mouseOver ? \"  text-white duration-300\" : \" duration-300\"\n                }\n              >\n                대전 서구 계룡로491번길 86 미래융합교육원\n              </p>\n            </div>\n          </div>\n          <div\n            id=\"map-card\"\n            className={\n              mouseOverTwo\n                ? \"grid items-center h-48 mb-4 bg-blue-500 rounded-lg shadow-lg duration-300\"\n                : \"grid items-center h-48 mb-4 bg-white rounded-lg shadow-lg duration-300\"\n            }\n            onMouseOver={() => {\n              setMouseOverTwo((mouseOverTwo) => !mouseOverTwo);\n            }}\n            onMouseLeave={() => {\n              setMouseOverTwo((mouseOverTwo) => !mouseOverTwo);\n            }}\n            style={{ width: \"360px\" }}\n          >\n            <div className=\"grid items-center justify-center lign-middle\">\n              <div className=\"flex justify-center mb-2\">\n                <p className=\"text-5xl text-center\">\n                  <AiOutlineMail\n                    className={\n                      mouseOverTwo\n                        ? \" text-white duration-300\"\n                        : \"text-blue-500 duration-300\"\n                    }\n                  />\n                </p>\n              </div>\n              <p\n                className={\n                  mouseOverTwo\n                    ? \" mb-2 text-lg font-bold text-center text-white duration-300\"\n                    : \"mb-2 text-lg font-bold text-center duration-300\"\n                }\n              >\n                메일\n              </p>\n              <p\n                className={\n                  mouseOverTwo ? \"  text-white duration-300\" : \" duration-300\"\n                }\n              >\n                omorobot123@sample.com\n              </p>\n            </div>\n          </div>\n          <div\n            id=\"map-card\"\n            className={\n              mouseOverThree\n                ? \"grid items-center h-48 mb-4 bg-blue-500 rounded-lg shadow-lg duration-300\"\n                : \"grid items-center h-48 mb-4 bg-white rounded-lg shadow-lg duration-300\"\n            }\n            onMouseOver={() => {\n              setMouseOverThree((mouseOverThree) => !mouseOverThree);\n            }}\n            onMouseLeave={() => {\n              setMouseOverThree((mouseOverThree) => !mouseOverThree);\n            }}\n            style={{ width: \"360px\" }}\n          >\n            <div className=\"grid items-center justify-center lign-middle\">\n              <div className=\"flex justify-center mb-2\">\n                <p className=\"text-5xl text-center\">\n                  <AiOutlinePhone\n                    className={\n                      mouseOverThree\n                        ? \" text-white duration-300\"\n                        : \"text-blue-500 duration-300\"\n                    }\n                  />\n                </p>\n              </div>\n              <p\n                className={\n                  mouseOverThree\n                    ? \" mb-2 text-lg font-bold text-center text-white duration-300\"\n                    : \"mb-2 text-lg font-bold text-center duration-300\"\n                }\n              >\n                연락처\n              </p>\n              <p\n                className={\n                  mouseOverThree ? \"  text-white duration-300\" : \" duration-300\"\n                }\n              >\n                042-330-0000\n              </p>\n            </div>\n          </div>\n        </div>\n      </Fade> */}\n    </div>\n  );\n}\n","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\Footer.jsx",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\Hero.jsx",["211","212"],[],"import heroImg from \"../img/IMG_8197.jpg\";\nimport Fade from \"react-reveal/Fade\";\n\nexport default function Hero() {\n  return (\n    <div>\n      <div\n        className=\"flex items-center justify-center h-screen bg-fixed\"\n        style={{\n          backgroundImage: \"url(/img/IMG_8197.jpg)\",\n          backgroundSize: \"cover\",\n          backgroundColor: \"gray\",\n          backgroundBlendMode: \"multiply\",\n        }}\n        id=\"hero\"\n      >\n        {/* <img src={heroImg} alt=\"\" /> */}\n      </div>\n      {/* <Fade>\n        <div className=\"absolute top-60 left-16\">\n          <p className=\"fixed text-6xl text-white\">OMOROBOT</p>\n        </div>\n      </Fade>\n\n      <div className=\"absolute top-80 left-16\">\n        <Fade left>\n          <p className=\"fixed text-4xl text-white\">\n            To understand the heart and mind of a person,\n          </p>\n        </Fade>\n      </div>\n\n      <div className=\"absolute top-96 left-16\">\n        <Fade left>\n          <p className=\"fixed text-4xl text-white\">\n            look not at what he has already achieved, but at what he aspires to\n            do.\n          </p>\n        </Fade>\n      </div> */}\n    </div>\n  );\n}\n","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\Whats.jsx",[],[],"C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\SignUp.jsx",["213","214","215","216","217","218","219"],[],"import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { data } from \"autoprefixer\";\n\nexport default function SignUp() {\n  const [info, setInfo] = useState({\n    username: \"\",\n    password: \"\",\n    passwordChk: \"\",\n    name: \"\",\n    nickname: \"\",\n    birth: \"\",\n    sex: \"\",\n  });\n\n  const month = [\n    \"01\",\n    \"02\",\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\",\n    \"09\",\n    \"10\",\n    \"11\",\n    \"12\",\n  ];\n  const [selectyear, setselectyear] = useState(\"2000\");\n  const [selected, setselect] = useState(\"01\");\n  const [selectday, setselectday] = useState(\"01\");\n  const [select_s, setselect_s] = useState(\"---\");\n  const [checkEmail, setCheckEmail] = useState(\"\");\n  const [emailMessage, setEmailMessage] = useState(\"\");\n  const [isComplete, setComplete] = useState(false);\n\n  let CheckEmailMessage = \"\";\n  let isCheck_id = false;\n  let date = new Date();\n  let lastyear = date.getUTCFullYear();\n  let Days = [];\n  let years = [];\n  let i = 1;\n  let lastday = 32;\n  let mon = selected;\n  let y = selectyear;\n  const s = [\"---\", \"남성\", \"여성\"];\n  const sexoption = (e) => {\n    setselect_s(e.target.value);\n    setInfo({ ...info, sex: e.target.value });\n  };\n\n  const checkId = (e) => {\n    e.preventDefault();\n    const isValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(info.username);\n    if (!isValid) {\n      CheckEmailMessage = \"이메일 형식을 확인해주세요.\";\n      setEmailMessage(CheckEmailMessage);\n      return;\n    }\n    console.log(info.username);\n    axios\n      .post(\"/api/auth/checkid\", {\n        username: info.username,\n      })\n      .then((res) => {\n        console.log(res.data.check);\n        if (res.data.check == false) {\n          alert(\"존재하는 이메일입니다.\");\n          setEmailMessage(\"\");\n          isCheck_id = false;\n        } else {\n          alert(\"사용가능한 이메일입니다.\\n인증코드를 입력해주세요.\");\n          isCheck_id = true;\n          setEmailMessage(\"\");\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  info.birth = selectyear + \"-\" + selected + \"-\" + selectday;\n  const year_option = (e) => {\n    setselectyear(e.target.value);\n    setInfo({ ...info, birth: selectyear });\n  };\n\n  const monthoption = (e) => {\n    setselect(e.target.value);\n    setInfo({ ...info, birth: selectyear + \"-\" + selected });\n  };\n\n  const dayoption = (e) => {\n    setselectday(e.target.value);\n    setInfo({ ...info, birth: selectyear + \"-\" + selected + \"-\" + selectday });\n  };\n  let leapyear = 0;\n  for (let v = 1900; v < lastyear + 1; v++) {\n    const year = [`${v}`];\n    years = [...years, year];\n  }\n  y = y.slice(0, 4);\n  if (y % 400 === 0 || (y % 100 !== 0 && y % 4 === 0)) {\n    leapyear = 1;\n  }\n\n  if (mon === \"2\") {\n    lastday = 29 + leapyear;\n  }\n  if (mon === \"4\" || mon === \"6\" || mon === \"9\" || mon === \"11\") {\n    lastday = 31;\n  }\n\n  for (i; i < lastday; i++) {\n    if (i < 10) {\n      const day = [`0${i}`];\n      Days = [...Days, day];\n    } else {\n      const day = [`${i}`];\n      Days = [...Days, day];\n    }\n  }\n  const navigate = useNavigate();\n\n  const HandlerSignUp = (e) => {\n    e.preventDefault();\n\n    if (isComplete == false) {\n      return alert(\"이메일 인증을 완료해주세요.\");\n    } else if (info.password != info.passwordChk) {\n      return alert(\"비밀번호가 일치하지 않습니다.\");\n    }\n    console.log(info);\n    axios\n      .post(\"/api/auth/signup\", {\n        username: info.username,\n        password: info.password,\n        name: info.name,\n        nickname: info.nickname,\n        birth: selectyear + \"-\" + selected + \"-\" + selectday,\n        sex: info.sex,\n      })\n      .then((res) => {\n        console.log(res)\n        alert(\"가입이 완료되었습니다.\")\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const CheckNicknameHandler = (e) => {\n    e.preventDefault();\n    if (info.nickname.length < 2) {\n      alert(\"닉네임 양식에 맞지 않습니다.\")\n      return;\n    }\n    axios.post('/api/auth/check_nickname', {\n      nickname: info.nickname\n    }).then(res => console.log(res.data)).catch(error => console.log(error))\n  }\n\n  const CheckEmailHandler = (e) => {\n    e.preventDefault();\n    axios\n      .post(\"/auth/login/check\", {\n        email: info.username,\n        code: checkEmail,\n      })\n      .then((res) => {\n        console.log(res);\n        alert(\"인증이 완료되었습니다.\");\n        setComplete(true);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gray-100 border border-gray-300 shadow-xl rounded-xl\">\n      <div className=\"flex flex-col items-center justify-center flex-1 max-w-sm px-2 mx-auto \">\n        <div className=\"px-6 py-8 text-black bg-white rounded shadow-md w-80\">\n          <h1 className=\"mb-8 text-2xl text-center text-primary\">Sign Up</h1>\n          <div className=\"\">\n            <div className=\"flex justify-between w-full align-middle \">\n              <input\n                className=\"w-48 h-5 p-3 text-sm font-semibold bg-white border-blue-500 rounded-md input input-primary\"\n                placeholder=\"이메일\"\n                style={{ boxSizing: \"borderBox\" }}\n                type=\"text\"\n                value={info.username}\n                onChange={(e) => {\n                  setInfo({ ...info, username: e.target.value });\n                  isCheck_id = false;\n                }}\n              />\n              <button\n                onClick={checkId}\n                className=\"w-16 h-8 text-sm text-white bg-blue-500 rounded-md\"\n              >\n                중복확인\n              </button>\n            </div>\n            <div className=\"flex\">\n              <p className=\"ml-4 text-sm\">{emailMessage}</p>\n              <p className=\"text-white\">.</p>\n            </div>\n          </div>\n\n          <div className=\"flex justify-between mb-3\">\n            <input\n              className=\"w-48 h-5 p-3 text-sm font-semibold bg-white border-blue-500 rounded-md input input-primary\"\n              placeholder=\"인증번호를 입력해 주세요.\"\n              type=\"text\"\n              value={checkEmail}\n              onChange={(e) => {\n                setCheckEmail(e.target.value)\n                setComplete(false)\n              }}\n            />\n            {isComplete ? (\n              <button>인증완료</button>\n            ) : (\n              <button\n                className=\"w-16 h-8 text-sm text-white bg-blue-500 rounded-md\"\n                onClick={CheckEmailHandler}\n              >\n                인증\n              </button>\n            )}\n          </div>\n\n          <input\n            className=\"w-48 h-5 p-3 mb-3 text-sm font-semibold bg-white border-blue-500 rounded-md input input-primary\"\n            placeholder=\"비밀번호\"\n            type=\"password\"\n            value={info.password}\n            onChange={(e) => setInfo({ ...info, password: e.target.value })}\n          />\n          <input\n            className=\"w-48 h-5 p-3 mb-3 text-sm font-semibold bg-white border-blue-500 rounded-md input input-primary\"\n            placeholder=\"비밀번호 확인\"\n            type=\"password\"\n            value={info.passwordChk}\n            onChange={(e) => setInfo({ ...info, passwordChk: e.target.value })}\n          />\n          <input\n            className=\"w-48 h-5 p-3 mb-3 text-sm font-semibold bg-white border-blue-500 rounded-md input input-primary\"\n            placeholder=\"이름\"\n            type=\"text\"\n            value={info.name}\n            onChange={(e) => setInfo({ ...info, name: e.target.value })}\n          />\n\n          <input\n            className=\"w-48 h-5 p-3 mb-3 text-sm font-semibold bg-white border-blue-500 rounded-md input input-primary\"\n            placeholder=\"닉네임\"\n            type=\"text\"\n            value={info.nickname}\n            onChange={(e) => setInfo({ ...info, nickname: e.target.value })}\n          />\n\n          <button onClick={CheckNicknameHandler}>중복확인</button>\n\n          <hr className=\"mb-3 border-dashed \" />\n          <p className=\"mb-1 text-sm\">생년월일</p>\n          <div className=\"flex mb-3\">\n            <select\n              className=\"h-8 mr-1 text-sm font-semibold bg-white border-blue-500 rounded-md w-22 input input-primary\"\n              onChange={year_option}\n              value={selectyear}\n            >\n              {years.map((year) => (\n                <option value={year} key={year}>\n                  {year}\n                </option>\n              ))}\n            </select>\n            <select\n              onChange={monthoption}\n              value={selected}\n              className=\"w-full h-8 ml-1 mr-1 text-sm font-semibold bg-white border-blue-500 rounded-md input input-primary\"\n            >\n              {month.map((item) => (\n                <option value={item} key={item}>\n                  {item}\n                </option>\n              ))}\n            </select>\n            <select\n              onChange={dayoption}\n              value={selectday}\n              className=\"w-full h-8 ml-1 text-sm font-semibold bg-white border-blue-500 rounded-md input input-primary\"\n            >\n              {Days.map((Day) => (\n                <option value={Day} key={Day}>\n                  {Day}\n                </option>\n              ))}\n            </select>\n          </div>\n          <p className=\"mb-1 text-sm\">성별</p>\n          <select\n            onChange={sexoption}\n            value={select_s}\n            className=\"h-8 mb-4 text-sm font-semibold bg-white border-blue-500 rounded-md w-30 input input-primary\"\n          >\n            {s.map((s) => (\n              <option value={s} key={s}>\n                {s}\n              </option>\n            ))}\n          </select>\n          <form onSubmit={HandlerSignUp}>\n            <input\n              type=\"submit\"\n              className=\"w-full bg-blue-500 border-none btn btn-primary\"\n              value=\"가입하기\"\n            />\n          </form>\n        </div>\n\n        <div className=\"flex content-center justify-center mt-3 text-grey-dark\">\n          <p className=\"mt-1 text-sm font-semibol \">이미 가입을 하셨나요?</p>\n          <p\n            herf=\"#\"\n            className=\"ml-3 font-bold text-blue-700 underline underline-offset-2 hover:cursor-pointer\"\n          >\n            <Link to=\"/login\" className=\"text-sm\">\n              로그인\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\zmzm3\\git\\omo\\omo-prj\\src\\main\\react-prj-sample-main\\src\\components\\KakaoLogin.js",["220"],["221"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction KakaoLogin() {\r\n    const [, , removeCookie] = useCookies('nickName')\r\n\r\n    const KAKAO_LOGOUT_URL = `http://localhost:3000/klogout`\r\n\r\n    const [kperson, setKPerson] = useState('')\r\n    const [nickName, setNickName] = useState('')\r\n    const [authority, setAuthority] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const params = new URLSearchParams(window.location.search);\r\n    const code = params.get(\"code\");\r\n\r\n    function deleteCookie() {\r\n        removeCookie('nickName');   \r\n        axios.get('/deleteCookie')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(code !== null) {\r\n            axios.get('/klogin',\r\n                    {params: {code: code}}\r\n                ).then(response => { \r\n                    setKPerson(response.data)\r\n                    window.location.assign(\"http://localhost:3000\")\r\n                })\r\n            }\r\n    }, [code, email, kperson, nickName])\r\n\r\n    useEffect(()=> {\r\n        // if(kperson !== \"\" && kperson !== null) {\r\n            axios.get(\"/getCookie\").then(response => {\r\n                var arr = response.data.split(\" \")\r\n                const nickName = arr[0];\r\n                const email = arr[1];\r\n                const authority = arr[2];\r\n    \r\n                setNickName(nickName)\r\n                setEmail(email)\r\n                setAuthority(authority)\r\n            })\r\n        // }\r\n    }, [kperson])\r\nconsole.log(nickName)\r\n    useEffect(() => {\r\n        if(nickName !== \"\") {\r\n            axios.post(\"/addkperson\", null, {\r\n                params: {\r\n                    nick_name: nickName,\r\n                    email: email,\r\n                    authority: authority,\r\n                }\r\n            })\r\n        }\r\n    }, [email, nickName])\r\n\r\n    const POSTURI = \"http://localhost:3000/post/list\"//eslint-disable-line no-unused-vars\r\n\r\n    if (nickName) {\r\n        return  <>\r\n                    <p className=\"text-white nav-item\">{nickName}</p>\r\n                    <a className=\"w-16 h-8\" href={KAKAO_LOGOUT_URL} id=\"logout\" onClick={deleteCookie}>\r\n                        <button className=\"w-16 h-8 text-white bg-blue-600 border-none rounded-md hover:bg-blue-800\">\r\n                            Logout\r\n                        </button>\r\n                    </a>\r\n                </>\r\n    } else {\r\n        return  <button className=\"w-16 h-8 text-white bg-blue-600 border-none rounded-md hover:bg-blue-800\">\r\n                    <Link to=\"/login\">Login</Link>\r\n                </button>\r\n    }\r\n\r\n}\r\n\r\nexport default KakaoLogin;",{"ruleId":"222","severity":1,"message":"223","line":22,"column":9,"nodeType":"224","messageId":"225","endLine":22,"endColumn":19},{"ruleId":"222","severity":1,"message":"226","line":3,"column":20,"nodeType":"224","messageId":"225","endLine":3,"endColumn":25},{"ruleId":"222","severity":1,"message":"227","line":16,"column":9,"nodeType":"224","messageId":"225","endLine":16,"endColumn":17},{"ruleId":"222","severity":1,"message":"226","line":3,"column":20,"nodeType":"224","messageId":"225","endLine":3,"endColumn":25},{"ruleId":"222","severity":1,"message":"228","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":9},{"ruleId":"222","severity":1,"message":"229","line":4,"column":10,"nodeType":"224","messageId":"225","endLine":4,"endColumn":14},{"ruleId":"230","severity":1,"message":"231","line":41,"column":24,"nodeType":"232","messageId":"233","endLine":41,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":76,"column":26,"nodeType":"232","messageId":"233","endLine":76,"endColumn":28},{"ruleId":"222","severity":1,"message":"234","line":2,"column":17,"nodeType":"224","messageId":"225","endLine":2,"endColumn":25},{"ruleId":"222","severity":1,"message":"229","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":14},{"ruleId":"222","severity":1,"message":"235","line":2,"column":29,"nodeType":"224","messageId":"225","endLine":2,"endColumn":44},{"ruleId":"230","severity":1,"message":"231","line":58,"column":39,"nodeType":"232","messageId":"233","endLine":58,"endColumn":41},{"ruleId":"236","severity":1,"message":"237","line":75,"column":6,"nodeType":"238","endLine":75,"endColumn":8,"suggestions":"239"},{"ruleId":"222","severity":1,"message":"240","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":14},{"ruleId":"222","severity":1,"message":"229","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":14},{"ruleId":"222","severity":1,"message":"229","line":4,"column":10,"nodeType":"224","messageId":"225","endLine":4,"endColumn":14},{"ruleId":"222","severity":1,"message":"241","line":26,"column":10,"nodeType":"224","messageId":"225","endLine":26,"endColumn":17},{"ruleId":"222","severity":1,"message":"242","line":53,"column":9,"nodeType":"224","messageId":"225","endLine":53,"endColumn":22},{"ruleId":"222","severity":1,"message":"243","line":56,"column":9,"nodeType":"224","messageId":"225","endLine":56,"endColumn":25},{"ruleId":"222","severity":1,"message":"223","line":10,"column":9,"nodeType":"224","messageId":"225","endLine":10,"endColumn":19},{"ruleId":"222","severity":1,"message":"244","line":11,"column":9,"nodeType":"224","messageId":"225","endLine":11,"endColumn":17},{"ruleId":"245","severity":1,"message":"246","line":41,"column":13,"nodeType":"247","endLine":48,"endColumn":15},{"ruleId":"222","severity":1,"message":"248","line":14,"column":10,"nodeType":"224","messageId":"225","endLine":14,"endColumn":19},{"ruleId":"222","severity":1,"message":"249","line":14,"column":21,"nodeType":"224","messageId":"225","endLine":14,"endColumn":33},{"ruleId":"222","severity":1,"message":"250","line":15,"column":10,"nodeType":"224","messageId":"225","endLine":15,"endColumn":22},{"ruleId":"222","severity":1,"message":"251","line":15,"column":24,"nodeType":"224","messageId":"225","endLine":15,"endColumn":39},{"ruleId":"222","severity":1,"message":"252","line":16,"column":10,"nodeType":"224","messageId":"225","endLine":16,"endColumn":24},{"ruleId":"222","severity":1,"message":"253","line":16,"column":26,"nodeType":"224","messageId":"225","endLine":16,"endColumn":43},{"ruleId":"222","severity":1,"message":"254","line":1,"column":8,"nodeType":"224","messageId":"225","endLine":1,"endColumn":15},{"ruleId":"222","severity":1,"message":"255","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":12},{"ruleId":"222","severity":1,"message":"240","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":14},{"ruleId":"222","severity":1,"message":"256","line":5,"column":10,"nodeType":"224","messageId":"225","endLine":5,"endColumn":14},{"ruleId":"222","severity":1,"message":"257","line":41,"column":7,"nodeType":"224","messageId":"225","endLine":41,"endColumn":17},{"ruleId":"230","severity":1,"message":"231","line":71,"column":28,"nodeType":"232","messageId":"233","endLine":71,"endColumn":30},{"ruleId":"222","severity":1,"message":"227","line":125,"column":9,"nodeType":"224","messageId":"225","endLine":125,"endColumn":17},{"ruleId":"230","severity":1,"message":"231","line":130,"column":20,"nodeType":"232","messageId":"233","endLine":130,"endColumn":22},{"ruleId":"230","severity":1,"message":"258","line":132,"column":30,"nodeType":"232","messageId":"233","endLine":132,"endColumn":32},{"ruleId":"236","severity":1,"message":"259","line":62,"column":8,"nodeType":"238","endLine":62,"endColumn":25,"suggestions":"260"},{"ruleId":"222","severity":1,"message":"261","line":64,"column":11,"nodeType":"224","messageId":"225","endLine":64,"endColumn":18,"suppressions":"262"},"no-unused-vars","'isLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'Route' is defined but never used.","'navigate' is assigned a value but never used.","'e' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useSearchParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["263"],"'Select' is defined but never used.","'isAdmin' is assigned a value but never used.","'handleMyBoard' is assigned a value but never used.","'handleChangeInfo' is assigned a value but never used.","'userRole' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'mouseOver' is assigned a value but never used.","'setMouseOver' is assigned a value but never used.","'mouseOverTwo' is assigned a value but never used.","'setMouseOverTwo' is assigned a value but never used.","'mouseOverThree' is assigned a value but never used.","'setMouseOverThree' is assigned a value but never used.","'heroImg' is defined but never used.","'Fade' is defined but never used.","'data' is defined but never used.","'isCheck_id' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'authority'. Either include it or remove the dependency array.",["264"],"'POSTURI' is assigned a value but never used.",["265"],{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"kind":"270","justification":"271"},"Update the dependencies array to be: [token]",{"range":"272","text":"273"},"Update the dependencies array to be: [authority, email, nickName]",{"range":"274","text":"275"},"directive","",[1966,1968],"[token]",[1916,1933],"[authority, email, nickName]"]